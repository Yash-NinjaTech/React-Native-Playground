// This file is auto-generated by @hey-api/openapi-ts

export const $ConfigWebFindOneResponseDto = {
    type: ['object'],
    properties: {
        tenant: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid',
                    example: '947f66ec-addd-4ab2-baa7-49ead507284f'
                },
                company_id: {
                    type: ['string'],
                    format: 'uuid',
                    example: 'a15db418-40ef-4af0-a735-31ecff1b20fc'
                },
                name: {
                    type: ['string'],
                    example: 'Simplenight'
                },
                slug: {
                    type: ['string'],
                    example: 'wl'
                },
                url: {
                    type: ['string'],
                    description: 'Hostname',
                    example: 'wl.v4.simplenight.com'
                },
                login: {
                    type: ['string'],
                    enum: ['Public', 'Restricted'],
                    example: 'Public'
                },
                register: {
                    type: ['string'],
                    enum: ['Public', 'Restricted'],
                    example: 'Public'
                },
                allow_booking_on_supplier: {
                    type: ['boolean'],
                    example: true
                }
            },
            required: ['id', 'company_id', 'name', 'slug', 'url', 'allow_booking_on_supplier']
        },
        api_key: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid',
                    example: '94832788-c946-4c36-9189-26cdc8e0dbb3'
                },
                tenant_id: {
                    type: ['string'],
                    format: 'uuid',
                    example: '947f66ec-addd-4ab2-baa7-49ead507284f'
                },
                name: {
                    type: ['string'],
                    example: 'Simplenight WL Api Key'
                },
                scope: {
                    type: ['string'],
                    enum: ['Web', 'Mobile'],
                    example: 'Web'
                },
                text_key: {
                    type: ['string'],
                    example: 'local.1d2dec7e940d0afaac0552af357f9a42'
                },
                usage_limit: {
                    type: ['number'],
                    example: 999999
                }
            },
            required: ['id', 'tenant_id', 'name', 'scope', 'text_key', 'usage_limit']
        },
        categories: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid',
                        example: '8fc544d7-85ff-4c42-abdf-ecc72aad147b'
                    },
                    tenant_id: {
                        type: ['string', 'null'],
                        format: 'uuid'
                    },
                    name: {
                        type: ['string'],
                        example: 'Hotels'
                    },
                    slug: {
                        type: ['string'],
                        example: 'hotels'
                    },
                    icon: {
                        type: ['string'],
                        format: 'uri',
                        example: 'https://storage.googleapis.com/sn-v4-local-core-media/1705468808804_category-hotels.svg'
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Inactive'],
                        example: 'Active'
                    },
                    sort: {
                        type: ['number'],
                        example: 1
                    },
                    product_attributes: {
                        type: ['array'],
                        items: {},
                        example: []
                    },
                    variant_attributes: {
                        type: ['array'],
                        items: {},
                        example: []
                    }
                },
                required: ['id', 'tenant_id', 'name', 'slug', 'icon', 'status', 'sort', 'product_attributes', 'variant_attributes']
            }
        },
        config_web: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid',
                    example: 'fda5ab64-81fd-4382-9f79-d9ceafeebaa8'
                },
                tenant_id: {
                    type: ['string'],
                    format: 'uuid',
                    example: '947f66ec-addd-4ab2-baa7-49ead507284f'
                },
                name: {
                    type: ['string'],
                    example: 'Simplenight'
                },
                slogan: {
                    type: ['string'],
                    example: 'Book Everything, Anywhere.'
                },
                phone_prefix: {
                    type: ['string'],
                    example: '+1'
                },
                phone_number: {
                    type: ['string'],
                    example: '2025550190'
                },
                email: {
                    type: ['string'],
                    format: 'email',
                    example: 'support@simplenight.com'
                },
                social: {
                    type: ['object'],
                    properties: {
                        twitter: {
                            type: ['string'],
                            format: 'uri',
                            example: 'https://twitter.com/simplenight'
                        },
                        facebook: {
                            type: ['string'],
                            format: 'uri',
                            example: 'https://facebook.com/simplenight'
                        },
                        linkedin: {
                            type: ['string'],
                            format: 'uri',
                            example: 'https://linkedin.com/company/simplenight'
                        }
                    }
                },
                logo: {
                    type: ['string', 'null'],
                    format: 'uri'
                },
                icon: {
                    type: ['string', 'null'],
                    format: 'uri'
                },
                colors: {
                    type: ['object'],
                    properties: {
                        body: {
                            type: ['string'],
                            example: '#6D7183'
                        },
                        gray: {
                            type: ['string'],
                            example: '#242938'
                        },
                        info: {
                            type: ['string'],
                            example: '#FFD600'
                        },
                        black: {
                            type: ['string'],
                            example: '#242938'
                        },
                        white: {
                            type: ['string'],
                            example: '#FFFFFF'
                        },
                        danger: {
                            type: ['string'],
                            example: '#BB0000'
                        },
                        bg_body: {
                            type: ['string'],
                            example: '#F3F3F6'
                        },
                        primary: {
                            type: ['string'],
                            example: '#7926FF'
                        },
                        success: {
                            type: ['string'],
                            example: '#008900'
                        },
                        warning: {
                            type: ['string'],
                            example: '#F38300'
                        },
                        bg_footer: {
                            type: ['string'],
                            example: '#C3C6D2'
                        },
                        bg_header: {
                            type: ['string'],
                            example: '#FFFFFF'
                        },
                        secondary: {
                            type: ['string'],
                            example: '#242938'
                        }
                    },
                    required: ['body', 'gray', 'info', 'black', 'white', 'danger', 'bg_body', 'primary', 'success', 'warning', 'bg_footer', 'bg_header', 'secondary']
                },
                images: {
                    type: ['object'],
                    properties: {
                        home_hero: {
                            type: ['string'],
                            format: 'uri',
                            example: 'https://storage.googleapis.com/sn-v4-local-core-media/1714734918815_santa.png'
                        }
                    },
                    required: ['home_hero']
                },
                language: {
                    type: ['string'],
                    example: 'en'
                },
                languages: {
                    type: ['string'],
                    example: 'cn,en,ph,fr,de,hi,id,it,ja,ko,pt,ru,es'
                },
                currency: {
                    type: ['string'],
                    example: 'USD'
                },
                currencies: {
                    type: ['string'],
                    example: 'CNY,EUR,IDR,INR,JPY,KRW,PHP,RUB,USD'
                },
                country: {
                    type: ['string'],
                    example: 'US'
                },
                distance: {
                    type: ['string'],
                    example: 'mi'
                },
                terms: {
                    type: ['string'],
                    example: ''
                },
                privacy: {
                    type: ['string'],
                    example: ''
                },
                recaptcha_site_key: {
                    type: ['string', 'null']
                }
            },
            required: ['id', 'tenant_id', 'name', 'slogan', 'phone_prefix', 'phone_number', 'email', 'social', 'logo', 'icon', 'colors', 'images', 'language', 'languages', 'currency', 'currencies', 'country', 'distance', 'terms', 'privacy', 'recaptcha_site_key']
        }
    },
    required: ['tenant', 'api_key', 'categories', 'config_web'],
    additionalProperties: false
} as const;

export const $ZodValidationErrorDto = {
    type: ['object'],
    properties: {
        statusCode: {
            default: 400,
            type: ['integer']
        },
        message: {
            type: ['string']
        },
        error: {
            type: ['string'],
            enum: ['InputValidationError', 'OutputValidationError']
        },
        errors: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    code: {
                        type: ['string']
                    },
                    expected: {
                        type: ['string']
                    },
                    received: {
                        type: ['string']
                    },
                    receivedValue: {
                        type: ['string']
                    },
                    path: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    message: {
                        type: ['string']
                    }
                },
                required: ['code', 'expected', 'received', 'receivedValue', 'path', 'message']
            }
        }
    },
    required: ['message', 'error', 'errors']
} as const;

export const $ConfigMobileFindOneResponseDto = {
    type: ['object'],
    properties: {
        tenant: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid',
                    example: '947f66ec-addd-4ab2-baa7-49ead507284f'
                },
                company_id: {
                    type: ['string'],
                    format: 'uuid',
                    example: 'a15db418-40ef-4af0-a735-31ecff1b20fc'
                },
                name: {
                    type: ['string'],
                    example: 'Simplenight'
                },
                slug: {
                    type: ['string'],
                    example: 'wl'
                },
                url: {
                    type: ['string'],
                    description: 'Hostname',
                    example: 'wl.v4.simplenight.com'
                },
                login: {
                    type: ['string'],
                    enum: ['Public', 'Restricted'],
                    example: 'Public'
                },
                register: {
                    type: ['string'],
                    enum: ['Public', 'Restricted'],
                    example: 'Public'
                },
                allow_booking_on_supplier: {
                    type: ['boolean'],
                    example: true
                }
            },
            required: ['id', 'company_id', 'name', 'slug', 'url', 'allow_booking_on_supplier']
        },
        api_key: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid',
                    example: '94832788-c946-4c36-9189-26cdc8e0dbb3'
                },
                tenant_id: {
                    type: ['string'],
                    format: 'uuid',
                    example: '947f66ec-addd-4ab2-baa7-49ead507284f'
                },
                name: {
                    type: ['string'],
                    example: 'Simplenight WL Api Key'
                },
                scope: {
                    type: ['string'],
                    enum: ['Web', 'Mobile'],
                    example: 'Web'
                },
                text_key: {
                    type: ['string'],
                    example: 'local.1d2dec7e940d0afaac0552af357f9a42'
                },
                usage_limit: {
                    type: ['number'],
                    example: 999999
                }
            },
            required: ['id', 'tenant_id', 'name', 'scope', 'text_key', 'usage_limit']
        },
        categories: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid',
                        example: '8fc544d7-85ff-4c42-abdf-ecc72aad147b'
                    },
                    tenant_id: {
                        type: ['string', 'null'],
                        format: 'uuid'
                    },
                    name: {
                        type: ['string'],
                        example: 'Hotels'
                    },
                    slug: {
                        type: ['string'],
                        example: 'hotels'
                    },
                    icon: {
                        type: ['string'],
                        format: 'uri',
                        example: 'https://storage.googleapis.com/sn-v4-local-core-media/1705468808804_category-hotels.svg'
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Inactive'],
                        example: 'Active'
                    },
                    sort: {
                        type: ['number'],
                        example: 1
                    },
                    product_attributes: {
                        type: ['array'],
                        items: {},
                        example: []
                    },
                    variant_attributes: {
                        type: ['array'],
                        items: {},
                        example: []
                    }
                },
                required: ['id', 'tenant_id', 'name', 'slug', 'icon', 'status', 'sort', 'product_attributes', 'variant_attributes']
            }
        },
        config_mobile: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid',
                    example: 'fda5ab64-81fd-4382-9f79-d9ceafeebaa8'
                },
                tenant_id: {
                    type: ['string'],
                    format: 'uuid',
                    example: '947f66ec-addd-4ab2-baa7-49ead507284f'
                },
                name: {
                    type: ['string'],
                    example: 'Simplenight'
                },
                slogan: {
                    type: ['string'],
                    example: 'Book Everything, Anywhere.'
                },
                phone_prefix: {
                    type: ['string'],
                    example: '+1'
                },
                phone_number: {
                    type: ['string'],
                    example: '2025550190'
                },
                email: {
                    type: ['string'],
                    example: 'support@simplenight.com'
                },
                social: {
                    type: ['object'],
                    properties: {
                        twitter: {
                            type: ['string'],
                            example: 'https://twitter.com/simplenight'
                        },
                        facebook: {
                            type: ['string'],
                            example: 'https://facebook.com/simplenight'
                        },
                        linkedin: {
                            type: ['string'],
                            example: 'https://linkedin.com/company/simplenight'
                        }
                    }
                },
                logo: {
                    type: ['string', 'null']
                },
                icon: {
                    type: ['string', 'null']
                },
                colors: {
                    type: ['object'],
                    properties: {
                        body: {
                            type: ['string'],
                            example: '#6D7183'
                        },
                        gray: {
                            type: ['string'],
                            example: '#242938'
                        },
                        info: {
                            type: ['string'],
                            example: '#FFD600'
                        },
                        black: {
                            type: ['string'],
                            example: '#242938'
                        },
                        white: {
                            type: ['string'],
                            example: '#FFFFFF'
                        },
                        danger: {
                            type: ['string'],
                            example: '#BB0000'
                        },
                        bg_body: {
                            type: ['string'],
                            example: '#F3F3F6'
                        },
                        primary: {
                            type: ['string'],
                            example: '#7926FF'
                        },
                        success: {
                            type: ['string'],
                            example: '#008900'
                        },
                        warning: {
                            type: ['string'],
                            example: '#F38300'
                        },
                        bg_footer: {
                            type: ['string'],
                            example: '#C3C6D2'
                        },
                        bg_header: {
                            type: ['string'],
                            example: '#FFFFFF'
                        },
                        secondary: {
                            type: ['string'],
                            example: '#242938'
                        }
                    }
                },
                images: {
                    type: ['object'],
                    properties: {
                        home_hero: {
                            type: ['string'],
                            example: 'https://storage.googleapis.com/sn-v4-local-core-media/1714734918815_santa.png'
                        }
                    }
                },
                language: {
                    type: ['string'],
                    example: 'en'
                },
                languages: {
                    type: ['string'],
                    example: 'cn,en,ph,fr,de,hi,id,it,ja,ko,pt,ru,es'
                },
                currency: {
                    type: ['string'],
                    example: 'USD'
                },
                currencies: {
                    type: ['string'],
                    example: 'CNY,EUR,IDR,INR,JPY,KRW,PHP,RUB,USD'
                },
                country: {
                    type: ['string'],
                    example: 'US'
                },
                distance: {
                    type: ['string'],
                    example: 'mi'
                },
                terms: {
                    type: ['string'],
                    example: ''
                },
                privacy: {
                    type: ['string'],
                    example: ''
                }
            },
            required: ['id', 'tenant_id', 'social', 'colors', 'images']
        }
    },
    required: ['tenant', 'api_key', 'categories', 'config_mobile'],
    additionalProperties: false
} as const;

export const $HotelsSearchRequestDto = {
    type: ['object'],
    properties: {
        language: {
            type: ['string'],
            minLength: 2,
            maxLength: 2,
            description: 'Content language.',
            example: 'en'
        },
        currency: {
            type: ['string'],
            minLength: 3,
            maxLength: 3,
            description: 'Currency code.',
            example: 'USD'
        },
        uom: {
            type: ['string'],
            enum: ['km', 'mi'],
            description: 'Unit of measure (km or mi).',
            example: 'km'
        },
        start_location: {
            type: ['string'],
            example: '42.3653985,-71.01078319999999'
        },
        start_date: {
            type: ['string'],
            example: '2024-05-21'
        },
        end_date: {
            type: ['string'],
            example: '2024-05-22'
        },
        adults: {
            type: ['string'],
            example: '1'
        },
        children: {
            type: ['string']
        },
        filters: {
            type: ['object'],
            properties: {
                radius: {
                    type: ['integer'],
                    minimum: 0,
                    maximum: 1000
                }
            },
            additionalProperties: false
        },
        sort: {
            type: ['string'],
            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
        },
        order: {
            type: ['string'],
            enum: ['asc', 'desc']
        },
        page: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        limit: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        poll: {
            default: true,
            type: ['boolean'],
            description: 'Poll for updates or return full data in one request.'
        },
        raw: {
            type: ['boolean'],
            description: 'Debug mode. Return raw data without normalization. Dev only.'
        }
    },
    required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date', 'adults'],
    additionalProperties: false
} as const;

export const $HotelsSearchResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-22'
                        },
                        adults: {
                            type: ['string'],
                            example: '1'
                        },
                        children: {
                            type: ['string']
                        },
                        filters: {
                            type: ['object'],
                            properties: {
                                radius: {
                                    type: ['integer'],
                                    minimum: 0,
                                    maximum: 1000
                                }
                            },
                            additionalProperties: false
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date', 'adults'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    static_id: {
                        type: ['string', 'null']
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['expedia', 'hotelplanner', 'sabre'],
                        example: 'expedia'
                    },
                    supplier_env: {
                        type: ['string', 'null'],
                        enum: ['sandbox', 'production']
                    },
                    category: {
                        type: ['string'],
                        enum: ['hotels']
                    },
                    name: {
                        type: ['string', 'null']
                    },
                    description: {
                        type: ['string', 'null']
                    },
                    address: {
                        type: ['string', 'null']
                    },
                    latitude: {
                        type: ['number', 'null']
                    },
                    longitude: {
                        type: ['number', 'null']
                    },
                    distance: {
                        type: ['number', 'null']
                    },
                    distance_uom: {
                        type: ['string', 'null']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    currency: {
                        default: 'USD',
                        type: ['string', 'null'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    price: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    pay_at_property: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    cancel_policy: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                type: {
                                    type: ['string'],
                                    enum: ['FREE_CANCELLATION', 'NOT_REFUNDABLE', 'PARTIAL_REFUND']
                                },
                                start: {
                                    type: ['string']
                                },
                                penalty_type: {
                                    type: ['string', 'null'],
                                    enum: ['PERCENT', 'PRICE', 'NIGHTS']
                                },
                                penalty_value: {
                                    type: ['number', 'null']
                                },
                                penalty_currency: {
                                    type: ['string', 'null'],
                                    minLength: 3,
                                    maxLength: 3
                                }
                            },
                            required: ['type', 'start']
                        }
                    },
                    fee_breakdown: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                category: {
                                    type: ['string'],
                                    enum: ['RESORT_FEE', 'DEPOSIT', 'PET_FEE', 'PARKING_FEE', 'CLEANING_FEE', 'BREAKFAST_FEE', 'EXTRA_BED_FEE', 'SERVICE_FEE', 'AIRPORT_SHUTTLE_FEE', 'INTERNET_FEE', 'FACILITIES_FEE', 'UTILITY_FEE', 'TAX', 'OTHER']
                                },
                                total_amount: {
                                    type: ['number']
                                },
                                mandatory: {
                                    type: ['boolean']
                                }
                            },
                            required: ['category', 'total_amount', 'mandatory']
                        }
                    },
                    price_description: {
                        type: ['string', 'null']
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean', 'null']
                    },
                    refund_amount: {
                        default: 0,
                        type: ['number']
                    },
                    rating: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    reviews: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            start_date: {
                                type: ['string']
                            },
                            end_date: {
                                type: ['string']
                            },
                            nights: {
                                type: ['number']
                            },
                            checkin: {
                                type: ['string']
                            },
                            checkout: {
                                type: ['string']
                            },
                            stars: {
                                type: ['number', 'null']
                            },
                            amenities: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            policies: {
                                type: ['object'],
                                additionalProperties: {
                                    type: ['string']
                                }
                            },
                            facilities: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            landmarks: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            }
                        },
                        required: ['start_date', 'end_date', 'nights', 'amenities']
                    }
                },
                required: ['id', 'supplier', 'category', 'images', 'status', 'attributes']
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total']
} as const;

export const $UnauthorizedExceptionResponseDto = {
    type: ['object'],
    properties: {
        statusCode: {
            default: 401,
            type: ['integer']
        },
        message: {
            type: ['string']
        },
        error: {
            type: ['string'],
            enum: ['Unauthorized']
        }
    },
    required: ['message', 'error']
} as const;

export const $HotelsSearchPollRequestDto = {
    type: ['object'],
    properties: {},
    additionalProperties: false
} as const;

export const $HotelsSearchPollResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-22'
                        },
                        adults: {
                            type: ['string'],
                            example: '1'
                        },
                        children: {
                            type: ['string']
                        },
                        filters: {
                            type: ['object'],
                            properties: {
                                radius: {
                                    type: ['integer'],
                                    minimum: 0,
                                    maximum: 1000
                                }
                            },
                            additionalProperties: false
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date', 'adults'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    static_id: {
                        type: ['string', 'null']
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['expedia', 'hotelplanner', 'sabre'],
                        example: 'expedia'
                    },
                    supplier_env: {
                        type: ['string', 'null'],
                        enum: ['sandbox', 'production']
                    },
                    category: {
                        type: ['string'],
                        enum: ['hotels']
                    },
                    name: {
                        type: ['string', 'null']
                    },
                    description: {
                        type: ['string', 'null']
                    },
                    address: {
                        type: ['string', 'null']
                    },
                    latitude: {
                        type: ['number', 'null']
                    },
                    longitude: {
                        type: ['number', 'null']
                    },
                    distance: {
                        type: ['number', 'null']
                    },
                    distance_uom: {
                        type: ['string', 'null']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    currency: {
                        default: 'USD',
                        type: ['string', 'null'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    price: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    pay_at_property: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    cancel_policy: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                type: {
                                    type: ['string'],
                                    enum: ['FREE_CANCELLATION', 'NOT_REFUNDABLE', 'PARTIAL_REFUND']
                                },
                                start: {
                                    type: ['string']
                                },
                                penalty_type: {
                                    type: ['string', 'null'],
                                    enum: ['PERCENT', 'PRICE', 'NIGHTS']
                                },
                                penalty_value: {
                                    type: ['number', 'null']
                                },
                                penalty_currency: {
                                    type: ['string', 'null'],
                                    minLength: 3,
                                    maxLength: 3
                                }
                            },
                            required: ['type', 'start']
                        }
                    },
                    fee_breakdown: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                category: {
                                    type: ['string'],
                                    enum: ['RESORT_FEE', 'DEPOSIT', 'PET_FEE', 'PARKING_FEE', 'CLEANING_FEE', 'BREAKFAST_FEE', 'EXTRA_BED_FEE', 'SERVICE_FEE', 'AIRPORT_SHUTTLE_FEE', 'INTERNET_FEE', 'FACILITIES_FEE', 'UTILITY_FEE', 'TAX', 'OTHER']
                                },
                                total_amount: {
                                    type: ['number']
                                },
                                mandatory: {
                                    type: ['boolean']
                                }
                            },
                            required: ['category', 'total_amount', 'mandatory']
                        }
                    },
                    price_description: {
                        type: ['string', 'null']
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean', 'null']
                    },
                    refund_amount: {
                        default: 0,
                        type: ['number']
                    },
                    rating: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    reviews: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            start_date: {
                                type: ['string']
                            },
                            end_date: {
                                type: ['string']
                            },
                            nights: {
                                type: ['number']
                            },
                            checkin: {
                                type: ['string']
                            },
                            checkout: {
                                type: ['string']
                            },
                            stars: {
                                type: ['number', 'null']
                            },
                            amenities: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            policies: {
                                type: ['object'],
                                additionalProperties: {
                                    type: ['string']
                                }
                            },
                            facilities: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            landmarks: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            }
                        },
                        required: ['start_date', 'end_date', 'nights', 'amenities']
                    }
                },
                required: ['id', 'supplier', 'category', 'images', 'status', 'attributes']
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total']
} as const;

export const $HotelsDetailsResponseDto = {
    type: ['object'],
    properties: {
        id: {
            type: ['string'],
            format: 'uuid'
        },
        static_id: {
            type: ['string', 'null']
        },
        ids: {
            type: ['string']
        },
        supplier: {
            type: ['string'],
            enum: ['expedia', 'hotelplanner', 'sabre'],
            example: 'expedia'
        },
        supplier_env: {
            type: ['string', 'null'],
            enum: ['sandbox', 'production']
        },
        category: {
            type: ['string'],
            enum: ['hotels']
        },
        name: {
            type: ['string', 'null']
        },
        description: {
            type: ['string', 'null']
        },
        address: {
            type: ['string', 'null']
        },
        latitude: {
            type: ['number', 'null']
        },
        longitude: {
            type: ['number', 'null']
        },
        distance: {
            type: ['number', 'null']
        },
        distance_uom: {
            type: ['string', 'null']
        },
        images: {
            type: ['array'],
            items: {
                type: ['string']
            }
        },
        currency: {
            default: 'USD',
            type: ['string', 'null'],
            minLength: 3,
            maxLength: 3
        },
        tax: {
            default: 0,
            type: ['number', 'null']
        },
        price: {
            default: 0,
            type: ['number', 'null']
        },
        pay_at_property: {
            default: 0,
            type: ['number', 'null']
        },
        cancel_policy: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    type: {
                        type: ['string'],
                        enum: ['FREE_CANCELLATION', 'NOT_REFUNDABLE', 'PARTIAL_REFUND']
                    },
                    start: {
                        type: ['string']
                    },
                    penalty_type: {
                        type: ['string', 'null'],
                        enum: ['PERCENT', 'PRICE', 'NIGHTS']
                    },
                    penalty_value: {
                        type: ['number', 'null']
                    },
                    penalty_currency: {
                        type: ['string', 'null'],
                        minLength: 3,
                        maxLength: 3
                    }
                },
                required: ['type', 'start']
            }
        },
        fee_breakdown: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    category: {
                        type: ['string'],
                        enum: ['RESORT_FEE', 'DEPOSIT', 'PET_FEE', 'PARKING_FEE', 'CLEANING_FEE', 'BREAKFAST_FEE', 'EXTRA_BED_FEE', 'SERVICE_FEE', 'AIRPORT_SHUTTLE_FEE', 'INTERNET_FEE', 'FACILITIES_FEE', 'UTILITY_FEE', 'TAX', 'OTHER']
                    },
                    total_amount: {
                        type: ['number']
                    },
                    mandatory: {
                        type: ['boolean']
                    }
                },
                required: ['category', 'total_amount', 'mandatory']
            }
        },
        price_description: {
            type: ['string', 'null']
        },
        free_cancellation: {
            default: false,
            type: ['boolean', 'null']
        },
        refund_amount: {
            default: 0,
            type: ['number']
        },
        rating: {
            default: 0,
            type: ['number', 'null']
        },
        reviews: {
            default: 0,
            type: ['number', 'null']
        },
        status: {
            type: ['string'],
            enum: ['Active', 'Pending', 'Expired'],
            example: 'Active'
        },
        rooms: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string', 'null']
                    },
                    ids: {
                        oneOf: [
                            {
                                type: ['string']
                            },
                            {
                                type: ['array'],
                                items: {
                                    type: ['number']
                                }
                            }
                        ],
                        type: ['null']
                    },
                    index: {
                        type: ['string']
                    },
                    name: {
                        type: ['string', 'null']
                    },
                    description: {
                        type: ['string', 'null']
                    },
                    bed: {
                        type: ['string', 'null']
                    },
                    view: {
                        type: ['string', 'null']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    tax: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    price: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    pay_at_property: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    cancel_policy: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                type: {
                                    type: ['string'],
                                    enum: ['FREE_CANCELLATION', 'NOT_REFUNDABLE', 'PARTIAL_REFUND']
                                },
                                start: {
                                    type: ['string']
                                },
                                penalty_type: {
                                    type: ['string', 'null'],
                                    enum: ['PERCENT', 'PRICE', 'NIGHTS']
                                },
                                penalty_value: {
                                    type: ['number', 'null']
                                },
                                penalty_currency: {
                                    type: ['string', 'null'],
                                    minLength: 3,
                                    maxLength: 3
                                }
                            },
                            required: ['type', 'start']
                        }
                    },
                    fee_breakdown: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                category: {
                                    type: ['string'],
                                    enum: ['RESORT_FEE', 'DEPOSIT', 'PET_FEE', 'PARKING_FEE', 'CLEANING_FEE', 'BREAKFAST_FEE', 'EXTRA_BED_FEE', 'SERVICE_FEE', 'AIRPORT_SHUTTLE_FEE', 'INTERNET_FEE', 'FACILITIES_FEE', 'UTILITY_FEE', 'TAX', 'OTHER']
                                },
                                total_amount: {
                                    type: ['number']
                                },
                                mandatory: {
                                    type: ['boolean']
                                }
                            },
                            required: ['category', 'total_amount', 'mandatory']
                        }
                    },
                    currency: {
                        default: 'USD',
                        type: ['string', 'null'],
                        minLength: 3,
                        maxLength: 3
                    },
                    price_description: {
                        type: ['string', 'null']
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean', 'null']
                    },
                    refund_amount: {
                        default: 0,
                        type: ['number']
                    },
                    rate_key: {
                        type: ['string', 'null']
                    }
                },
                required: ['images']
            }
        },
        attributes: {
            type: ['object'],
            properties: {
                start_date: {
                    type: ['string']
                },
                end_date: {
                    type: ['string']
                },
                nights: {
                    type: ['number']
                },
                checkin: {
                    type: ['string']
                },
                checkout: {
                    type: ['string']
                },
                stars: {
                    type: ['number', 'null']
                },
                amenities: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    }
                },
                policies: {
                    type: ['object'],
                    additionalProperties: {
                        type: ['string']
                    }
                },
                facilities: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    }
                },
                landmarks: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    }
                }
            },
            required: ['start_date', 'end_date', 'nights', 'amenities']
        }
    },
    required: ['id', 'supplier', 'category', 'images', 'status', 'rooms', 'attributes']
} as const;

export const $HotelsSuggestionsResponseDto = {
    type: ['object'],
    properties: {
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    static_id: {
                        type: ['string', 'null']
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['expedia', 'hotelplanner', 'sabre'],
                        example: 'expedia'
                    },
                    supplier_env: {
                        type: ['string', 'null'],
                        enum: ['sandbox', 'production']
                    },
                    category: {
                        type: ['string'],
                        enum: ['hotels']
                    },
                    name: {
                        type: ['string', 'null']
                    },
                    description: {
                        type: ['string', 'null']
                    },
                    address: {
                        type: ['string', 'null']
                    },
                    latitude: {
                        type: ['number', 'null']
                    },
                    longitude: {
                        type: ['number', 'null']
                    },
                    distance: {
                        type: ['number', 'null']
                    },
                    distance_uom: {
                        type: ['string', 'null']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    currency: {
                        default: 'USD',
                        type: ['string', 'null'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    price: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    pay_at_property: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    cancel_policy: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                type: {
                                    type: ['string'],
                                    enum: ['FREE_CANCELLATION', 'NOT_REFUNDABLE', 'PARTIAL_REFUND']
                                },
                                start: {
                                    type: ['string']
                                },
                                penalty_type: {
                                    type: ['string', 'null'],
                                    enum: ['PERCENT', 'PRICE', 'NIGHTS']
                                },
                                penalty_value: {
                                    type: ['number', 'null']
                                },
                                penalty_currency: {
                                    type: ['string', 'null'],
                                    minLength: 3,
                                    maxLength: 3
                                }
                            },
                            required: ['type', 'start']
                        }
                    },
                    fee_breakdown: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                category: {
                                    type: ['string'],
                                    enum: ['RESORT_FEE', 'DEPOSIT', 'PET_FEE', 'PARKING_FEE', 'CLEANING_FEE', 'BREAKFAST_FEE', 'EXTRA_BED_FEE', 'SERVICE_FEE', 'AIRPORT_SHUTTLE_FEE', 'INTERNET_FEE', 'FACILITIES_FEE', 'UTILITY_FEE', 'TAX', 'OTHER']
                                },
                                total_amount: {
                                    type: ['number']
                                },
                                mandatory: {
                                    type: ['boolean']
                                }
                            },
                            required: ['category', 'total_amount', 'mandatory']
                        }
                    },
                    price_description: {
                        type: ['string', 'null']
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean', 'null']
                    },
                    refund_amount: {
                        default: 0,
                        type: ['number']
                    },
                    rating: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    reviews: {
                        default: 0,
                        type: ['number', 'null']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            start_date: {
                                type: ['string']
                            },
                            end_date: {
                                type: ['string']
                            },
                            nights: {
                                type: ['number']
                            },
                            checkin: {
                                type: ['string']
                            },
                            checkout: {
                                type: ['string']
                            },
                            stars: {
                                type: ['number', 'null']
                            },
                            amenities: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            policies: {
                                type: ['object'],
                                additionalProperties: {
                                    type: ['string']
                                }
                            },
                            facilities: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            landmarks: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            }
                        },
                        required: ['start_date', 'end_date', 'nights', 'amenities']
                    },
                    rooms: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                id: {
                                    type: ['string', 'null']
                                },
                                ids: {
                                    oneOf: [
                                        {
                                            type: ['string']
                                        },
                                        {
                                            type: ['array'],
                                            items: {
                                                type: ['number']
                                            }
                                        }
                                    ],
                                    type: ['null']
                                },
                                index: {
                                    type: ['string']
                                },
                                name: {
                                    type: ['string', 'null']
                                },
                                description: {
                                    type: ['string', 'null']
                                },
                                bed: {
                                    type: ['string', 'null']
                                },
                                view: {
                                    type: ['string', 'null']
                                },
                                images: {
                                    type: ['array'],
                                    items: {
                                        type: ['string']
                                    }
                                },
                                tax: {
                                    default: 0,
                                    type: ['number', 'null']
                                },
                                price: {
                                    default: 0,
                                    type: ['number', 'null']
                                },
                                pay_at_property: {
                                    default: 0,
                                    type: ['number', 'null']
                                },
                                cancel_policy: {
                                    type: ['array'],
                                    items: {
                                        type: ['object'],
                                        properties: {
                                            type: {
                                                type: ['string'],
                                                enum: ['FREE_CANCELLATION', 'NOT_REFUNDABLE', 'PARTIAL_REFUND']
                                            },
                                            start: {
                                                type: ['string']
                                            },
                                            penalty_type: {
                                                type: ['string', 'null'],
                                                enum: ['PERCENT', 'PRICE', 'NIGHTS']
                                            },
                                            penalty_value: {
                                                type: ['number', 'null']
                                            },
                                            penalty_currency: {
                                                type: ['string', 'null'],
                                                minLength: 3,
                                                maxLength: 3
                                            }
                                        },
                                        required: ['type', 'start']
                                    }
                                },
                                fee_breakdown: {
                                    type: ['array'],
                                    items: {
                                        type: ['object'],
                                        properties: {
                                            category: {
                                                type: ['string'],
                                                enum: ['RESORT_FEE', 'DEPOSIT', 'PET_FEE', 'PARKING_FEE', 'CLEANING_FEE', 'BREAKFAST_FEE', 'EXTRA_BED_FEE', 'SERVICE_FEE', 'AIRPORT_SHUTTLE_FEE', 'INTERNET_FEE', 'FACILITIES_FEE', 'UTILITY_FEE', 'TAX', 'OTHER']
                                            },
                                            total_amount: {
                                                type: ['number']
                                            },
                                            mandatory: {
                                                type: ['boolean']
                                            }
                                        },
                                        required: ['category', 'total_amount', 'mandatory']
                                    }
                                },
                                currency: {
                                    default: 'USD',
                                    type: ['string', 'null'],
                                    minLength: 3,
                                    maxLength: 3
                                },
                                price_description: {
                                    type: ['string', 'null']
                                },
                                free_cancellation: {
                                    default: false,
                                    type: ['boolean', 'null']
                                },
                                refund_amount: {
                                    default: 0,
                                    type: ['number']
                                },
                                rate_key: {
                                    type: ['string', 'null']
                                }
                            },
                            required: ['images']
                        }
                    }
                },
                required: ['id', 'supplier', 'category', 'images', 'status', 'attributes']
            }
        }
    },
    required: ['results']
} as const;

export const $FlightsSearchRequestDto = {
    type: ['object'],
    properties: {
        language: {
            type: ['string'],
            minLength: 2,
            maxLength: 2,
            description: 'Content language.',
            example: 'en'
        },
        currency: {
            type: ['string'],
            minLength: 3,
            maxLength: 3,
            description: 'Currency code.',
            example: 'USD'
        },
        uom: {
            type: ['string'],
            enum: ['km', 'mi'],
            description: 'Unit of measure (km or mi).',
            example: 'km'
        },
        start_location: {
            type: ['string'],
            example: '42.3653985,-71.01078319999999'
        },
        end_location: {
            type: ['string'],
            example: '42.3653985,-71.01078319999999'
        },
        start_date: {
            type: ['string'],
            example: '2024-05-21'
        },
        end_date: {
            type: ['string'],
            example: '2024-05-22'
        },
        adults: {
            type: ['integer'],
            minimum: 1,
            maximum: 9,
            example: '1'
        },
        children: {
            type: ['integer'],
            minimum: 0,
            maximum: 9
        },
        infants: {
            type: ['integer'],
            minimum: 0,
            maximum: 9
        },
        infants_seated: {
            type: ['integer'],
            minimum: 0,
            maximum: 9
        },
        direction: {
            type: ['string'],
            enum: ['OneWay', 'RoundTrip', 'MultiCity'],
            example: 'OneWay'
        },
        cabin: {
            type: ['string'],
            enum: ['PremiumFirst', 'First', 'PremiumBusiness', 'Business', 'PremiumEconomy', 'Economy']
        },
        seatmaps: {
            type: ['string'],
            enum: ['true', 'false']
        },
        sort: {
            type: ['string'],
            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
        },
        order: {
            type: ['string'],
            enum: ['asc', 'desc']
        },
        page: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        limit: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        poll: {
            default: true,
            type: ['boolean'],
            description: 'Poll for updates or return full data in one request.'
        },
        raw: {
            type: ['boolean'],
            description: 'Debug mode. Return raw data without normalization. Dev only.'
        }
    },
    required: ['language', 'currency', 'uom', 'start_location', 'end_location', 'start_date', 'direction'],
    additionalProperties: false
} as const;

export const $FlightsSearchResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        end_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-22'
                        },
                        adults: {
                            type: ['integer'],
                            minimum: 1,
                            maximum: 9,
                            example: '1'
                        },
                        children: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 9
                        },
                        infants: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 9
                        },
                        infants_seated: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 9
                        },
                        direction: {
                            type: ['string'],
                            enum: ['OneWay', 'RoundTrip', 'MultiCity'],
                            example: 'OneWay'
                        },
                        cabin: {
                            type: ['string'],
                            enum: ['PremiumFirst', 'First', 'PremiumBusiness', 'Business', 'PremiumEconomy', 'Economy']
                        },
                        seatmaps: {
                            type: ['string'],
                            enum: ['true', 'false']
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'end_location', 'start_date', 'direction'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at'],
            additionalProperties: false
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    static_id: {
                        type: ['string', 'null']
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['amadeus', 'sabre'],
                        example: 'amadeus'
                    },
                    supplier_env: {
                        type: ['string', 'null'],
                        enum: ['sandbox', 'production']
                    },
                    category: {
                        type: ['string'],
                        enum: ['flights']
                    },
                    index: {
                        type: ['number'],
                        example: 1
                    },
                    name: {
                        type: ['string'],
                        example: 'LAX - BOS'
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        type: ['number']
                    },
                    price: {
                        type: ['number']
                    },
                    pay_at_property: {
                        type: ['number', 'null']
                    },
                    price_description: {
                        type: ['string'],
                        example: 'Economy'
                    },
                    free_cancellation: {
                        type: ['boolean'],
                        example: false
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    flights: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                id: {
                                    type: ['string'],
                                    example: '87_88'
                                },
                                duration: {
                                    type: ['integer', 'null'],
                                    example: 675
                                },
                                segments: {
                                    type: ['array'],
                                    items: {
                                        type: ['object'],
                                        properties: {
                                            id: {
                                                type: ['string', 'null'],
                                                example: '87'
                                            },
                                            duration: {
                                                type: ['integer', 'null'],
                                                example: 184
                                            },
                                            stops: {
                                                default: 0,
                                                type: ['integer'],
                                                example: 0
                                            },
                                            aircraft: {
                                                type: ['string'],
                                                example: '32A'
                                            },
                                            aircraft_name: {
                                                type: ['string'],
                                                example: 'Airbus A320 (sharklets)'
                                            },
                                            airline: {
                                                type: ['string'],
                                                example: 'NK'
                                            },
                                            airline_name: {
                                                type: ['string'],
                                                example: 'Spirit Airlines'
                                            },
                                            airline_operating: {
                                                type: ['string'],
                                                example: 'NK'
                                            },
                                            airline_operating_name: {
                                                type: ['string'],
                                                example: 'Spirit Airlines'
                                            },
                                            flight_number: {
                                                type: ['string'],
                                                example: '471'
                                            },
                                            start_date: {
                                                type: ['string'],
                                                example: '2024-05-04 23:45:00'
                                            },
                                            start_location: {
                                                type: ['string'],
                                                minLength: 3,
                                                maxLength: 3,
                                                example: 'DFW'
                                            },
                                            start_location_name: {
                                                type: ['string'],
                                                example: 'Los Angeles International Airport'
                                            },
                                            start_location_terminal: {
                                                type: ['string'],
                                                example: 'E'
                                            },
                                            end_date: {
                                                type: ['string'],
                                                example: '2024-05-04 23:45:00'
                                            },
                                            end_location: {
                                                type: ['string'],
                                                minLength: 3,
                                                maxLength: 3,
                                                example: 'Dallas Fort Worth International Airport'
                                            },
                                            end_location_name: {
                                                type: ['string'],
                                                example: 'LAX'
                                            },
                                            end_location_terminal: {
                                                type: ['string'],
                                                example: '5'
                                            }
                                        },
                                        required: ['id', 'aircraft', 'aircraft_name', 'airline', 'airline_name', 'airline_operating', 'airline_operating_name', 'flight_number', 'start_date', 'start_location', 'start_location_name', 'start_location_terminal', 'end_date', 'end_location', 'end_location_name', 'end_location_terminal'],
                                        additionalProperties: false
                                    }
                                }
                            },
                            required: ['id', 'segments'],
                            additionalProperties: false
                        }
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            seatmaps: {
                                type: ['array'],
                                items: {}
                            }
                        },
                        required: ['seatmaps'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'category', 'index', 'name', 'tax', 'price', 'price_description', 'free_cancellation', 'status', 'flights', 'attributes'],
                additionalProperties: false
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total'],
    additionalProperties: false
} as const;

export const $FlightsSearchPollRequestDto = {
    type: ['object'],
    properties: {
        sort: {
            type: ['string'],
            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
        },
        order: {
            type: ['string'],
            enum: ['asc', 'desc']
        }
    },
    additionalProperties: false
} as const;

export const $FlightsSearchPollResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        end_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-22'
                        },
                        adults: {
                            type: ['integer'],
                            minimum: 1,
                            maximum: 9,
                            example: '1'
                        },
                        children: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 9
                        },
                        infants: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 9
                        },
                        infants_seated: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 9
                        },
                        direction: {
                            type: ['string'],
                            enum: ['OneWay', 'RoundTrip', 'MultiCity'],
                            example: 'OneWay'
                        },
                        cabin: {
                            type: ['string'],
                            enum: ['PremiumFirst', 'First', 'PremiumBusiness', 'Business', 'PremiumEconomy', 'Economy']
                        },
                        seatmaps: {
                            type: ['string'],
                            enum: ['true', 'false']
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'end_location', 'start_date', 'direction'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at'],
            additionalProperties: false
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    static_id: {
                        type: ['string', 'null']
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['amadeus', 'sabre'],
                        example: 'amadeus'
                    },
                    supplier_env: {
                        type: ['string', 'null'],
                        enum: ['sandbox', 'production']
                    },
                    category: {
                        type: ['string'],
                        enum: ['flights']
                    },
                    index: {
                        type: ['number'],
                        example: 1
                    },
                    name: {
                        type: ['string'],
                        example: 'LAX - BOS'
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        type: ['number']
                    },
                    price: {
                        type: ['number']
                    },
                    pay_at_property: {
                        type: ['number', 'null']
                    },
                    price_description: {
                        type: ['string'],
                        example: 'Economy'
                    },
                    free_cancellation: {
                        type: ['boolean'],
                        example: false
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    flights: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                id: {
                                    type: ['string'],
                                    example: '87_88'
                                },
                                duration: {
                                    type: ['integer', 'null'],
                                    example: 675
                                },
                                segments: {
                                    type: ['array'],
                                    items: {
                                        type: ['object'],
                                        properties: {
                                            id: {
                                                type: ['string', 'null'],
                                                example: '87'
                                            },
                                            duration: {
                                                type: ['integer', 'null'],
                                                example: 184
                                            },
                                            stops: {
                                                default: 0,
                                                type: ['integer'],
                                                example: 0
                                            },
                                            aircraft: {
                                                type: ['string'],
                                                example: '32A'
                                            },
                                            aircraft_name: {
                                                type: ['string'],
                                                example: 'Airbus A320 (sharklets)'
                                            },
                                            airline: {
                                                type: ['string'],
                                                example: 'NK'
                                            },
                                            airline_name: {
                                                type: ['string'],
                                                example: 'Spirit Airlines'
                                            },
                                            airline_operating: {
                                                type: ['string'],
                                                example: 'NK'
                                            },
                                            airline_operating_name: {
                                                type: ['string'],
                                                example: 'Spirit Airlines'
                                            },
                                            flight_number: {
                                                type: ['string'],
                                                example: '471'
                                            },
                                            start_date: {
                                                type: ['string'],
                                                example: '2024-05-04 23:45:00'
                                            },
                                            start_location: {
                                                type: ['string'],
                                                minLength: 3,
                                                maxLength: 3,
                                                example: 'DFW'
                                            },
                                            start_location_name: {
                                                type: ['string'],
                                                example: 'Los Angeles International Airport'
                                            },
                                            start_location_terminal: {
                                                type: ['string'],
                                                example: 'E'
                                            },
                                            end_date: {
                                                type: ['string'],
                                                example: '2024-05-04 23:45:00'
                                            },
                                            end_location: {
                                                type: ['string'],
                                                minLength: 3,
                                                maxLength: 3,
                                                example: 'Dallas Fort Worth International Airport'
                                            },
                                            end_location_name: {
                                                type: ['string'],
                                                example: 'LAX'
                                            },
                                            end_location_terminal: {
                                                type: ['string'],
                                                example: '5'
                                            }
                                        },
                                        required: ['id', 'aircraft', 'aircraft_name', 'airline', 'airline_name', 'airline_operating', 'airline_operating_name', 'flight_number', 'start_date', 'start_location', 'start_location_name', 'start_location_terminal', 'end_date', 'end_location', 'end_location_name', 'end_location_terminal'],
                                        additionalProperties: false
                                    }
                                }
                            },
                            required: ['id', 'segments'],
                            additionalProperties: false
                        }
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            seatmaps: {
                                type: ['array'],
                                items: {}
                            }
                        },
                        required: ['seatmaps'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'category', 'index', 'name', 'tax', 'price', 'price_description', 'free_cancellation', 'status', 'flights', 'attributes'],
                additionalProperties: false
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total'],
    additionalProperties: false
} as const;

export const $FlightsDetailsResponseDto = {
    type: ['object'],
    properties: {
        id: {
            type: ['string'],
            format: 'uuid'
        },
        static_id: {
            type: ['string', 'null']
        },
        ids: {
            type: ['string']
        },
        supplier: {
            type: ['string'],
            enum: ['amadeus', 'sabre'],
            example: 'amadeus'
        },
        supplier_env: {
            type: ['string', 'null'],
            enum: ['sandbox', 'production']
        },
        category: {
            type: ['string'],
            enum: ['flights']
        },
        index: {
            type: ['number'],
            example: 1
        },
        name: {
            type: ['string'],
            example: 'LAX - BOS'
        },
        supplier_tax: {
            default: 0,
            type: ['number']
        },
        supplier_price: {
            default: 0,
            type: ['number']
        },
        supplier_currency: {
            default: 'USD',
            type: ['string'],
            minLength: 3,
            maxLength: 3
        },
        currency: {
            default: 'USD',
            type: ['string'],
            minLength: 3,
            maxLength: 3
        },
        tax: {
            type: ['number']
        },
        price: {
            type: ['number']
        },
        pay_at_property: {
            type: ['number', 'null']
        },
        price_description: {
            type: ['string'],
            example: 'Economy'
        },
        free_cancellation: {
            type: ['boolean'],
            example: false
        },
        status: {
            type: ['string'],
            enum: ['Active', 'Pending', 'Expired'],
            example: 'Active'
        },
        flights: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        example: '87_88'
                    },
                    duration: {
                        type: ['integer', 'null'],
                        example: 675
                    },
                    segments: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                id: {
                                    type: ['string', 'null'],
                                    example: '87'
                                },
                                duration: {
                                    type: ['integer', 'null'],
                                    example: 184
                                },
                                stops: {
                                    default: 0,
                                    type: ['integer'],
                                    example: 0
                                },
                                aircraft: {
                                    type: ['string'],
                                    example: '32A'
                                },
                                aircraft_name: {
                                    type: ['string'],
                                    example: 'Airbus A320 (sharklets)'
                                },
                                airline: {
                                    type: ['string'],
                                    example: 'NK'
                                },
                                airline_name: {
                                    type: ['string'],
                                    example: 'Spirit Airlines'
                                },
                                airline_operating: {
                                    type: ['string'],
                                    example: 'NK'
                                },
                                airline_operating_name: {
                                    type: ['string'],
                                    example: 'Spirit Airlines'
                                },
                                flight_number: {
                                    type: ['string'],
                                    example: '471'
                                },
                                start_date: {
                                    type: ['string'],
                                    example: '2024-05-04 23:45:00'
                                },
                                start_location: {
                                    type: ['string'],
                                    minLength: 3,
                                    maxLength: 3,
                                    example: 'DFW'
                                },
                                start_location_name: {
                                    type: ['string'],
                                    example: 'Los Angeles International Airport'
                                },
                                start_location_terminal: {
                                    type: ['string'],
                                    example: 'E'
                                },
                                end_date: {
                                    type: ['string'],
                                    example: '2024-05-04 23:45:00'
                                },
                                end_location: {
                                    type: ['string'],
                                    minLength: 3,
                                    maxLength: 3,
                                    example: 'Dallas Fort Worth International Airport'
                                },
                                end_location_name: {
                                    type: ['string'],
                                    example: 'LAX'
                                },
                                end_location_terminal: {
                                    type: ['string'],
                                    example: '5'
                                }
                            },
                            required: ['id', 'aircraft', 'aircraft_name', 'airline', 'airline_name', 'airline_operating', 'airline_operating_name', 'flight_number', 'start_date', 'start_location', 'start_location_name', 'start_location_terminal', 'end_date', 'end_location', 'end_location_name', 'end_location_terminal'],
                            additionalProperties: false
                        }
                    }
                },
                required: ['id', 'segments'],
                additionalProperties: false
            }
        },
        attributes: {
            type: ['object'],
            properties: {
                seatmaps: {
                    type: ['array'],
                    items: {}
                }
            },
            required: ['seatmaps'],
            additionalProperties: false
        }
    },
    required: ['id', 'supplier', 'category', 'index', 'name', 'tax', 'price', 'price_description', 'free_cancellation', 'status', 'flights', 'attributes'],
    additionalProperties: false
} as const;

export const $CarsSearchRequestDto = {
    type: ['object'],
    properties: {
        language: {
            type: ['string'],
            minLength: 2,
            maxLength: 2,
            description: 'Content language.',
            example: 'en'
        },
        currency: {
            type: ['string'],
            minLength: 3,
            maxLength: 3,
            description: 'Currency code.',
            example: 'USD'
        },
        uom: {
            type: ['string'],
            enum: ['km', 'mi'],
            description: 'Unit of measure (km or mi).',
            example: 'km'
        },
        start_location: {
            type: ['string'],
            example: '42.3653985,-71.01078319999999'
        },
        end_location: {
            type: ['string'],
            example: '42.3653985,-71.01078319999999'
        },
        start_date: {
            type: ['string'],
            example: '2024-05-21'
        },
        end_date: {
            type: ['string'],
            example: '2024-05-22'
        },
        filters: {
            type: ['object'],
            properties: {
                radius: {
                    type: ['integer'],
                    minimum: 0
                }
            },
            additionalProperties: false
        },
        sort: {
            type: ['string'],
            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
        },
        order: {
            type: ['string'],
            enum: ['asc', 'desc']
        },
        page: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        limit: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        poll: {
            default: true,
            type: ['boolean'],
            description: 'Poll for updates or return full data in one request.'
        },
        raw: {
            type: ['boolean'],
            description: 'Debug mode. Return raw data without normalization. Dev only.'
        }
    },
    required: ['language', 'currency', 'uom', 'start_location', 'end_location', 'start_date', 'end_date'],
    additionalProperties: false
} as const;

export const $CarsSearchResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        end_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-22'
                        },
                        filters: {
                            type: ['object'],
                            properties: {
                                radius: {
                                    type: ['integer'],
                                    minimum: 0
                                }
                            },
                            additionalProperties: false
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'end_location', 'start_date', 'end_date'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    static_id: {
                        type: ['string', 'null']
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['sabre', 'cartrawler'],
                        example: 'sabre'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['car-rental']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    pay_at_property: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: 'ExtraDay - 81.83 EUR, ExtraHour - 22.89 EUR'
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean']
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            ac: {
                                type: ['boolean'],
                                example: true
                            },
                            fuel: {
                                type: ['string'],
                                example: 'Unspecified'
                            },
                            bags: {
                                type: ['number'],
                                example: 2
                            },
                            doors: {
                                type: ['number'],
                                example: 4
                            },
                            drive: {
                                type: ['string'],
                                example: 'Unspecified'
                            },
                            transmission: {
                                type: ['string'],
                                example: 'Automatic'
                            },
                            passengers: {
                                type: ['number'],
                                example: 4
                            },
                            company: {
                                type: ['string'],
                                example: 'HERTZ'
                            },
                            company_logo: {
                                type: ['string', 'null'],
                                example: 'http://vcmp-cars.cert.sabre.com/image/upload/f_auto,q_auto:best,t_vcmp_logo/v1667229697/car/l/ze/ZE.png'
                            },
                            start_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            start_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            start_location_name: {
                                type: ['string'],
                                example: 'BOSTON LOGAN INTL AIRPORT, 156 TOMAHAWK DRIVE, BOSTON LOGAN, MA, 02128, US'
                            },
                            end_date: {
                                type: ['string'],
                                example: '2024-05-13 14:00:00'
                            },
                            end_location_name: {
                                type: ['string'],
                                example: 'BOSTON LOGAN INTL AIRPORT, 156 TOMAHAWK DRIVE, BOSTON LOGAN, MA, 02128, US'
                            },
                            end_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            landmarks: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            }
                        },
                        required: ['passengers', 'company', 'start_date', 'start_location', 'start_location_name', 'end_date', 'end_location_name', 'end_location'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                additionalProperties: false
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total'],
    additionalProperties: false
} as const;

export const $CarsSearchPollRequestDto = {
    type: ['object'],
    properties: {}
} as const;

export const $CarsSearchPollResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        end_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-22'
                        },
                        filters: {
                            type: ['object'],
                            properties: {
                                radius: {
                                    type: ['integer'],
                                    minimum: 0
                                }
                            },
                            additionalProperties: false
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'end_location', 'start_date', 'end_date'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    static_id: {
                        type: ['string', 'null']
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['sabre', 'cartrawler'],
                        example: 'sabre'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['car-rental']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    pay_at_property: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: 'ExtraDay - 81.83 EUR, ExtraHour - 22.89 EUR'
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean']
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            ac: {
                                type: ['boolean'],
                                example: true
                            },
                            fuel: {
                                type: ['string'],
                                example: 'Unspecified'
                            },
                            bags: {
                                type: ['number'],
                                example: 2
                            },
                            doors: {
                                type: ['number'],
                                example: 4
                            },
                            drive: {
                                type: ['string'],
                                example: 'Unspecified'
                            },
                            transmission: {
                                type: ['string'],
                                example: 'Automatic'
                            },
                            passengers: {
                                type: ['number'],
                                example: 4
                            },
                            company: {
                                type: ['string'],
                                example: 'HERTZ'
                            },
                            company_logo: {
                                type: ['string', 'null'],
                                example: 'http://vcmp-cars.cert.sabre.com/image/upload/f_auto,q_auto:best,t_vcmp_logo/v1667229697/car/l/ze/ZE.png'
                            },
                            start_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            start_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            start_location_name: {
                                type: ['string'],
                                example: 'BOSTON LOGAN INTL AIRPORT, 156 TOMAHAWK DRIVE, BOSTON LOGAN, MA, 02128, US'
                            },
                            end_date: {
                                type: ['string'],
                                example: '2024-05-13 14:00:00'
                            },
                            end_location_name: {
                                type: ['string'],
                                example: 'BOSTON LOGAN INTL AIRPORT, 156 TOMAHAWK DRIVE, BOSTON LOGAN, MA, 02128, US'
                            },
                            end_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            landmarks: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            }
                        },
                        required: ['passengers', 'company', 'start_date', 'start_location', 'start_location_name', 'end_date', 'end_location_name', 'end_location'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                additionalProperties: false
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total'],
    additionalProperties: false
} as const;

export const $CarsSuggestionsResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        end_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-22'
                        },
                        filters: {
                            type: ['object'],
                            properties: {
                                radius: {
                                    type: ['integer'],
                                    minimum: 0
                                }
                            },
                            additionalProperties: false
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'end_location', 'start_date', 'end_date'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    static_id: {
                        type: ['string', 'null']
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['sabre', 'cartrawler'],
                        example: 'sabre'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['car-rental']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    pay_at_property: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: 'ExtraDay - 81.83 EUR, ExtraHour - 22.89 EUR'
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean']
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            ac: {
                                type: ['boolean'],
                                example: true
                            },
                            fuel: {
                                type: ['string'],
                                example: 'Unspecified'
                            },
                            bags: {
                                type: ['number'],
                                example: 2
                            },
                            doors: {
                                type: ['number'],
                                example: 4
                            },
                            drive: {
                                type: ['string'],
                                example: 'Unspecified'
                            },
                            transmission: {
                                type: ['string'],
                                example: 'Automatic'
                            },
                            passengers: {
                                type: ['number'],
                                example: 4
                            },
                            company: {
                                type: ['string'],
                                example: 'HERTZ'
                            },
                            company_logo: {
                                type: ['string', 'null'],
                                example: 'http://vcmp-cars.cert.sabre.com/image/upload/f_auto,q_auto:best,t_vcmp_logo/v1667229697/car/l/ze/ZE.png'
                            },
                            start_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            start_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            start_location_name: {
                                type: ['string'],
                                example: 'BOSTON LOGAN INTL AIRPORT, 156 TOMAHAWK DRIVE, BOSTON LOGAN, MA, 02128, US'
                            },
                            end_date: {
                                type: ['string'],
                                example: '2024-05-13 14:00:00'
                            },
                            end_location_name: {
                                type: ['string'],
                                example: 'BOSTON LOGAN INTL AIRPORT, 156 TOMAHAWK DRIVE, BOSTON LOGAN, MA, 02128, US'
                            },
                            end_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            landmarks: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            }
                        },
                        required: ['passengers', 'company', 'start_date', 'start_location', 'start_location_name', 'end_date', 'end_location_name', 'end_location'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                additionalProperties: false
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total'],
    additionalProperties: false
} as const;

export const $CarsDetailsResponseDto = {
    type: ['object'],
    properties: {
        id: {
            type: ['string'],
            format: 'uuid'
        },
        static_id: {
            type: ['string', 'null']
        },
        ids: {
            type: ['string']
        },
        supplier: {
            type: ['string'],
            enum: ['sabre', 'cartrawler'],
            example: 'sabre'
        },
        supplier_env: {
            type: ['string'],
            enum: ['sandbox', 'production']
        },
        index: {
            type: ['number'],
            example: 0
        },
        category: {
            type: ['string'],
            enum: ['car-rental']
        },
        name: {
            type: ['string']
        },
        description: {
            type: ['string']
        },
        address: {
            type: ['string']
        },
        latitude: {
            type: ['number']
        },
        longitude: {
            type: ['number']
        },
        distance: {
            type: ['number']
        },
        distance_uom: {
            type: ['string'],
            enum: ['km', 'mi']
        },
        images: {
            type: ['array'],
            items: {
                type: ['string']
            }
        },
        supplier_tax: {
            default: 0,
            type: ['number']
        },
        supplier_price: {
            default: 0,
            type: ['number']
        },
        supplier_currency: {
            default: 'USD',
            type: ['string'],
            minLength: 3,
            maxLength: 3
        },
        currency: {
            default: 'USD',
            type: ['string'],
            minLength: 3,
            maxLength: 3
        },
        tax: {
            default: 0,
            type: ['number']
        },
        price: {
            default: 0,
            type: ['number']
        },
        pay_at_property: {
            default: 0,
            type: ['number']
        },
        price_description: {
            type: ['string'],
            example: 'ExtraDay - 81.83 EUR, ExtraHour - 22.89 EUR'
        },
        free_cancellation: {
            default: false,
            type: ['boolean']
        },
        rating: {
            default: 0,
            type: ['number']
        },
        reviews: {
            default: 0,
            type: ['number']
        },
        status: {
            type: ['string'],
            enum: ['Active', 'Pending', 'Expired'],
            example: 'Active'
        },
        attributes: {
            type: ['object'],
            properties: {
                ac: {
                    type: ['boolean'],
                    example: true
                },
                fuel: {
                    type: ['string'],
                    example: 'Unspecified'
                },
                bags: {
                    type: ['number'],
                    example: 2
                },
                doors: {
                    type: ['number'],
                    example: 4
                },
                drive: {
                    type: ['string'],
                    example: 'Unspecified'
                },
                transmission: {
                    type: ['string'],
                    example: 'Automatic'
                },
                passengers: {
                    type: ['number'],
                    example: 4
                },
                company: {
                    type: ['string'],
                    example: 'HERTZ'
                },
                company_logo: {
                    type: ['string', 'null'],
                    example: 'http://vcmp-cars.cert.sabre.com/image/upload/f_auto,q_auto:best,t_vcmp_logo/v1667229697/car/l/ze/ZE.png'
                },
                start_date: {
                    type: ['string'],
                    example: '2024-05-07 14:00:00'
                },
                start_location: {
                    type: ['string'],
                    example: '42.365597,-71.00956'
                },
                start_location_name: {
                    type: ['string'],
                    example: 'BOSTON LOGAN INTL AIRPORT, 156 TOMAHAWK DRIVE, BOSTON LOGAN, MA, 02128, US'
                },
                end_date: {
                    type: ['string'],
                    example: '2024-05-13 14:00:00'
                },
                end_location_name: {
                    type: ['string'],
                    example: 'BOSTON LOGAN INTL AIRPORT, 156 TOMAHAWK DRIVE, BOSTON LOGAN, MA, 02128, US'
                },
                end_location: {
                    type: ['string'],
                    example: '42.365597,-71.00956'
                },
                landmarks: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    }
                }
            },
            required: ['passengers', 'company', 'start_date', 'start_location', 'start_location_name', 'end_date', 'end_location_name', 'end_location'],
            additionalProperties: false
        }
    },
    required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
    additionalProperties: false
} as const;

export const $ThingsSearchRequestDto = {
    type: ['object'],
    properties: {
        language: {
            type: ['string'],
            minLength: 2,
            maxLength: 2,
            description: 'Content language.',
            example: 'en'
        },
        currency: {
            type: ['string'],
            minLength: 3,
            maxLength: 3,
            description: 'Currency code.',
            example: 'USD'
        },
        uom: {
            type: ['string'],
            enum: ['km', 'mi'],
            description: 'Unit of measure (km or mi).',
            example: 'km'
        },
        start_location: {
            type: ['string'],
            example: '42.3653985,-71.01078319999999'
        },
        start_date: {
            type: ['string'],
            example: '2024-05-21'
        },
        end_date: {
            type: ['string'],
            example: '2024-05-22'
        },
        adults: {
            type: ['integer'],
            minimum: 1,
            maximum: 9
        },
        children: {
            type: ['integer'],
            minimum: 1,
            maximum: 9
        },
        filters: {
            type: ['object'],
            properties: {
                radius: {
                    type: ['integer'],
                    minimum: 0,
                    example: 100
                },
                start_price: {
                    type: ['integer'],
                    minimum: 0,
                    example: 0
                },
                end_price: {
                    type: ['integer'],
                    minimum: 0,
                    example: 1000
                }
            },
            additionalProperties: false
        },
        sort: {
            type: ['string'],
            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
        },
        order: {
            type: ['string'],
            enum: ['asc', 'desc']
        },
        page: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        limit: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        poll: {
            default: true,
            type: ['boolean'],
            description: 'Poll for updates or return full data in one request.'
        },
        raw: {
            type: ['boolean'],
            description: 'Debug mode. Return raw data without normalization. Dev only.'
        }
    },
    required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date'],
    additionalProperties: false
} as const;

export const $ThingsSearchResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-22'
                        },
                        adults: {
                            type: ['integer'],
                            minimum: 1,
                            maximum: 9
                        },
                        children: {
                            type: ['integer'],
                            minimum: 1,
                            maximum: 9
                        },
                        filters: {
                            type: ['object'],
                            properties: {
                                radius: {
                                    type: ['integer'],
                                    minimum: 0,
                                    example: 100
                                },
                                start_price: {
                                    type: ['integer'],
                                    minimum: 0,
                                    example: 0
                                },
                                end_price: {
                                    type: ['integer'],
                                    minimum: 0,
                                    example: 1000
                                }
                            },
                            additionalProperties: false
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    static_id: {
                        type: ['string', 'null']
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['viator', 'tiqets', 'simplenight'],
                        example: 'viator'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['things-to-do']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    pay_at_property: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: 'ExtraDay - 81.83 EUR, ExtraHour - 22.89 EUR'
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean']
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    variants: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                id: {
                                    type: ['string']
                                },
                                ids: {
                                    type: ['string', 'null']
                                },
                                name: {
                                    type: ['string']
                                },
                                description: {
                                    type: ['string']
                                },
                                images: {
                                    type: ['array'],
                                    items: {
                                        type: ['string']
                                    }
                                },
                                index: {
                                    type: ['number']
                                },
                                tax: {
                                    default: 0,
                                    type: ['number']
                                },
                                price: {
                                    default: 0,
                                    type: ['number']
                                },
                                currency: {
                                    type: ['string'],
                                    minLength: 3,
                                    maxLength: 3
                                },
                                cancel_policy: {
                                    type: ['array'],
                                    items: {
                                        type: ['object'],
                                        properties: {
                                            type: {
                                                type: ['string'],
                                                enum: ['FREE_CANCELLATION', 'NOT_REFUNDABLE', 'PARTIAL_REFUND']
                                            },
                                            start: {
                                                type: ['string']
                                            },
                                            penalty_type: {
                                                type: ['string', 'null'],
                                                enum: ['PERCENT', 'PRICE', 'NIGHTS']
                                            },
                                            penalty_value: {
                                                type: ['number', 'null']
                                            },
                                            penalty_currency: {
                                                type: ['string', 'null'],
                                                minLength: 3,
                                                maxLength: 3
                                            }
                                        },
                                        required: ['type', 'start']
                                    }
                                },
                                price_description: {
                                    type: ['string']
                                },
                                free_cancellation: {
                                    type: ['boolean']
                                },
                                attributes: {
                                    type: ['object'],
                                    properties: {
                                        start_date: {
                                            type: ['string']
                                        },
                                        start_time: {
                                            type: ['string']
                                        },
                                        booking_questions: {
                                            type: ['array'],
                                            items: {
                                                type: ['object'],
                                                properties: {
                                                    id: {
                                                        type: ['string'],
                                                        example: 'LANGUAGE_GUIDE'
                                                    },
                                                    legacyBookingQuestionId: {
                                                        type: ['number']
                                                    },
                                                    group: {
                                                        type: ['string'],
                                                        enum: ['PER_BOOKING', 'PER_TRAVELER']
                                                    },
                                                    type: {
                                                        type: ['string'],
                                                        enum: ['STRING', 'NUMBER_AND_UNIT', 'DATE', 'TIME', 'LOCATION_REF_OR_FREE_TEXT']
                                                    },
                                                    required: {
                                                        type: ['string'],
                                                        enum: ['MANDATORY', 'OPTIONAL', 'CONDITIONAL']
                                                    },
                                                    label: {
                                                        type: ['string'],
                                                        example: 'Language Guide'
                                                    },
                                                    hint: {
                                                        type: ['string']
                                                    },
                                                    maxLength: {
                                                        type: ['number']
                                                    },
                                                    travelerNum: {
                                                        type: ['number']
                                                    },
                                                    units: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['string'],
                                                            enum: ['LOCATION_REFERENCE', 'FREETEXT']
                                                        }
                                                    },
                                                    allowedAnswers: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['string']
                                                        },
                                                        example: ['en']
                                                    }
                                                },
                                                required: ['id', 'group', 'type', 'required', 'label'],
                                                additionalProperties: false
                                            }
                                        }
                                    },
                                    required: ['start_date']
                                }
                            },
                            required: ['id', 'ids', 'name', 'description', 'images', 'index', 'currency', 'price_description', 'free_cancellation', 'attributes']
                        }
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            tags: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            adults: {
                                type: ['number']
                            },
                            children: {
                                type: ['number']
                            },
                            start_date: {
                                type: ['string']
                            },
                            start_time: {
                                type: ['string']
                            },
                            nights: {
                                type: ['number']
                            },
                            company: {
                                type: ['string']
                            },
                            start_location: {
                                type: ['string']
                            },
                            pickup_description: {
                                type: ['string']
                            },
                            pickup_locations: {
                                type: ['array'],
                                items: {
                                    type: ['array'],
                                    items: {
                                        type: ['string']
                                    }
                                }
                            },
                            duration: {
                                type: ['number']
                            },
                            includes: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            excludes: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            itinerary: {
                                type: ['array'],
                                items: {
                                    type: ['array'],
                                    items: {
                                        type: ['string']
                                    }
                                }
                            },
                            policies: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            booking_questions: {
                                type: ['array'],
                                items: {}
                            }
                        },
                        required: ['tags', 'adults', 'children', 'start_date', 'duration']
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes']
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total']
} as const;

export const $ThingsSearchPollRequestDto = {
    type: ['object'],
    properties: {},
    additionalProperties: false
} as const;

export const $ThingsSearchPollResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-22'
                        },
                        adults: {
                            type: ['integer'],
                            minimum: 1,
                            maximum: 9
                        },
                        children: {
                            type: ['integer'],
                            minimum: 1,
                            maximum: 9
                        },
                        filters: {
                            type: ['object'],
                            properties: {
                                radius: {
                                    type: ['integer'],
                                    minimum: 0,
                                    example: 100
                                },
                                start_price: {
                                    type: ['integer'],
                                    minimum: 0,
                                    example: 0
                                },
                                end_price: {
                                    type: ['integer'],
                                    minimum: 0,
                                    example: 1000
                                }
                            },
                            additionalProperties: false
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    static_id: {
                        type: ['string', 'null']
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['viator', 'tiqets', 'simplenight'],
                        example: 'viator'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['things-to-do']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    pay_at_property: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: 'ExtraDay - 81.83 EUR, ExtraHour - 22.89 EUR'
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean']
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    variants: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                id: {
                                    type: ['string']
                                },
                                ids: {
                                    type: ['string', 'null']
                                },
                                name: {
                                    type: ['string']
                                },
                                description: {
                                    type: ['string']
                                },
                                images: {
                                    type: ['array'],
                                    items: {
                                        type: ['string']
                                    }
                                },
                                index: {
                                    type: ['number']
                                },
                                tax: {
                                    default: 0,
                                    type: ['number']
                                },
                                price: {
                                    default: 0,
                                    type: ['number']
                                },
                                currency: {
                                    type: ['string'],
                                    minLength: 3,
                                    maxLength: 3
                                },
                                cancel_policy: {
                                    type: ['array'],
                                    items: {
                                        type: ['object'],
                                        properties: {
                                            type: {
                                                type: ['string'],
                                                enum: ['FREE_CANCELLATION', 'NOT_REFUNDABLE', 'PARTIAL_REFUND']
                                            },
                                            start: {
                                                type: ['string']
                                            },
                                            penalty_type: {
                                                type: ['string', 'null'],
                                                enum: ['PERCENT', 'PRICE', 'NIGHTS']
                                            },
                                            penalty_value: {
                                                type: ['number', 'null']
                                            },
                                            penalty_currency: {
                                                type: ['string', 'null'],
                                                minLength: 3,
                                                maxLength: 3
                                            }
                                        },
                                        required: ['type', 'start']
                                    }
                                },
                                price_description: {
                                    type: ['string']
                                },
                                free_cancellation: {
                                    type: ['boolean']
                                },
                                attributes: {
                                    type: ['object'],
                                    properties: {
                                        start_date: {
                                            type: ['string']
                                        },
                                        start_time: {
                                            type: ['string']
                                        },
                                        booking_questions: {
                                            type: ['array'],
                                            items: {
                                                type: ['object'],
                                                properties: {
                                                    id: {
                                                        type: ['string'],
                                                        example: 'LANGUAGE_GUIDE'
                                                    },
                                                    legacyBookingQuestionId: {
                                                        type: ['number']
                                                    },
                                                    group: {
                                                        type: ['string'],
                                                        enum: ['PER_BOOKING', 'PER_TRAVELER']
                                                    },
                                                    type: {
                                                        type: ['string'],
                                                        enum: ['STRING', 'NUMBER_AND_UNIT', 'DATE', 'TIME', 'LOCATION_REF_OR_FREE_TEXT']
                                                    },
                                                    required: {
                                                        type: ['string'],
                                                        enum: ['MANDATORY', 'OPTIONAL', 'CONDITIONAL']
                                                    },
                                                    label: {
                                                        type: ['string'],
                                                        example: 'Language Guide'
                                                    },
                                                    hint: {
                                                        type: ['string']
                                                    },
                                                    maxLength: {
                                                        type: ['number']
                                                    },
                                                    travelerNum: {
                                                        type: ['number']
                                                    },
                                                    units: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['string'],
                                                            enum: ['LOCATION_REFERENCE', 'FREETEXT']
                                                        }
                                                    },
                                                    allowedAnswers: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['string']
                                                        },
                                                        example: ['en']
                                                    }
                                                },
                                                required: ['id', 'group', 'type', 'required', 'label'],
                                                additionalProperties: false
                                            }
                                        }
                                    },
                                    required: ['start_date']
                                }
                            },
                            required: ['id', 'ids', 'name', 'description', 'images', 'index', 'currency', 'price_description', 'free_cancellation', 'attributes']
                        }
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            tags: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            adults: {
                                type: ['number']
                            },
                            children: {
                                type: ['number']
                            },
                            start_date: {
                                type: ['string']
                            },
                            start_time: {
                                type: ['string']
                            },
                            nights: {
                                type: ['number']
                            },
                            company: {
                                type: ['string']
                            },
                            start_location: {
                                type: ['string']
                            },
                            pickup_description: {
                                type: ['string']
                            },
                            pickup_locations: {
                                type: ['array'],
                                items: {
                                    type: ['array'],
                                    items: {
                                        type: ['string']
                                    }
                                }
                            },
                            duration: {
                                type: ['number']
                            },
                            includes: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            excludes: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            itinerary: {
                                type: ['array'],
                                items: {
                                    type: ['array'],
                                    items: {
                                        type: ['string']
                                    }
                                }
                            },
                            policies: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            booking_questions: {
                                type: ['array'],
                                items: {}
                            }
                        },
                        required: ['tags', 'adults', 'children', 'start_date', 'duration']
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes']
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total']
} as const;

export const $ThingsSuggestionsResponseDto = {
    type: ['object'],
    properties: {
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    static_id: {
                        type: ['string', 'null']
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['viator', 'tiqets', 'simplenight'],
                        example: 'viator'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['things-to-do']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    pay_at_property: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: 'ExtraDay - 81.83 EUR, ExtraHour - 22.89 EUR'
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean']
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    variants: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                id: {
                                    type: ['string']
                                },
                                ids: {
                                    type: ['string', 'null']
                                },
                                name: {
                                    type: ['string']
                                },
                                description: {
                                    type: ['string']
                                },
                                images: {
                                    type: ['array'],
                                    items: {
                                        type: ['string']
                                    }
                                },
                                index: {
                                    type: ['number']
                                },
                                tax: {
                                    default: 0,
                                    type: ['number']
                                },
                                price: {
                                    default: 0,
                                    type: ['number']
                                },
                                currency: {
                                    type: ['string'],
                                    minLength: 3,
                                    maxLength: 3
                                },
                                cancel_policy: {
                                    type: ['array'],
                                    items: {
                                        type: ['object'],
                                        properties: {
                                            type: {
                                                type: ['string'],
                                                enum: ['FREE_CANCELLATION', 'NOT_REFUNDABLE', 'PARTIAL_REFUND']
                                            },
                                            start: {
                                                type: ['string']
                                            },
                                            penalty_type: {
                                                type: ['string', 'null'],
                                                enum: ['PERCENT', 'PRICE', 'NIGHTS']
                                            },
                                            penalty_value: {
                                                type: ['number', 'null']
                                            },
                                            penalty_currency: {
                                                type: ['string', 'null'],
                                                minLength: 3,
                                                maxLength: 3
                                            }
                                        },
                                        required: ['type', 'start']
                                    }
                                },
                                price_description: {
                                    type: ['string']
                                },
                                free_cancellation: {
                                    type: ['boolean']
                                },
                                attributes: {
                                    type: ['object'],
                                    properties: {
                                        start_date: {
                                            type: ['string']
                                        },
                                        start_time: {
                                            type: ['string']
                                        },
                                        booking_questions: {
                                            type: ['array'],
                                            items: {
                                                type: ['object'],
                                                properties: {
                                                    id: {
                                                        type: ['string'],
                                                        example: 'LANGUAGE_GUIDE'
                                                    },
                                                    legacyBookingQuestionId: {
                                                        type: ['number']
                                                    },
                                                    group: {
                                                        type: ['string'],
                                                        enum: ['PER_BOOKING', 'PER_TRAVELER']
                                                    },
                                                    type: {
                                                        type: ['string'],
                                                        enum: ['STRING', 'NUMBER_AND_UNIT', 'DATE', 'TIME', 'LOCATION_REF_OR_FREE_TEXT']
                                                    },
                                                    required: {
                                                        type: ['string'],
                                                        enum: ['MANDATORY', 'OPTIONAL', 'CONDITIONAL']
                                                    },
                                                    label: {
                                                        type: ['string'],
                                                        example: 'Language Guide'
                                                    },
                                                    hint: {
                                                        type: ['string']
                                                    },
                                                    maxLength: {
                                                        type: ['number']
                                                    },
                                                    travelerNum: {
                                                        type: ['number']
                                                    },
                                                    units: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['string'],
                                                            enum: ['LOCATION_REFERENCE', 'FREETEXT']
                                                        }
                                                    },
                                                    allowedAnswers: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['string']
                                                        },
                                                        example: ['en']
                                                    }
                                                },
                                                required: ['id', 'group', 'type', 'required', 'label'],
                                                additionalProperties: false
                                            }
                                        }
                                    },
                                    required: ['start_date']
                                }
                            },
                            required: ['id', 'ids', 'name', 'description', 'images', 'index', 'currency', 'price_description', 'free_cancellation', 'attributes']
                        }
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            tags: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            adults: {
                                type: ['number']
                            },
                            children: {
                                type: ['number']
                            },
                            start_date: {
                                type: ['string']
                            },
                            start_time: {
                                type: ['string']
                            },
                            nights: {
                                type: ['number']
                            },
                            company: {
                                type: ['string']
                            },
                            start_location: {
                                type: ['string']
                            },
                            pickup_description: {
                                type: ['string']
                            },
                            pickup_locations: {
                                type: ['array'],
                                items: {
                                    type: ['array'],
                                    items: {
                                        type: ['string']
                                    }
                                }
                            },
                            duration: {
                                type: ['number']
                            },
                            includes: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            excludes: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            itinerary: {
                                type: ['array'],
                                items: {
                                    type: ['array'],
                                    items: {
                                        type: ['string']
                                    }
                                }
                            },
                            policies: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            booking_questions: {
                                type: ['array'],
                                items: {}
                            }
                        },
                        required: ['tags', 'adults', 'children', 'start_date', 'duration']
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes']
            }
        }
    },
    required: ['results']
} as const;

export const $ThingsDetailsResponseDto = {
    type: ['object'],
    properties: {
        id: {
            type: ['string'],
            format: 'uuid'
        },
        static_id: {
            type: ['string', 'null']
        },
        ids: {
            type: ['string']
        },
        supplier: {
            type: ['string'],
            enum: ['viator', 'tiqets', 'simplenight'],
            example: 'viator'
        },
        supplier_env: {
            type: ['string'],
            enum: ['sandbox', 'production']
        },
        index: {
            type: ['number'],
            example: 0
        },
        category: {
            type: ['string'],
            enum: ['things-to-do']
        },
        name: {
            type: ['string']
        },
        description: {
            type: ['string']
        },
        address: {
            type: ['string']
        },
        latitude: {
            type: ['number']
        },
        longitude: {
            type: ['number']
        },
        distance: {
            type: ['number']
        },
        distance_uom: {
            type: ['string'],
            enum: ['km', 'mi']
        },
        images: {
            type: ['array'],
            items: {
                type: ['string']
            }
        },
        currency: {
            default: 'USD',
            type: ['string'],
            minLength: 3,
            maxLength: 3
        },
        tax: {
            default: 0,
            type: ['number']
        },
        price: {
            default: 0,
            type: ['number']
        },
        pay_at_property: {
            default: 0,
            type: ['number']
        },
        price_description: {
            type: ['string'],
            example: 'ExtraDay - 81.83 EUR, ExtraHour - 22.89 EUR'
        },
        free_cancellation: {
            default: false,
            type: ['boolean']
        },
        rating: {
            default: 0,
            type: ['number']
        },
        reviews: {
            default: 0,
            type: ['number']
        },
        variants: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string']
                    },
                    ids: {
                        type: ['string', 'null']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    index: {
                        type: ['number']
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    currency: {
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    cancel_policy: {
                        type: ['array'],
                        items: {
                            type: ['object'],
                            properties: {
                                type: {
                                    type: ['string'],
                                    enum: ['FREE_CANCELLATION', 'NOT_REFUNDABLE', 'PARTIAL_REFUND']
                                },
                                start: {
                                    type: ['string']
                                },
                                penalty_type: {
                                    type: ['string', 'null'],
                                    enum: ['PERCENT', 'PRICE', 'NIGHTS']
                                },
                                penalty_value: {
                                    type: ['number', 'null']
                                },
                                penalty_currency: {
                                    type: ['string', 'null'],
                                    minLength: 3,
                                    maxLength: 3
                                }
                            },
                            required: ['type', 'start']
                        }
                    },
                    price_description: {
                        type: ['string']
                    },
                    free_cancellation: {
                        type: ['boolean']
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            start_date: {
                                type: ['string']
                            },
                            start_time: {
                                type: ['string']
                            },
                            booking_questions: {
                                type: ['array'],
                                items: {
                                    type: ['object'],
                                    properties: {
                                        id: {
                                            type: ['string'],
                                            example: 'LANGUAGE_GUIDE'
                                        },
                                        legacyBookingQuestionId: {
                                            type: ['number']
                                        },
                                        group: {
                                            type: ['string'],
                                            enum: ['PER_BOOKING', 'PER_TRAVELER']
                                        },
                                        type: {
                                            type: ['string'],
                                            enum: ['STRING', 'NUMBER_AND_UNIT', 'DATE', 'TIME', 'LOCATION_REF_OR_FREE_TEXT']
                                        },
                                        required: {
                                            type: ['string'],
                                            enum: ['MANDATORY', 'OPTIONAL', 'CONDITIONAL']
                                        },
                                        label: {
                                            type: ['string'],
                                            example: 'Language Guide'
                                        },
                                        hint: {
                                            type: ['string']
                                        },
                                        maxLength: {
                                            type: ['number']
                                        },
                                        travelerNum: {
                                            type: ['number']
                                        },
                                        units: {
                                            type: ['array'],
                                            items: {
                                                type: ['string'],
                                                enum: ['LOCATION_REFERENCE', 'FREETEXT']
                                            }
                                        },
                                        allowedAnswers: {
                                            type: ['array'],
                                            items: {
                                                type: ['string']
                                            },
                                            example: ['en']
                                        }
                                    },
                                    required: ['id', 'group', 'type', 'required', 'label'],
                                    additionalProperties: false
                                }
                            }
                        },
                        required: ['start_date']
                    }
                },
                required: ['id', 'ids', 'name', 'description', 'images', 'index', 'currency', 'price_description', 'free_cancellation', 'attributes']
            }
        },
        status: {
            type: ['string'],
            enum: ['Active', 'Pending', 'Expired'],
            example: 'Active'
        },
        attributes: {
            type: ['object'],
            properties: {
                tags: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    }
                },
                adults: {
                    type: ['number']
                },
                children: {
                    type: ['number']
                },
                start_date: {
                    type: ['string']
                },
                start_time: {
                    type: ['string']
                },
                nights: {
                    type: ['number']
                },
                company: {
                    type: ['string']
                },
                start_location: {
                    type: ['string']
                },
                pickup_description: {
                    type: ['string']
                },
                pickup_locations: {
                    type: ['array'],
                    items: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    }
                },
                duration: {
                    type: ['number']
                },
                includes: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    }
                },
                excludes: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    }
                },
                itinerary: {
                    type: ['array'],
                    items: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    }
                },
                policies: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    }
                },
                booking_questions: {
                    type: ['array'],
                    items: {}
                }
            },
            required: ['tags', 'adults', 'children', 'start_date', 'duration']
        }
    },
    required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'variants', 'status', 'attributes']
} as const;

export const $DiningSearchRequestDto = {
    type: ['object'],
    properties: {
        language: {
            type: ['string'],
            minLength: 2,
            maxLength: 2,
            description: 'Content language.',
            example: 'en'
        },
        currency: {
            type: ['string'],
            minLength: 3,
            maxLength: 3,
            description: 'Currency code.',
            example: 'USD'
        },
        uom: {
            type: ['string'],
            enum: ['km', 'mi'],
            description: 'Unit of measure (km or mi).',
            example: 'km'
        },
        start_location: {
            type: ['string'],
            example: '42.3653985,-71.01078319999999'
        },
        start_date: {
            type: ['string'],
            example: '2024-05-21'
        },
        sort: {
            type: ['string'],
            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
        },
        order: {
            type: ['string'],
            enum: ['asc', 'desc']
        },
        adults: {
            type: ['integer'],
            minimum: 1,
            maximum: 100
        },
        filters: {
            type: ['object'],
            properties: {
                keyword: {
                    type: ['string']
                },
                radius: {
                    type: ['integer'],
                    minimum: 1,
                    maximum: 1000
                }
            },
            additionalProperties: false
        },
        page: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        limit: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        poll: {
            default: true,
            type: ['boolean'],
            description: 'Poll for updates or return full data in one request.'
        },
        raw: {
            type: ['boolean'],
            description: 'Debug mode. Return raw data without normalization. Dev only.'
        }
    },
    required: ['language', 'currency', 'uom', 'start_location', 'start_date'],
    additionalProperties: false
} as const;

export const $DiningSearchResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        adults: {
                            type: ['integer'],
                            minimum: 1,
                            maximum: 100
                        },
                        filters: {
                            type: ['object'],
                            properties: {
                                keyword: {
                                    type: ['string']
                                },
                                radius: {
                                    type: ['integer'],
                                    minimum: 1,
                                    maximum: 1000
                                }
                            },
                            additionalProperties: false
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'start_date'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['yelp', 'opentable'],
                        example: 'yelp'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['dining']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: '$$$'
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            phone: {
                                type: ['string'],
                                example: '+16468337811'
                            },
                            adults: {
                                type: ['number'],
                                example: 1
                            },
                            children: {
                                type: ['number'],
                                example: 0
                            },
                            categories: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                },
                                example: ['New American', 'Asian Fusion']
                            },
                            start_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            start_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            reservations: {
                                type: ['boolean'],
                                example: false
                            }
                        },
                        required: ['phone', 'adults', 'children', 'categories', 'start_date', 'start_location', 'reservations'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                additionalProperties: false
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total'],
    additionalProperties: false
} as const;

export const $DiningSearchPollRequestDto = {
    type: ['object'],
    properties: {},
    additionalProperties: false
} as const;

export const $DiningSearchPollResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        adults: {
                            type: ['integer'],
                            minimum: 1,
                            maximum: 100
                        },
                        filters: {
                            type: ['object'],
                            properties: {
                                keyword: {
                                    type: ['string']
                                },
                                radius: {
                                    type: ['integer'],
                                    minimum: 1,
                                    maximum: 1000
                                }
                            },
                            additionalProperties: false
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'start_date'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['yelp', 'opentable'],
                        example: 'yelp'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['dining']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: '$$$'
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            phone: {
                                type: ['string'],
                                example: '+16468337811'
                            },
                            adults: {
                                type: ['number'],
                                example: 1
                            },
                            children: {
                                type: ['number'],
                                example: 0
                            },
                            categories: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                },
                                example: ['New American', 'Asian Fusion']
                            },
                            start_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            start_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            reservations: {
                                type: ['boolean'],
                                example: false
                            }
                        },
                        required: ['phone', 'adults', 'children', 'categories', 'start_date', 'start_location', 'reservations'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                additionalProperties: false
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total'],
    additionalProperties: false
} as const;

export const $DiningSuggestionsResponseDto = {
    type: ['object'],
    properties: {
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['yelp', 'opentable'],
                        example: 'yelp'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['dining']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: '$$$'
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            phone: {
                                type: ['string'],
                                example: '+16468337811'
                            },
                            adults: {
                                type: ['number'],
                                example: 1
                            },
                            children: {
                                type: ['number'],
                                example: 0
                            },
                            categories: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                },
                                example: ['New American', 'Asian Fusion']
                            },
                            start_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            start_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            reservations: {
                                type: ['boolean'],
                                example: false
                            }
                        },
                        required: ['phone', 'adults', 'children', 'categories', 'start_date', 'start_location', 'reservations'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                additionalProperties: false
            }
        }
    },
    required: ['results'],
    additionalProperties: false
} as const;

export const $DiningDetailsResponseDto = {
    type: ['object'],
    properties: {
        id: {
            type: ['string'],
            format: 'uuid'
        },
        ids: {
            type: ['string']
        },
        supplier: {
            type: ['string'],
            enum: ['yelp', 'opentable'],
            example: 'yelp'
        },
        supplier_env: {
            type: ['string'],
            enum: ['sandbox', 'production']
        },
        index: {
            type: ['number'],
            example: 0
        },
        category: {
            type: ['string'],
            enum: ['dining']
        },
        name: {
            type: ['string']
        },
        description: {
            type: ['string']
        },
        address: {
            type: ['string']
        },
        latitude: {
            type: ['number']
        },
        longitude: {
            type: ['number']
        },
        distance: {
            type: ['number']
        },
        distance_uom: {
            type: ['string'],
            enum: ['km', 'mi']
        },
        images: {
            type: ['array'],
            items: {
                type: ['string']
            }
        },
        supplier_tax: {
            default: 0,
            type: ['number']
        },
        supplier_price: {
            default: 0,
            type: ['number']
        },
        supplier_currency: {
            default: 'USD',
            type: ['string'],
            minLength: 3,
            maxLength: 3
        },
        currency: {
            default: 'USD',
            type: ['string'],
            minLength: 3,
            maxLength: 3
        },
        tax: {
            default: 0,
            type: ['number']
        },
        price: {
            default: 0,
            type: ['number']
        },
        price_description: {
            type: ['string'],
            example: '$$$'
        },
        rating: {
            default: 0,
            type: ['number']
        },
        reviews: {
            default: 0,
            type: ['number']
        },
        status: {
            type: ['string'],
            enum: ['Active', 'Pending', 'Expired'],
            example: 'Active'
        },
        attributes: {
            type: ['object'],
            properties: {
                phone: {
                    type: ['string'],
                    example: '+16468337811'
                },
                adults: {
                    type: ['number'],
                    example: 1
                },
                children: {
                    type: ['number'],
                    example: 0
                },
                categories: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    },
                    example: ['New American', 'Asian Fusion']
                },
                start_date: {
                    type: ['string'],
                    example: '2024-05-07 14:00:00'
                },
                start_location: {
                    type: ['string'],
                    example: '42.365597,-71.00956'
                },
                reservations: {
                    type: ['boolean'],
                    example: false
                },
                reviews: {
                    type: ['array'],
                    items: {
                        type: ['object'],
                        properties: {
                            id: {
                                type: ['number'],
                                example: 1
                            },
                            ids: {
                                type: ['string'],
                                example: 'FVGEXlAWg-vnKXZwJcZUVg'
                            },
                            name: {
                                type: ['string'],
                                example: 'Dontlistentome H.'
                            },
                            image: {
                                type: ['string'],
                                example: 'https://s3-media1.fl.yelpcdn.com/photo/9u9-SvJ33YajfWw2y8HgQQ/o.jpg'
                            },
                            rating: {
                                type: ['number'],
                                example: 8.4
                            },
                            review: {
                                type: ['string'],
                                example: `Great Ambiance (obviously)
-Service was excellent Jae was our server and she was very helpful and very attentive.
-Food was excellent, me and my wife got...`
                            },
                            date: {
                                type: ['string'],
                                example: '2024-03-26 20:01:26'
                            }
                        },
                        required: ['id', 'ids', 'name', 'rating', 'review', 'date'],
                        additionalProperties: false
                    }
                },
                hours: {
                    type: ['array'],
                    items: {
                        type: ['object', 'null'],
                        properties: {
                            start: {
                                type: ['string'],
                                example: '1000'
                            },
                            end: {
                                type: ['string'],
                                example: '0100'
                            },
                            day: {
                                type: ['number'],
                                example: 0
                            },
                            start2: {
                                type: ['string'],
                                example: '1000'
                            },
                            end2: {
                                type: ['string'],
                                example: '0100'
                            }
                        },
                        required: ['start', 'end', 'day'],
                        additionalProperties: false
                    }
                },
                availabilities: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    }
                }
            },
            required: ['phone', 'adults', 'children', 'categories', 'start_date', 'start_location', 'reservations', 'reviews', 'hours', 'availabilities'],
            additionalProperties: false
        }
    },
    required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
    additionalProperties: false
} as const;

export const $ParkingSearchRequestDto = {
    type: ['object'],
    properties: {
        language: {
            type: ['string'],
            minLength: 2,
            maxLength: 2,
            description: 'Content language.',
            example: 'en'
        },
        currency: {
            type: ['string'],
            minLength: 3,
            maxLength: 3,
            description: 'Currency code.',
            example: 'USD'
        },
        uom: {
            type: ['string'],
            enum: ['km', 'mi'],
            description: 'Unit of measure (km or mi).',
            example: 'km'
        },
        start_location: {
            type: ['string'],
            example: '42.3653985,-71.01078319999999'
        },
        start_date: {
            type: ['string'],
            example: '2024-05-21'
        },
        end_date: {
            type: ['string'],
            example: '2024-05-21'
        },
        sort: {
            type: ['string'],
            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
        },
        order: {
            type: ['string'],
            enum: ['asc', 'desc']
        },
        filters: {
            type: ['object'],
            properties: {
                radius: {
                    type: ['integer'],
                    minimum: 1,
                    maximum: 1000
                }
            },
            additionalProperties: false
        },
        page: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        limit: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        poll: {
            default: true,
            type: ['boolean'],
            description: 'Poll for updates or return full data in one request.'
        },
        raw: {
            type: ['boolean'],
            description: 'Debug mode. Return raw data without normalization. Dev only.'
        }
    },
    required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date'],
    additionalProperties: false
} as const;

export const $ParkingSearchResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        filters: {
                            type: ['object'],
                            properties: {
                                radius: {
                                    type: ['integer'],
                                    minimum: 1,
                                    maximum: 1000
                                }
                            },
                            additionalProperties: false
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['parkopedia'],
                        example: 'parkopedia'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['parking']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: '$$$'
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean', 'null']
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            start_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            start_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            end_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            reservations: {
                                type: ['boolean'],
                                example: false
                            },
                            type: {
                                type: ['string'],
                                enum: ['ON_STREET', 'OFF_STREET'],
                                example: 'ON_STREET'
                            },
                            height: {
                                type: ['number'],
                                example: 0
                            },
                            company: {
                                type: ['string'],
                                example: 'Boston Transportation Department'
                            },
                            reviews: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            surface: {
                                type: ['string'],
                                example: 'NOT_COVERED'
                            },
                            capacity: {
                                type: ['number'],
                                example: 3
                            },
                            features: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                },
                                example: ['DISABLED_SPACES']
                            },
                            location_id: {
                                type: ['string'],
                                example: '1234'
                            },
                            times: {
                                type: ['object'],
                                properties: {
                                    open: {
                                        type: ['array'],
                                        items: {
                                            type: ['object'],
                                            properties: {
                                                days: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['string'],
                                                        enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                    }
                                                },
                                                from: {
                                                    type: ['string'],
                                                    example: '0000'
                                                },
                                                to: {
                                                    type: ['string'],
                                                    example: '2400'
                                                }
                                            },
                                            required: ['days', 'from', 'to'],
                                            additionalProperties: false
                                        }
                                    },
                                    restricted: {
                                        type: ['array'],
                                        items: {
                                            type: ['object'],
                                            properties: {
                                                reason: {
                                                    type: ['string'],
                                                    example: 'BROOMING'
                                                },
                                                exceptions: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['object'],
                                                        properties: {
                                                            type: {
                                                                type: ['string'],
                                                                example: 'LOADING'
                                                            },
                                                            max_stay: {
                                                                type: ['string'],
                                                                example: 'PT10M'
                                                            }
                                                        },
                                                        additionalProperties: false
                                                    }
                                                },
                                                active_times: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['object'],
                                                        properties: {
                                                            days: {
                                                                type: ['array'],
                                                                items: {
                                                                    type: ['string'],
                                                                    enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                                }
                                                            },
                                                            from: {
                                                                type: ['string'],
                                                                example: '0000'
                                                            },
                                                            to: {
                                                                type: ['string'],
                                                                example: '2400'
                                                            }
                                                        },
                                                        required: ['days', 'from', 'to'],
                                                        additionalProperties: false
                                                    }
                                                }
                                            },
                                            required: ['active_times'],
                                            additionalProperties: false
                                        }
                                    }
                                },
                                required: ['open'],
                                additionalProperties: false
                            },
                            rates: {
                                type: ['array'],
                                items: {
                                    type: ['object'],
                                    properties: {
                                        eligibility: {
                                            type: ['string'],
                                            enum: ['DEFAULT', 'RESIDENTS', 'VALET', 'EVENT', 'VALIDATION', 'VISITORS', 'DURATION_ADDITIONAL'],
                                            example: 'DEFAULT'
                                        },
                                        max_stay: {
                                            type: ['string']
                                        },
                                        rates: {
                                            type: ['array'],
                                            items: {
                                                type: ['object'],
                                                properties: {
                                                    type: {
                                                        type: ['string'],
                                                        enum: ['CUSTOM', 'DURATION', 'DURATION_ADDITIONAL'],
                                                        example: 'CUSTOM'
                                                    },
                                                    price: {
                                                        type: ['number'],
                                                        example: 0
                                                    },
                                                    value: {
                                                        type: ['string'],
                                                        example: 'FLAT_RATE'
                                                    },
                                                    conditions: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['object'],
                                                            properties: {
                                                                days: {
                                                                    type: ['array'],
                                                                    items: {
                                                                        type: ['string'],
                                                                        enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                                    }
                                                                },
                                                                exit: {
                                                                    type: ['object'],
                                                                    properties: {
                                                                        start: {
                                                                            type: ['string'],
                                                                            example: '0600'
                                                                        },
                                                                        end: {
                                                                            type: ['string'],
                                                                            example: '0600'
                                                                        }
                                                                    },
                                                                    additionalProperties: false
                                                                },
                                                                enter: {
                                                                    type: ['object'],
                                                                    properties: {
                                                                        start: {
                                                                            type: ['string'],
                                                                            example: '0600'
                                                                        },
                                                                        end: {
                                                                            type: ['string'],
                                                                            example: '0600'
                                                                        }
                                                                    },
                                                                    additionalProperties: false
                                                                },
                                                                max_stay: {
                                                                    type: ['string']
                                                                }
                                                            },
                                                            additionalProperties: false
                                                        }
                                                    }
                                                },
                                                required: ['type', 'price', 'value'],
                                                additionalProperties: false
                                            }
                                        },
                                        active_times: {
                                            type: ['array'],
                                            items: {
                                                type: ['object'],
                                                properties: {
                                                    days: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['string'],
                                                            enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                        }
                                                    },
                                                    from: {
                                                        type: ['string'],
                                                        example: '0000'
                                                    },
                                                    to: {
                                                        type: ['string'],
                                                        example: '2400'
                                                    }
                                                },
                                                required: ['days', 'from', 'to'],
                                                additionalProperties: false
                                            }
                                        }
                                    },
                                    required: ['eligibility'],
                                    additionalProperties: false
                                }
                            }
                        },
                        required: ['start_date', 'start_location', 'end_date', 'reservations', 'type', 'height', 'company', 'reviews', 'surface', 'capacity', 'features', 'times', 'rates'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                additionalProperties: false
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total'],
    additionalProperties: false
} as const;

export const $ParkingSearchPollRequestDto = {
    type: ['object'],
    properties: {},
    additionalProperties: false
} as const;

export const $ParkingSearchPollResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        filters: {
                            type: ['object'],
                            properties: {
                                radius: {
                                    type: ['integer'],
                                    minimum: 1,
                                    maximum: 1000
                                }
                            },
                            additionalProperties: false
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['parkopedia'],
                        example: 'parkopedia'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['parking']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: '$$$'
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean', 'null']
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            start_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            start_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            end_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            reservations: {
                                type: ['boolean'],
                                example: false
                            },
                            type: {
                                type: ['string'],
                                enum: ['ON_STREET', 'OFF_STREET'],
                                example: 'ON_STREET'
                            },
                            height: {
                                type: ['number'],
                                example: 0
                            },
                            company: {
                                type: ['string'],
                                example: 'Boston Transportation Department'
                            },
                            reviews: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            surface: {
                                type: ['string'],
                                example: 'NOT_COVERED'
                            },
                            capacity: {
                                type: ['number'],
                                example: 3
                            },
                            features: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                },
                                example: ['DISABLED_SPACES']
                            },
                            location_id: {
                                type: ['string'],
                                example: '1234'
                            },
                            times: {
                                type: ['object'],
                                properties: {
                                    open: {
                                        type: ['array'],
                                        items: {
                                            type: ['object'],
                                            properties: {
                                                days: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['string'],
                                                        enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                    }
                                                },
                                                from: {
                                                    type: ['string'],
                                                    example: '0000'
                                                },
                                                to: {
                                                    type: ['string'],
                                                    example: '2400'
                                                }
                                            },
                                            required: ['days', 'from', 'to'],
                                            additionalProperties: false
                                        }
                                    },
                                    restricted: {
                                        type: ['array'],
                                        items: {
                                            type: ['object'],
                                            properties: {
                                                reason: {
                                                    type: ['string'],
                                                    example: 'BROOMING'
                                                },
                                                exceptions: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['object'],
                                                        properties: {
                                                            type: {
                                                                type: ['string'],
                                                                example: 'LOADING'
                                                            },
                                                            max_stay: {
                                                                type: ['string'],
                                                                example: 'PT10M'
                                                            }
                                                        },
                                                        additionalProperties: false
                                                    }
                                                },
                                                active_times: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['object'],
                                                        properties: {
                                                            days: {
                                                                type: ['array'],
                                                                items: {
                                                                    type: ['string'],
                                                                    enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                                }
                                                            },
                                                            from: {
                                                                type: ['string'],
                                                                example: '0000'
                                                            },
                                                            to: {
                                                                type: ['string'],
                                                                example: '2400'
                                                            }
                                                        },
                                                        required: ['days', 'from', 'to'],
                                                        additionalProperties: false
                                                    }
                                                }
                                            },
                                            required: ['active_times'],
                                            additionalProperties: false
                                        }
                                    }
                                },
                                required: ['open'],
                                additionalProperties: false
                            },
                            rates: {
                                type: ['array'],
                                items: {
                                    type: ['object'],
                                    properties: {
                                        eligibility: {
                                            type: ['string'],
                                            enum: ['DEFAULT', 'RESIDENTS', 'VALET', 'EVENT', 'VALIDATION', 'VISITORS', 'DURATION_ADDITIONAL'],
                                            example: 'DEFAULT'
                                        },
                                        max_stay: {
                                            type: ['string']
                                        },
                                        rates: {
                                            type: ['array'],
                                            items: {
                                                type: ['object'],
                                                properties: {
                                                    type: {
                                                        type: ['string'],
                                                        enum: ['CUSTOM', 'DURATION', 'DURATION_ADDITIONAL'],
                                                        example: 'CUSTOM'
                                                    },
                                                    price: {
                                                        type: ['number'],
                                                        example: 0
                                                    },
                                                    value: {
                                                        type: ['string'],
                                                        example: 'FLAT_RATE'
                                                    },
                                                    conditions: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['object'],
                                                            properties: {
                                                                days: {
                                                                    type: ['array'],
                                                                    items: {
                                                                        type: ['string'],
                                                                        enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                                    }
                                                                },
                                                                exit: {
                                                                    type: ['object'],
                                                                    properties: {
                                                                        start: {
                                                                            type: ['string'],
                                                                            example: '0600'
                                                                        },
                                                                        end: {
                                                                            type: ['string'],
                                                                            example: '0600'
                                                                        }
                                                                    },
                                                                    additionalProperties: false
                                                                },
                                                                enter: {
                                                                    type: ['object'],
                                                                    properties: {
                                                                        start: {
                                                                            type: ['string'],
                                                                            example: '0600'
                                                                        },
                                                                        end: {
                                                                            type: ['string'],
                                                                            example: '0600'
                                                                        }
                                                                    },
                                                                    additionalProperties: false
                                                                },
                                                                max_stay: {
                                                                    type: ['string']
                                                                }
                                                            },
                                                            additionalProperties: false
                                                        }
                                                    }
                                                },
                                                required: ['type', 'price', 'value'],
                                                additionalProperties: false
                                            }
                                        },
                                        active_times: {
                                            type: ['array'],
                                            items: {
                                                type: ['object'],
                                                properties: {
                                                    days: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['string'],
                                                            enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                        }
                                                    },
                                                    from: {
                                                        type: ['string'],
                                                        example: '0000'
                                                    },
                                                    to: {
                                                        type: ['string'],
                                                        example: '2400'
                                                    }
                                                },
                                                required: ['days', 'from', 'to'],
                                                additionalProperties: false
                                            }
                                        }
                                    },
                                    required: ['eligibility'],
                                    additionalProperties: false
                                }
                            }
                        },
                        required: ['start_date', 'start_location', 'end_date', 'reservations', 'type', 'height', 'company', 'reviews', 'surface', 'capacity', 'features', 'times', 'rates'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                additionalProperties: false
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total'],
    additionalProperties: false
} as const;

export const $ParkingSuggestionsResponseDto = {
    type: ['object'],
    properties: {
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['parkopedia'],
                        example: 'parkopedia'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['parking']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: '$$$'
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean', 'null']
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            start_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            start_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            end_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            reservations: {
                                type: ['boolean'],
                                example: false
                            },
                            type: {
                                type: ['string'],
                                enum: ['ON_STREET', 'OFF_STREET'],
                                example: 'ON_STREET'
                            },
                            height: {
                                type: ['number'],
                                example: 0
                            },
                            company: {
                                type: ['string'],
                                example: 'Boston Transportation Department'
                            },
                            reviews: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                }
                            },
                            surface: {
                                type: ['string'],
                                example: 'NOT_COVERED'
                            },
                            capacity: {
                                type: ['number'],
                                example: 3
                            },
                            features: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                },
                                example: ['DISABLED_SPACES']
                            },
                            location_id: {
                                type: ['string'],
                                example: '1234'
                            },
                            times: {
                                type: ['object'],
                                properties: {
                                    open: {
                                        type: ['array'],
                                        items: {
                                            type: ['object'],
                                            properties: {
                                                days: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['string'],
                                                        enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                    }
                                                },
                                                from: {
                                                    type: ['string'],
                                                    example: '0000'
                                                },
                                                to: {
                                                    type: ['string'],
                                                    example: '2400'
                                                }
                                            },
                                            required: ['days', 'from', 'to'],
                                            additionalProperties: false
                                        }
                                    },
                                    restricted: {
                                        type: ['array'],
                                        items: {
                                            type: ['object'],
                                            properties: {
                                                reason: {
                                                    type: ['string'],
                                                    example: 'BROOMING'
                                                },
                                                exceptions: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['object'],
                                                        properties: {
                                                            type: {
                                                                type: ['string'],
                                                                example: 'LOADING'
                                                            },
                                                            max_stay: {
                                                                type: ['string'],
                                                                example: 'PT10M'
                                                            }
                                                        },
                                                        additionalProperties: false
                                                    }
                                                },
                                                active_times: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['object'],
                                                        properties: {
                                                            days: {
                                                                type: ['array'],
                                                                items: {
                                                                    type: ['string'],
                                                                    enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                                }
                                                            },
                                                            from: {
                                                                type: ['string'],
                                                                example: '0000'
                                                            },
                                                            to: {
                                                                type: ['string'],
                                                                example: '2400'
                                                            }
                                                        },
                                                        required: ['days', 'from', 'to'],
                                                        additionalProperties: false
                                                    }
                                                }
                                            },
                                            required: ['active_times'],
                                            additionalProperties: false
                                        }
                                    }
                                },
                                required: ['open'],
                                additionalProperties: false
                            },
                            rates: {
                                type: ['array'],
                                items: {
                                    type: ['object'],
                                    properties: {
                                        eligibility: {
                                            type: ['string'],
                                            enum: ['DEFAULT', 'RESIDENTS', 'VALET', 'EVENT', 'VALIDATION', 'VISITORS', 'DURATION_ADDITIONAL'],
                                            example: 'DEFAULT'
                                        },
                                        max_stay: {
                                            type: ['string']
                                        },
                                        rates: {
                                            type: ['array'],
                                            items: {
                                                type: ['object'],
                                                properties: {
                                                    type: {
                                                        type: ['string'],
                                                        enum: ['CUSTOM', 'DURATION', 'DURATION_ADDITIONAL'],
                                                        example: 'CUSTOM'
                                                    },
                                                    price: {
                                                        type: ['number'],
                                                        example: 0
                                                    },
                                                    value: {
                                                        type: ['string'],
                                                        example: 'FLAT_RATE'
                                                    },
                                                    conditions: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['object'],
                                                            properties: {
                                                                days: {
                                                                    type: ['array'],
                                                                    items: {
                                                                        type: ['string'],
                                                                        enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                                    }
                                                                },
                                                                exit: {
                                                                    type: ['object'],
                                                                    properties: {
                                                                        start: {
                                                                            type: ['string'],
                                                                            example: '0600'
                                                                        },
                                                                        end: {
                                                                            type: ['string'],
                                                                            example: '0600'
                                                                        }
                                                                    },
                                                                    additionalProperties: false
                                                                },
                                                                enter: {
                                                                    type: ['object'],
                                                                    properties: {
                                                                        start: {
                                                                            type: ['string'],
                                                                            example: '0600'
                                                                        },
                                                                        end: {
                                                                            type: ['string'],
                                                                            example: '0600'
                                                                        }
                                                                    },
                                                                    additionalProperties: false
                                                                },
                                                                max_stay: {
                                                                    type: ['string']
                                                                }
                                                            },
                                                            additionalProperties: false
                                                        }
                                                    }
                                                },
                                                required: ['type', 'price', 'value'],
                                                additionalProperties: false
                                            }
                                        },
                                        active_times: {
                                            type: ['array'],
                                            items: {
                                                type: ['object'],
                                                properties: {
                                                    days: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['string'],
                                                            enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                        }
                                                    },
                                                    from: {
                                                        type: ['string'],
                                                        example: '0000'
                                                    },
                                                    to: {
                                                        type: ['string'],
                                                        example: '2400'
                                                    }
                                                },
                                                required: ['days', 'from', 'to'],
                                                additionalProperties: false
                                            }
                                        }
                                    },
                                    required: ['eligibility'],
                                    additionalProperties: false
                                }
                            }
                        },
                        required: ['start_date', 'start_location', 'end_date', 'reservations', 'type', 'height', 'company', 'reviews', 'surface', 'capacity', 'features', 'times', 'rates'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                additionalProperties: false
            }
        }
    },
    required: ['results'],
    additionalProperties: false
} as const;

export const $ParkingDetailsResponseDto = {
    type: ['object'],
    properties: {
        id: {
            type: ['string'],
            format: 'uuid'
        },
        ids: {
            type: ['string']
        },
        supplier: {
            type: ['string'],
            enum: ['parkopedia'],
            example: 'parkopedia'
        },
        supplier_env: {
            type: ['string'],
            enum: ['sandbox', 'production']
        },
        index: {
            type: ['number'],
            example: 0
        },
        category: {
            type: ['string'],
            enum: ['parking']
        },
        name: {
            type: ['string']
        },
        description: {
            type: ['string']
        },
        address: {
            type: ['string']
        },
        latitude: {
            type: ['number']
        },
        longitude: {
            type: ['number']
        },
        distance: {
            type: ['number']
        },
        distance_uom: {
            type: ['string'],
            enum: ['km', 'mi']
        },
        images: {
            type: ['array'],
            items: {
                type: ['string']
            }
        },
        supplier_tax: {
            default: 0,
            type: ['number']
        },
        supplier_price: {
            default: 0,
            type: ['number']
        },
        supplier_currency: {
            default: 'USD',
            type: ['string'],
            minLength: 3,
            maxLength: 3
        },
        currency: {
            default: 'USD',
            type: ['string'],
            minLength: 3,
            maxLength: 3
        },
        tax: {
            default: 0,
            type: ['number']
        },
        price: {
            default: 0,
            type: ['number']
        },
        price_description: {
            type: ['string'],
            example: '$$$'
        },
        rating: {
            default: 0,
            type: ['number']
        },
        reviews: {
            default: 0,
            type: ['number']
        },
        status: {
            type: ['string'],
            enum: ['Active', 'Pending', 'Expired'],
            example: 'Active'
        },
        free_cancellation: {
            default: false,
            type: ['boolean', 'null']
        },
        attributes: {
            type: ['object'],
            properties: {
                start_date: {
                    type: ['string'],
                    example: '2024-05-07 14:00:00'
                },
                start_location: {
                    type: ['string'],
                    example: '42.365597,-71.00956'
                },
                end_date: {
                    type: ['string'],
                    example: '2024-05-07 14:00:00'
                },
                reservations: {
                    type: ['boolean'],
                    example: false
                },
                type: {
                    type: ['string'],
                    enum: ['ON_STREET', 'OFF_STREET'],
                    example: 'ON_STREET'
                },
                height: {
                    type: ['number'],
                    example: 0
                },
                company: {
                    type: ['string'],
                    example: 'Boston Transportation Department'
                },
                reviews: {
                    type: ['array'],
                    items: {
                        type: ['object'],
                        properties: {
                            id: {
                                type: ['number']
                            },
                            ids: {
                                type: ['number']
                            },
                            date: {
                                type: ['string']
                            },
                            image: {
                                type: ['string']
                            },
                            name: {
                                type: ['string']
                            },
                            review: {
                                type: ['string']
                            },
                            rating: {
                                type: ['number']
                            }
                        },
                        additionalProperties: false
                    }
                },
                surface: {
                    type: ['string'],
                    example: 'NOT_COVERED'
                },
                capacity: {
                    type: ['number'],
                    example: 3
                },
                features: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    },
                    example: ['DISABLED_SPACES']
                },
                location_id: {
                    type: ['string'],
                    example: '1234'
                },
                times: {
                    type: ['object'],
                    properties: {
                        open: {
                            type: ['array'],
                            items: {
                                type: ['object'],
                                properties: {
                                    days: {
                                        type: ['array'],
                                        items: {
                                            type: ['string'],
                                            enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                        }
                                    },
                                    from: {
                                        type: ['string'],
                                        example: '0000'
                                    },
                                    to: {
                                        type: ['string'],
                                        example: '2400'
                                    }
                                },
                                required: ['days', 'from', 'to'],
                                additionalProperties: false
                            }
                        },
                        restricted: {
                            type: ['array'],
                            items: {
                                type: ['object'],
                                properties: {
                                    reason: {
                                        type: ['string'],
                                        example: 'BROOMING'
                                    },
                                    exceptions: {
                                        type: ['array'],
                                        items: {
                                            type: ['object'],
                                            properties: {
                                                type: {
                                                    type: ['string'],
                                                    example: 'LOADING'
                                                },
                                                max_stay: {
                                                    type: ['string'],
                                                    example: 'PT10M'
                                                }
                                            },
                                            additionalProperties: false
                                        }
                                    },
                                    active_times: {
                                        type: ['array'],
                                        items: {
                                            type: ['object'],
                                            properties: {
                                                days: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['string'],
                                                        enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                    }
                                                },
                                                from: {
                                                    type: ['string'],
                                                    example: '0000'
                                                },
                                                to: {
                                                    type: ['string'],
                                                    example: '2400'
                                                }
                                            },
                                            required: ['days', 'from', 'to'],
                                            additionalProperties: false
                                        }
                                    }
                                },
                                required: ['active_times'],
                                additionalProperties: false
                            }
                        }
                    },
                    required: ['open'],
                    additionalProperties: false
                },
                rates: {
                    type: ['array'],
                    items: {
                        type: ['object'],
                        properties: {
                            eligibility: {
                                type: ['string'],
                                enum: ['DEFAULT', 'RESIDENTS', 'VALET', 'EVENT', 'VALIDATION', 'VISITORS', 'DURATION_ADDITIONAL'],
                                example: 'DEFAULT'
                            },
                            max_stay: {
                                type: ['string']
                            },
                            rates: {
                                type: ['array'],
                                items: {
                                    type: ['object'],
                                    properties: {
                                        type: {
                                            type: ['string'],
                                            enum: ['CUSTOM', 'DURATION', 'DURATION_ADDITIONAL'],
                                            example: 'CUSTOM'
                                        },
                                        price: {
                                            type: ['number'],
                                            example: 0
                                        },
                                        value: {
                                            type: ['string'],
                                            example: 'FLAT_RATE'
                                        },
                                        conditions: {
                                            type: ['array'],
                                            items: {
                                                type: ['object'],
                                                properties: {
                                                    days: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['string'],
                                                            enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                        }
                                                    },
                                                    exit: {
                                                        type: ['object'],
                                                        properties: {
                                                            start: {
                                                                type: ['string'],
                                                                example: '0600'
                                                            },
                                                            end: {
                                                                type: ['string'],
                                                                example: '0600'
                                                            }
                                                        },
                                                        additionalProperties: false
                                                    },
                                                    enter: {
                                                        type: ['object'],
                                                        properties: {
                                                            start: {
                                                                type: ['string'],
                                                                example: '0600'
                                                            },
                                                            end: {
                                                                type: ['string'],
                                                                example: '0600'
                                                            }
                                                        },
                                                        additionalProperties: false
                                                    },
                                                    max_stay: {
                                                        type: ['string']
                                                    }
                                                },
                                                additionalProperties: false
                                            }
                                        }
                                    },
                                    required: ['type', 'price', 'value'],
                                    additionalProperties: false
                                }
                            },
                            active_times: {
                                type: ['array'],
                                items: {
                                    type: ['object'],
                                    properties: {
                                        days: {
                                            type: ['array'],
                                            items: {
                                                type: ['string'],
                                                enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                            }
                                        },
                                        from: {
                                            type: ['string'],
                                            example: '0000'
                                        },
                                        to: {
                                            type: ['string'],
                                            example: '2400'
                                        }
                                    },
                                    required: ['days', 'from', 'to'],
                                    additionalProperties: false
                                }
                            }
                        },
                        required: ['eligibility'],
                        additionalProperties: false
                    }
                },
                availability: {
                    type: ['object', 'null'],
                    properties: {
                        quote_reference: {
                            type: ['string']
                        },
                        error: {
                            type: ['string']
                        }
                    },
                    additionalProperties: false
                },
                categories: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    }
                },
                phone: {
                    type: ['string']
                }
            },
            required: ['start_date', 'start_location', 'end_date', 'reservations', 'type', 'height', 'company', 'reviews', 'surface', 'capacity', 'features', 'times', 'rates'],
            additionalProperties: false
        }
    },
    required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
    additionalProperties: false
} as const;

export const $ShowsSearchRequestDto = {
    type: ['object'],
    properties: {
        language: {
            type: ['string'],
            minLength: 2,
            maxLength: 2,
            description: 'Content language.',
            example: 'en'
        },
        currency: {
            type: ['string'],
            minLength: 3,
            maxLength: 3,
            description: 'Currency code.',
            example: 'USD'
        },
        uom: {
            type: ['string'],
            enum: ['km', 'mi'],
            description: 'Unit of measure (km or mi).',
            example: 'km'
        },
        start_location: {
            type: ['string'],
            example: '42.3653985,-71.01078319999999'
        },
        start_date: {
            type: ['string'],
            example: '2024-05-21'
        },
        end_date: {
            type: ['string'],
            example: '2024-05-21'
        },
        sort: {
            type: ['string'],
            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
        },
        order: {
            type: ['string'],
            enum: ['asc', 'desc']
        },
        filters: {
            type: ['object'],
            properties: {
                keyword: {
                    type: ['string']
                }
            },
            additionalProperties: false
        },
        page: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        limit: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        poll: {
            default: true,
            type: ['boolean'],
            description: 'Poll for updates or return full data in one request.'
        },
        raw: {
            type: ['boolean'],
            description: 'Debug mode. Return raw data without normalization. Dev only.'
        }
    },
    required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date'],
    additionalProperties: false
} as const;

export const $ShowsSearchResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        filters: {
                            type: ['object'],
                            properties: {
                                keyword: {
                                    type: ['string']
                                }
                            },
                            additionalProperties: false
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['ticketnetwork'],
                        example: 'ticketnetwork'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['shows-events']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string'],
                        example: 'Wilbur Theatre - MA, Boston, MA, United States of America'
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string']
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean', 'null']
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            tags: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                },
                                example: ['JAZZ / BLUES', 'Concerts']
                            },
                            venue: {
                                type: ['string'],
                                example: 'Wilbur Theatre - MA'
                            },
                            capacity: {
                                type: ['number'],
                                example: 52
                            },
                            performers: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                },
                                example: ['Madeleine Peyroux (Headliner)']
                            }
                        },
                        required: ['date', 'tags', 'venue', 'capacity', 'performers'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                additionalProperties: false
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total'],
    additionalProperties: false
} as const;

export const $ShowsSearchPollRequestDto = {
    type: ['object'],
    properties: {},
    additionalProperties: false
} as const;

export const $ShowsSearchPollResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        filters: {
                            type: ['object'],
                            properties: {
                                keyword: {
                                    type: ['string']
                                }
                            },
                            additionalProperties: false
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['ticketnetwork'],
                        example: 'ticketnetwork'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['shows-events']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string'],
                        example: 'Wilbur Theatre - MA, Boston, MA, United States of America'
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string']
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean', 'null']
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            tags: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                },
                                example: ['JAZZ / BLUES', 'Concerts']
                            },
                            venue: {
                                type: ['string'],
                                example: 'Wilbur Theatre - MA'
                            },
                            capacity: {
                                type: ['number'],
                                example: 52
                            },
                            performers: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                },
                                example: ['Madeleine Peyroux (Headliner)']
                            }
                        },
                        required: ['date', 'tags', 'venue', 'capacity', 'performers'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                additionalProperties: false
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total'],
    additionalProperties: false
} as const;

export const $ShowsSuggestionsResponseDto = {
    type: ['object'],
    properties: {
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['ticketnetwork'],
                        example: 'ticketnetwork'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['shows-events']
                    },
                    name: {
                        type: ['string']
                    },
                    description: {
                        type: ['string']
                    },
                    address: {
                        type: ['string'],
                        example: 'Wilbur Theatre - MA, Boston, MA, United States of America'
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string']
                    },
                    free_cancellation: {
                        default: false,
                        type: ['boolean', 'null']
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            tags: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                },
                                example: ['JAZZ / BLUES', 'Concerts']
                            },
                            venue: {
                                type: ['string'],
                                example: 'Wilbur Theatre - MA'
                            },
                            capacity: {
                                type: ['number'],
                                example: 52
                            },
                            performers: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                },
                                example: ['Madeleine Peyroux (Headliner)']
                            }
                        },
                        required: ['date', 'tags', 'venue', 'capacity', 'performers'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                additionalProperties: false
            }
        }
    },
    required: ['results'],
    additionalProperties: false
} as const;

export const $ShowsDetailsResponseDto = {
    type: ['object'],
    properties: {
        id: {
            type: ['string'],
            format: 'uuid'
        },
        ids: {
            type: ['string']
        },
        supplier: {
            type: ['string'],
            enum: ['ticketnetwork'],
            example: 'ticketnetwork'
        },
        supplier_env: {
            type: ['string'],
            enum: ['sandbox', 'production']
        },
        index: {
            type: ['number'],
            example: 0
        },
        category: {
            type: ['string'],
            enum: ['shows-events']
        },
        name: {
            type: ['string']
        },
        description: {
            type: ['string']
        },
        address: {
            type: ['string'],
            example: 'Wilbur Theatre - MA, Boston, MA, United States of America'
        },
        latitude: {
            type: ['number']
        },
        longitude: {
            type: ['number']
        },
        distance: {
            type: ['number']
        },
        distance_uom: {
            type: ['string'],
            enum: ['km', 'mi']
        },
        images: {
            type: ['array'],
            items: {
                type: ['string']
            }
        },
        supplier_tax: {
            default: 0,
            type: ['number']
        },
        supplier_price: {
            default: 0,
            type: ['number']
        },
        supplier_currency: {
            default: 'USD',
            type: ['string'],
            minLength: 3,
            maxLength: 3
        },
        currency: {
            default: 'USD',
            type: ['string'],
            minLength: 3,
            maxLength: 3
        },
        tax: {
            default: 0,
            type: ['number']
        },
        price: {
            default: 0,
            type: ['number']
        },
        price_description: {
            type: ['string']
        },
        free_cancellation: {
            default: false,
            type: ['boolean', 'null']
        },
        rating: {
            default: 0,
            type: ['number']
        },
        reviews: {
            default: 0,
            type: ['number']
        },
        status: {
            type: ['string'],
            enum: ['Active', 'Pending', 'Expired'],
            example: 'Active'
        },
        attributes: {
            type: ['object'],
            properties: {
                date: {
                    type: ['string'],
                    example: '2024-05-07 14:00:00'
                },
                tags: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    },
                    example: ['JAZZ / BLUES', 'Concerts']
                },
                venue: {
                    type: ['string'],
                    example: 'Wilbur Theatre - MA'
                },
                capacity: {
                    type: ['number'],
                    example: 52
                },
                performers: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    },
                    example: ['Madeleine Peyroux (Headliner)']
                },
                sections: {
                    type: ['array'],
                    items: {
                        type: ['string']
                    }
                },
                map: {
                    type: ['string']
                }
            },
            required: ['date', 'tags', 'venue', 'capacity', 'performers', 'sections', 'map'],
            additionalProperties: false
        },
        tickets: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['number']
                    },
                    ids: {
                        type: ['number']
                    },
                    index: {
                        type: ['number']
                    },
                    section: {
                        type: ['string'],
                        example: 'Floor C'
                    },
                    row: {
                        type: ['string'],
                        example: '2'
                    },
                    seat_low: {
                        type: ['string'],
                        example: '5'
                    },
                    seat_high: {
                        type: ['string'],
                        example: '7'
                    },
                    description: {
                        type: ['string'],
                        example: 'Event Ticket'
                    },
                    delivery: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        },
                        example: ['Direct Transfer']
                    },
                    qty: {
                        type: ['number']
                    },
                    qtys: {
                        type: ['array'],
                        items: {
                            type: ['number']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string']
                    },
                    free_cancellation: {
                        type: ['boolean']
                    }
                },
                required: ['id', 'ids', 'index', 'section', 'row', 'seat_low', 'seat_high', 'description', 'delivery', 'qty', 'qtys', 'price_description', 'free_cancellation'],
                additionalProperties: false
            }
        }
    },
    required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes', 'tickets'],
    additionalProperties: false
} as const;

export const $TransportationSearchRequestDto = {
    type: ['object'],
    properties: {
        language: {
            type: ['string'],
            minLength: 2,
            maxLength: 2,
            description: 'Content language.',
            example: 'en'
        },
        currency: {
            type: ['string'],
            minLength: 3,
            maxLength: 3,
            description: 'Currency code.',
            example: 'USD'
        },
        uom: {
            type: ['string'],
            enum: ['km', 'mi'],
            description: 'Unit of measure (km or mi).',
            example: 'km'
        },
        start_location: {
            type: ['string'],
            example: '42.3653985,-71.01078319999999'
        },
        end_location: {
            type: ['string'],
            example: '42.3653985,-71.01078319999999'
        },
        start_date: {
            type: ['string'],
            example: '2024-05-21'
        },
        end_date: {
            type: ['string'],
            example: '2024-05-21'
        },
        sort: {
            type: ['string'],
            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
        },
        order: {
            type: ['string'],
            enum: ['asc', 'desc']
        },
        adults: {
            type: ['integer'],
            minimum: 1,
            maximum: 100
        },
        children: {
            type: ['integer'],
            minimum: 0,
            maximum: 100
        },
        direction: {
            type: ['string'],
            enum: ['OneWay', 'RoundTrip']
        },
        page: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        limit: {
            type: ['integer'],
            minimum: 0,
            maximum: 1000
        },
        poll: {
            default: true,
            type: ['boolean'],
            description: 'Poll for updates or return full data in one request.'
        },
        raw: {
            type: ['boolean'],
            description: 'Debug mode. Return raw data without normalization. Dev only.'
        }
    },
    required: ['language', 'currency', 'uom', 'start_location', 'end_location', 'start_date'],
    additionalProperties: false
} as const;

export const $TransportationSearchResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        end_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        adults: {
                            type: ['integer'],
                            minimum: 1,
                            maximum: 100
                        },
                        children: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 100
                        },
                        direction: {
                            type: ['string'],
                            enum: ['OneWay', 'RoundTrip']
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'end_location', 'start_date'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['mozio'],
                        example: 'mozio'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['transportation']
                    },
                    name: {
                        type: ['string'],
                        example: 'Cadillac XTS Sedan'
                    },
                    description: {
                        type: ['string'],
                        example: 'Business Class Lincoln, Cadillac or Similar'
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: '100% Refund 48h Notice'
                    },
                    free_cancellation: {
                        type: ['boolean'],
                        example: true
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            start_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            end_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            start_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            end_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            bags: {
                                type: ['integer'],
                                example: 3
                            },
                            type: {
                                type: ['string'],
                                example: 'Sedan'
                            },
                            class: {
                                type: ['string'],
                                example: 'Business'
                            },
                            adults: {
                                type: ['integer'],
                                example: 1
                            },
                            infants: {
                                type: ['integer'],
                                example: 0
                            },
                            children: {
                                type: ['integer'],
                                example: 0
                            },
                            direction: {
                                type: ['string'],
                                enum: ['OneWay', 'RoundTrip'],
                                example: 'OneWay'
                            },
                            passengers: {
                                type: ['integer'],
                                example: 3
                            },
                            company: {
                                type: ['string'],
                                example: 'ICS, Book A Limo'
                            },
                            company_logo: {
                                type: ['string'],
                                example: 'https://static.mozio.com/providers/logos/defaults/blackcar_logo.png'
                            },
                            amenities: {
                                type: ['array'],
                                items: {
                                    type: ['object'],
                                    properties: {
                                        id: {
                                            type: ['string']
                                        },
                                        name: {
                                            type: ['string']
                                        },
                                        price: {
                                            type: ['number']
                                        },
                                        images: {
                                            type: ['array'],
                                            items: {
                                                type: ['string']
                                            },
                                            example: ['https://static.mozio.com/amenities/meetgreet.png']
                                        },
                                        currency: {
                                            type: ['string'],
                                            minLength: 3,
                                            maxLength: 3
                                        },
                                        included: {
                                            type: ['boolean']
                                        },
                                        description: {
                                            type: ['string'],
                                            example: 'Your driver will be waiting for you with a sign and will escort you to your vehicle.'
                                        }
                                    },
                                    required: ['id', 'name', 'price', 'images', 'currency', 'included', 'description'],
                                    additionalProperties: false
                                }
                            }
                        },
                        required: ['start_date', 'end_date', 'start_location', 'end_location', 'bags', 'type', 'class', 'adults', 'infants', 'children', 'direction', 'passengers', 'company', 'amenities'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'free_cancellation', 'status', 'attributes'],
                additionalProperties: false
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total'],
    additionalProperties: false
} as const;

export const $TransportationSearchPollRequestDto = {
    type: ['object'],
    properties: {},
    additionalProperties: false
} as const;

export const $TransportationSearchPollResponseDto = {
    type: ['object'],
    properties: {
        search: {
            type: ['object'],
            properties: {
                id: {
                    type: ['string'],
                    format: 'uuid'
                },
                tenant_id: {
                    type: ['string']
                },
                user_id: {
                    type: ['string', 'null']
                },
                category_slug: {
                    type: ['string']
                },
                search_data: {
                    type: ['object'],
                    properties: {
                        language: {
                            type: ['string'],
                            minLength: 2,
                            maxLength: 2,
                            description: 'Content language.',
                            example: 'en'
                        },
                        currency: {
                            type: ['string'],
                            minLength: 3,
                            maxLength: 3,
                            description: 'Currency code.',
                            example: 'USD'
                        },
                        uom: {
                            type: ['string'],
                            enum: ['km', 'mi'],
                            description: 'Unit of measure (km or mi).',
                            example: 'km'
                        },
                        start_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        end_location: {
                            type: ['string'],
                            example: '42.3653985,-71.01078319999999'
                        },
                        start_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        end_date: {
                            type: ['string'],
                            example: '2024-05-21'
                        },
                        sort: {
                            type: ['string'],
                            enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                        },
                        order: {
                            type: ['string'],
                            enum: ['asc', 'desc']
                        },
                        adults: {
                            type: ['integer'],
                            minimum: 1,
                            maximum: 100
                        },
                        children: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 100
                        },
                        direction: {
                            type: ['string'],
                            enum: ['OneWay', 'RoundTrip']
                        },
                        page: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        limit: {
                            type: ['integer'],
                            minimum: 0,
                            maximum: 1000
                        },
                        poll: {
                            default: true,
                            type: ['boolean'],
                            description: 'Poll for updates or return full data in one request.'
                        },
                        raw: {
                            type: ['boolean'],
                            description: 'Debug mode. Return raw data without normalization. Dev only.'
                        }
                    },
                    required: ['language', 'currency', 'uom', 'start_location', 'end_location', 'start_date'],
                    additionalProperties: false
                },
                status: {
                    default: 'Pending',
                    type: ['string'],
                    enum: ['Pending', 'Complete']
                },
                stats: {
                    type: ['object', 'null'],
                    properties: {},
                    additionalProperties: true
                },
                created_at: {
                    type: ['string'],
                    format: 'date-time'
                },
                updated_at: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['id', 'tenant_id', 'category_slug', 'search_data', 'created_at', 'updated_at']
        },
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['mozio'],
                        example: 'mozio'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['transportation']
                    },
                    name: {
                        type: ['string'],
                        example: 'Cadillac XTS Sedan'
                    },
                    description: {
                        type: ['string'],
                        example: 'Business Class Lincoln, Cadillac or Similar'
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: '100% Refund 48h Notice'
                    },
                    free_cancellation: {
                        type: ['boolean'],
                        example: true
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            start_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            end_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            start_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            end_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            bags: {
                                type: ['integer'],
                                example: 3
                            },
                            type: {
                                type: ['string'],
                                example: 'Sedan'
                            },
                            class: {
                                type: ['string'],
                                example: 'Business'
                            },
                            adults: {
                                type: ['integer'],
                                example: 1
                            },
                            infants: {
                                type: ['integer'],
                                example: 0
                            },
                            children: {
                                type: ['integer'],
                                example: 0
                            },
                            direction: {
                                type: ['string'],
                                enum: ['OneWay', 'RoundTrip'],
                                example: 'OneWay'
                            },
                            passengers: {
                                type: ['integer'],
                                example: 3
                            },
                            company: {
                                type: ['string'],
                                example: 'ICS, Book A Limo'
                            },
                            company_logo: {
                                type: ['string'],
                                example: 'https://static.mozio.com/providers/logos/defaults/blackcar_logo.png'
                            },
                            amenities: {
                                type: ['array'],
                                items: {
                                    type: ['object'],
                                    properties: {
                                        id: {
                                            type: ['string']
                                        },
                                        name: {
                                            type: ['string']
                                        },
                                        price: {
                                            type: ['number']
                                        },
                                        images: {
                                            type: ['array'],
                                            items: {
                                                type: ['string']
                                            },
                                            example: ['https://static.mozio.com/amenities/meetgreet.png']
                                        },
                                        currency: {
                                            type: ['string'],
                                            minLength: 3,
                                            maxLength: 3
                                        },
                                        included: {
                                            type: ['boolean']
                                        },
                                        description: {
                                            type: ['string'],
                                            example: 'Your driver will be waiting for you with a sign and will escort you to your vehicle.'
                                        }
                                    },
                                    required: ['id', 'name', 'price', 'images', 'currency', 'included', 'description'],
                                    additionalProperties: false
                                }
                            }
                        },
                        required: ['start_date', 'end_date', 'start_location', 'end_location', 'bags', 'type', 'class', 'adults', 'infants', 'children', 'direction', 'passengers', 'company', 'amenities'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'free_cancellation', 'status', 'attributes'],
                additionalProperties: false
            }
        },
        page: {
            type: ['integer']
        },
        limit: {
            type: ['integer']
        },
        total: {
            type: ['integer']
        }
    },
    required: ['search', 'results', 'page', 'limit', 'total'],
    additionalProperties: false
} as const;

export const $TransportationSuggestionsResponseDto = {
    type: ['object'],
    properties: {
        results: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    ids: {
                        type: ['string']
                    },
                    supplier: {
                        type: ['string'],
                        enum: ['mozio'],
                        example: 'mozio'
                    },
                    supplier_env: {
                        type: ['string'],
                        enum: ['sandbox', 'production']
                    },
                    index: {
                        type: ['number'],
                        example: 0
                    },
                    category: {
                        type: ['string'],
                        enum: ['transportation']
                    },
                    name: {
                        type: ['string'],
                        example: 'Cadillac XTS Sedan'
                    },
                    description: {
                        type: ['string'],
                        example: 'Business Class Lincoln, Cadillac or Similar'
                    },
                    address: {
                        type: ['string']
                    },
                    latitude: {
                        type: ['number']
                    },
                    longitude: {
                        type: ['number']
                    },
                    distance: {
                        type: ['number']
                    },
                    distance_uom: {
                        type: ['string'],
                        enum: ['km', 'mi']
                    },
                    images: {
                        type: ['array'],
                        items: {
                            type: ['string']
                        }
                    },
                    supplier_tax: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_price: {
                        default: 0,
                        type: ['number']
                    },
                    supplier_currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    currency: {
                        default: 'USD',
                        type: ['string'],
                        minLength: 3,
                        maxLength: 3
                    },
                    tax: {
                        default: 0,
                        type: ['number']
                    },
                    price: {
                        default: 0,
                        type: ['number']
                    },
                    price_description: {
                        type: ['string'],
                        example: '100% Refund 48h Notice'
                    },
                    free_cancellation: {
                        type: ['boolean'],
                        example: true
                    },
                    rating: {
                        default: 0,
                        type: ['number']
                    },
                    reviews: {
                        default: 0,
                        type: ['number']
                    },
                    status: {
                        type: ['string'],
                        enum: ['Active', 'Pending', 'Expired'],
                        example: 'Active'
                    },
                    attributes: {
                        type: ['object'],
                        properties: {
                            start_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            end_date: {
                                type: ['string'],
                                example: '2024-05-07 14:00:00'
                            },
                            start_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            end_location: {
                                type: ['string'],
                                example: '42.365597,-71.00956'
                            },
                            bags: {
                                type: ['integer'],
                                example: 3
                            },
                            type: {
                                type: ['string'],
                                example: 'Sedan'
                            },
                            class: {
                                type: ['string'],
                                example: 'Business'
                            },
                            adults: {
                                type: ['integer'],
                                example: 1
                            },
                            infants: {
                                type: ['integer'],
                                example: 0
                            },
                            children: {
                                type: ['integer'],
                                example: 0
                            },
                            direction: {
                                type: ['string'],
                                enum: ['OneWay', 'RoundTrip'],
                                example: 'OneWay'
                            },
                            passengers: {
                                type: ['integer'],
                                example: 3
                            },
                            company: {
                                type: ['string'],
                                example: 'ICS, Book A Limo'
                            },
                            company_logo: {
                                type: ['string'],
                                example: 'https://static.mozio.com/providers/logos/defaults/blackcar_logo.png'
                            },
                            amenities: {
                                type: ['array'],
                                items: {
                                    type: ['object'],
                                    properties: {
                                        id: {
                                            type: ['string']
                                        },
                                        name: {
                                            type: ['string']
                                        },
                                        price: {
                                            type: ['number']
                                        },
                                        images: {
                                            type: ['array'],
                                            items: {
                                                type: ['string']
                                            },
                                            example: ['https://static.mozio.com/amenities/meetgreet.png']
                                        },
                                        currency: {
                                            type: ['string'],
                                            minLength: 3,
                                            maxLength: 3
                                        },
                                        included: {
                                            type: ['boolean']
                                        },
                                        description: {
                                            type: ['string'],
                                            example: 'Your driver will be waiting for you with a sign and will escort you to your vehicle.'
                                        }
                                    },
                                    required: ['id', 'name', 'price', 'images', 'currency', 'included', 'description'],
                                    additionalProperties: false
                                }
                            }
                        },
                        required: ['start_date', 'end_date', 'start_location', 'end_location', 'bags', 'type', 'class', 'adults', 'infants', 'children', 'direction', 'passengers', 'company', 'amenities'],
                        additionalProperties: false
                    }
                },
                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'free_cancellation', 'status', 'attributes'],
                additionalProperties: false
            }
        }
    },
    required: ['results'],
    additionalProperties: false
} as const;

export const $TransportationDetailsResponseDto = {
    type: ['object'],
    properties: {
        id: {
            type: ['string'],
            format: 'uuid'
        },
        ids: {
            type: ['string']
        },
        supplier: {
            type: ['string'],
            enum: ['mozio'],
            example: 'mozio'
        },
        supplier_env: {
            type: ['string'],
            enum: ['sandbox', 'production']
        },
        index: {
            type: ['number'],
            example: 0
        },
        category: {
            type: ['string'],
            enum: ['transportation']
        },
        name: {
            type: ['string'],
            example: 'Cadillac XTS Sedan'
        },
        description: {
            type: ['string'],
            example: 'Business Class Lincoln, Cadillac or Similar'
        },
        address: {
            type: ['string']
        },
        latitude: {
            type: ['number']
        },
        longitude: {
            type: ['number']
        },
        distance: {
            type: ['number']
        },
        distance_uom: {
            type: ['string'],
            enum: ['km', 'mi']
        },
        images: {
            type: ['array'],
            items: {
                type: ['string']
            }
        },
        supplier_tax: {
            default: 0,
            type: ['number']
        },
        supplier_price: {
            default: 0,
            type: ['number']
        },
        supplier_currency: {
            default: 'USD',
            type: ['string'],
            minLength: 3,
            maxLength: 3
        },
        currency: {
            default: 'USD',
            type: ['string'],
            minLength: 3,
            maxLength: 3
        },
        tax: {
            default: 0,
            type: ['number']
        },
        price: {
            default: 0,
            type: ['number']
        },
        price_description: {
            type: ['string'],
            example: '100% Refund 48h Notice'
        },
        free_cancellation: {
            type: ['boolean'],
            example: true
        },
        rating: {
            default: 0,
            type: ['number']
        },
        reviews: {
            default: 0,
            type: ['number']
        },
        status: {
            type: ['string'],
            enum: ['Active', 'Pending', 'Expired'],
            example: 'Active'
        },
        attributes: {
            type: ['object'],
            properties: {
                start_date: {
                    type: ['string'],
                    example: '2024-05-07 14:00:00'
                },
                end_date: {
                    type: ['string'],
                    example: '2024-05-07 14:00:00'
                },
                start_location: {
                    type: ['string'],
                    example: '42.365597,-71.00956'
                },
                end_location: {
                    type: ['string'],
                    example: '42.365597,-71.00956'
                },
                bags: {
                    type: ['integer'],
                    example: 3
                },
                type: {
                    type: ['string'],
                    example: 'Sedan'
                },
                class: {
                    type: ['string'],
                    example: 'Business'
                },
                adults: {
                    type: ['integer'],
                    example: 1
                },
                infants: {
                    type: ['integer'],
                    example: 0
                },
                children: {
                    type: ['integer'],
                    example: 0
                },
                direction: {
                    type: ['string'],
                    enum: ['OneWay', 'RoundTrip'],
                    example: 'OneWay'
                },
                passengers: {
                    type: ['integer'],
                    example: 3
                },
                company: {
                    type: ['string'],
                    example: 'ICS, Book A Limo'
                },
                company_logo: {
                    type: ['string'],
                    example: 'https://static.mozio.com/providers/logos/defaults/blackcar_logo.png'
                },
                amenities: {
                    type: ['array'],
                    items: {
                        type: ['object'],
                        properties: {
                            id: {
                                type: ['string']
                            },
                            name: {
                                type: ['string']
                            },
                            price: {
                                type: ['number']
                            },
                            images: {
                                type: ['array'],
                                items: {
                                    type: ['string']
                                },
                                example: ['https://static.mozio.com/amenities/meetgreet.png']
                            },
                            currency: {
                                type: ['string'],
                                minLength: 3,
                                maxLength: 3
                            },
                            included: {
                                type: ['boolean']
                            },
                            description: {
                                type: ['string'],
                                example: 'Your driver will be waiting for you with a sign and will escort you to your vehicle.'
                            }
                        },
                        required: ['id', 'name', 'price', 'images', 'currency', 'included', 'description'],
                        additionalProperties: false
                    }
                }
            },
            required: ['start_date', 'end_date', 'start_location', 'end_location', 'bags', 'type', 'class', 'adults', 'infants', 'children', 'direction', 'passengers', 'company', 'amenities'],
            additionalProperties: false
        }
    },
    required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'free_cancellation', 'status', 'attributes'],
    additionalProperties: false
} as const;

export const $UserResponseDto = {
    type: ['object'],
    properties: {
        id: {
            type: ['string'],
            format: 'uuid',
            description: 'User ID'
        },
        tenant_id: {
            type: ['string', 'null'],
            format: 'uuid',
            description: 'Tenant ID'
        },
        first_name: {
            type: ['string', 'null'],
            maxLength: 255,
            description: 'First name'
        },
        last_name: {
            type: ['string', 'null'],
            maxLength: 255,
            description: 'Last name'
        },
        email: {
            type: ['string'],
            format: 'email',
            maxLength: 255,
            description: 'Email address'
        },
        email_verified: {
            type: ['boolean', 'null'],
            description: 'Is email verified'
        },
        phone_number: {
            type: ['string'],
            maxLength: 255,
            description: 'Phone number'
        },
        phone_prefix: {
            type: ['string'],
            maxLength: 255,
            description: 'Phone prefix'
        },
        country: {
            type: ['string'],
            maxLength: 2,
            description: 'Country code'
        },
        language: {
            type: ['string'],
            maxLength: 2,
            description: 'Language code'
        },
        currency: {
            type: ['string'],
            maxLength: 3,
            description: 'Currency code'
        },
        created_at: {
            type: ['string'],
            description: 'Created at'
        },
        updated_at: {
            type: ['string'],
            description: 'Updated at'
        }
    },
    required: ['id', 'tenant_id', 'first_name', 'last_name', 'email', 'email_verified', 'phone_number', 'phone_prefix', 'country', 'language', 'currency', 'created_at', 'updated_at']
} as const;

export const $BadRequestExceptionDto = {
    type: ['object'],
    properties: {
        statusCode: {
            default: 401,
            type: ['integer']
        },
        message: {
            type: ['string']
        },
        error: {
            default: 'Bad request',
            type: ['string'],
            enum: ['Bad request']
        },
        errors: {
            type: ['array', 'null'],
            items: {
                type: ['string']
            }
        }
    },
    required: ['message', 'errors']
} as const;

export const $UnauthorizedExceptionDto = {
    type: ['object'],
    properties: {
        statusCode: {
            default: 401,
            type: ['integer']
        },
        message: {
            type: ['string']
        },
        error: {
            type: ['string'],
            enum: ['Unauthorized']
        }
    },
    required: ['message', 'error']
} as const;

export const $UserLoginRequestDto = {
    type: ['object'],
    properties: {
        email: {
            type: ['string'],
            format: 'email',
            description: 'Email address'
        },
        password: {
            type: ['string'],
            minLength: 6,
            description: 'Password'
        }
    },
    required: ['email', 'password']
} as const;

export const $UserLoginResponseDto = {
    type: ['object'],
    properties: {
        tokens: {
            type: ['object'],
            properties: {
                access: {
                    type: ['object'],
                    properties: {
                        token: {
                            type: ['string']
                        },
                        expires: {
                            type: ['string'],
                            format: 'date-time'
                        }
                    },
                    required: ['token', 'expires']
                },
                refresh: {
                    type: ['object'],
                    properties: {
                        token: {
                            type: ['string']
                        },
                        expires: {
                            type: ['string'],
                            format: 'date-time'
                        }
                    },
                    required: ['token', 'expires']
                }
            },
            required: ['access', 'refresh']
        }
    },
    required: ['tokens']
} as const;

export const $UserRefreshResponseDto = {
    type: ['object'],
    properties: {
        access: {
            type: ['object'],
            properties: {
                token: {
                    type: ['string']
                },
                expires: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['token', 'expires']
        },
        refresh: {
            type: ['object'],
            properties: {
                token: {
                    type: ['string']
                },
                expires: {
                    type: ['string'],
                    format: 'date-time'
                }
            },
            required: ['token', 'expires']
        }
    },
    required: ['access', 'refresh']
} as const;

export const $CartsFindOneResponseDto = {
    type: ['object'],
    properties: {
        id: {
            type: ['string'],
            format: 'uuid'
        },
        tenant_id: {
            type: ['string']
        },
        user_id: {
            type: ['string', 'null']
        },
        status: {
            default: 'Active',
            type: ['string'],
            enum: ['Active', 'Inactive']
        },
        total_tax: {
            default: 0,
            type: ['number']
        },
        total_amount: {
            default: 0,
            type: ['number']
        },
        total_currency: {
            default: 'USD',
            type: ['string'],
            maxLength: 3
        },
        first_name: {
            type: ['string', 'null']
        },
        last_name: {
            type: ['string', 'null']
        },
        phone_prefix: {
            type: ['string', 'null']
        },
        phone_number: {
            type: ['string', 'null']
        },
        email: {
            type: ['string', 'null'],
            format: 'email'
        },
        country: {
            type: ['string', 'null']
        },
        cart_items: {
            type: ['array'],
            items: {
                type: ['object'],
                properties: {
                    id: {
                        type: ['string'],
                        format: 'uuid'
                    },
                    tenant_id: {
                        type: ['string']
                    },
                    user_id: {
                        type: ['string', 'null']
                    },
                    cart_id: {
                        type: ['string']
                    },
                    category_slug: {
                        type: ['string']
                    },
                    supplier_slug: {
                        type: ['string']
                    },
                    status: {
                        default: 'Active',
                        type: ['string'],
                        enum: ['Active', 'Inactive']
                    },
                    qty: {
                        default: 1,
                        type: ['integer']
                    },
                    total_tax: {
                        default: 0,
                        type: ['number']
                    },
                    total_amount: {
                        default: 0,
                        type: ['number']
                    },
                    total_currency: {
                        default: 'USD',
                        type: ['string'],
                        maxLength: 3
                    },
                    search_data: {
                        oneOf: [
                            {
                                type: ['object'],
                                properties: {
                                    language: {
                                        type: ['string'],
                                        minLength: 2,
                                        maxLength: 2,
                                        description: 'Content language.',
                                        example: 'en'
                                    },
                                    currency: {
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3,
                                        description: 'Currency code.',
                                        example: 'USD'
                                    },
                                    uom: {
                                        type: ['string'],
                                        enum: ['km', 'mi'],
                                        description: 'Unit of measure (km or mi).',
                                        example: 'km'
                                    },
                                    start_location: {
                                        type: ['string'],
                                        example: '42.3653985,-71.01078319999999'
                                    },
                                    start_date: {
                                        type: ['string'],
                                        example: '2024-05-21'
                                    },
                                    end_date: {
                                        type: ['string'],
                                        example: '2024-05-22'
                                    },
                                    adults: {
                                        type: ['string'],
                                        example: '1'
                                    },
                                    children: {
                                        type: ['string']
                                    },
                                    filters: {
                                        type: ['object'],
                                        properties: {
                                            radius: {
                                                type: ['integer'],
                                                minimum: 0,
                                                maximum: 1000
                                            }
                                        },
                                        additionalProperties: false
                                    },
                                    sort: {
                                        type: ['string'],
                                        enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                                    },
                                    order: {
                                        type: ['string'],
                                        enum: ['asc', 'desc']
                                    },
                                    page: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    limit: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    poll: {
                                        default: true,
                                        type: ['boolean'],
                                        description: 'Poll for updates or return full data in one request.'
                                    },
                                    raw: {
                                        type: ['boolean'],
                                        description: 'Debug mode. Return raw data without normalization. Dev only.'
                                    }
                                },
                                required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date', 'adults'],
                                additionalProperties: false
                            },
                            {
                                type: ['object'],
                                properties: {
                                    language: {
                                        type: ['string'],
                                        minLength: 2,
                                        maxLength: 2,
                                        description: 'Content language.',
                                        example: 'en'
                                    },
                                    currency: {
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3,
                                        description: 'Currency code.',
                                        example: 'USD'
                                    },
                                    uom: {
                                        type: ['string'],
                                        enum: ['km', 'mi'],
                                        description: 'Unit of measure (km or mi).',
                                        example: 'km'
                                    },
                                    start_location: {
                                        type: ['string'],
                                        example: '42.3653985,-71.01078319999999'
                                    },
                                    end_location: {
                                        type: ['string'],
                                        example: '42.3653985,-71.01078319999999'
                                    },
                                    start_date: {
                                        type: ['string'],
                                        example: '2024-05-21'
                                    },
                                    end_date: {
                                        type: ['string'],
                                        example: '2024-05-22'
                                    },
                                    filters: {
                                        type: ['object'],
                                        properties: {
                                            radius: {
                                                type: ['integer'],
                                                minimum: 0
                                            }
                                        },
                                        additionalProperties: false
                                    },
                                    sort: {
                                        type: ['string'],
                                        enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                                    },
                                    order: {
                                        type: ['string'],
                                        enum: ['asc', 'desc']
                                    },
                                    page: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    limit: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    poll: {
                                        default: true,
                                        type: ['boolean'],
                                        description: 'Poll for updates or return full data in one request.'
                                    },
                                    raw: {
                                        type: ['boolean'],
                                        description: 'Debug mode. Return raw data without normalization. Dev only.'
                                    }
                                },
                                required: ['language', 'currency', 'uom', 'start_location', 'end_location', 'start_date', 'end_date'],
                                additionalProperties: false
                            },
                            {
                                type: ['object'],
                                properties: {
                                    language: {
                                        type: ['string'],
                                        minLength: 2,
                                        maxLength: 2,
                                        description: 'Content language.',
                                        example: 'en'
                                    },
                                    currency: {
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3,
                                        description: 'Currency code.',
                                        example: 'USD'
                                    },
                                    uom: {
                                        type: ['string'],
                                        enum: ['km', 'mi'],
                                        description: 'Unit of measure (km or mi).',
                                        example: 'km'
                                    },
                                    start_location: {
                                        type: ['string'],
                                        example: '42.3653985,-71.01078319999999'
                                    },
                                    end_location: {
                                        type: ['string'],
                                        example: '42.3653985,-71.01078319999999'
                                    },
                                    start_date: {
                                        type: ['string'],
                                        example: '2024-05-21'
                                    },
                                    end_date: {
                                        type: ['string'],
                                        example: '2024-05-22'
                                    },
                                    adults: {
                                        type: ['integer'],
                                        minimum: 1,
                                        maximum: 9,
                                        example: '1'
                                    },
                                    children: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 9
                                    },
                                    infants: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 9
                                    },
                                    infants_seated: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 9
                                    },
                                    direction: {
                                        type: ['string'],
                                        enum: ['OneWay', 'RoundTrip', 'MultiCity'],
                                        example: 'OneWay'
                                    },
                                    cabin: {
                                        type: ['string'],
                                        enum: ['PremiumFirst', 'First', 'PremiumBusiness', 'Business', 'PremiumEconomy', 'Economy']
                                    },
                                    seatmaps: {
                                        type: ['string'],
                                        enum: ['true', 'false']
                                    },
                                    sort: {
                                        type: ['string'],
                                        enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                                    },
                                    order: {
                                        type: ['string'],
                                        enum: ['asc', 'desc']
                                    },
                                    page: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    limit: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    poll: {
                                        default: true,
                                        type: ['boolean'],
                                        description: 'Poll for updates or return full data in one request.'
                                    },
                                    raw: {
                                        type: ['boolean'],
                                        description: 'Debug mode. Return raw data without normalization. Dev only.'
                                    }
                                },
                                required: ['language', 'currency', 'uom', 'start_location', 'end_location', 'start_date', 'direction'],
                                additionalProperties: false
                            },
                            {
                                type: ['object'],
                                properties: {
                                    language: {
                                        type: ['string'],
                                        minLength: 2,
                                        maxLength: 2,
                                        description: 'Content language.',
                                        example: 'en'
                                    },
                                    currency: {
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3,
                                        description: 'Currency code.',
                                        example: 'USD'
                                    },
                                    uom: {
                                        type: ['string'],
                                        enum: ['km', 'mi'],
                                        description: 'Unit of measure (km or mi).',
                                        example: 'km'
                                    },
                                    start_location: {
                                        type: ['string'],
                                        example: '42.3653985,-71.01078319999999'
                                    },
                                    start_date: {
                                        type: ['string'],
                                        example: '2024-05-21'
                                    },
                                    end_date: {
                                        type: ['string'],
                                        example: '2024-05-22'
                                    },
                                    adults: {
                                        type: ['integer'],
                                        minimum: 1,
                                        maximum: 9
                                    },
                                    children: {
                                        type: ['integer'],
                                        minimum: 1,
                                        maximum: 9
                                    },
                                    filters: {
                                        type: ['object'],
                                        properties: {
                                            radius: {
                                                type: ['integer'],
                                                minimum: 0,
                                                example: 100
                                            },
                                            start_price: {
                                                type: ['integer'],
                                                minimum: 0,
                                                example: 0
                                            },
                                            end_price: {
                                                type: ['integer'],
                                                minimum: 0,
                                                example: 1000
                                            }
                                        },
                                        additionalProperties: false
                                    },
                                    sort: {
                                        type: ['string'],
                                        enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                                    },
                                    order: {
                                        type: ['string'],
                                        enum: ['asc', 'desc']
                                    },
                                    page: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    limit: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    poll: {
                                        default: true,
                                        type: ['boolean'],
                                        description: 'Poll for updates or return full data in one request.'
                                    },
                                    raw: {
                                        type: ['boolean'],
                                        description: 'Debug mode. Return raw data without normalization. Dev only.'
                                    }
                                },
                                required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date'],
                                additionalProperties: false
                            },
                            {
                                type: ['object'],
                                properties: {
                                    language: {
                                        type: ['string'],
                                        minLength: 2,
                                        maxLength: 2,
                                        description: 'Content language.',
                                        example: 'en'
                                    },
                                    currency: {
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3,
                                        description: 'Currency code.',
                                        example: 'USD'
                                    },
                                    uom: {
                                        type: ['string'],
                                        enum: ['km', 'mi'],
                                        description: 'Unit of measure (km or mi).',
                                        example: 'km'
                                    },
                                    start_location: {
                                        type: ['string'],
                                        example: '42.3653985,-71.01078319999999'
                                    },
                                    start_date: {
                                        type: ['string'],
                                        example: '2024-05-21'
                                    },
                                    end_date: {
                                        type: ['string'],
                                        example: '2024-05-21'
                                    },
                                    sort: {
                                        type: ['string'],
                                        enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                                    },
                                    order: {
                                        type: ['string'],
                                        enum: ['asc', 'desc']
                                    },
                                    filters: {
                                        type: ['object'],
                                        properties: {
                                            keyword: {
                                                type: ['string']
                                            }
                                        },
                                        additionalProperties: false
                                    },
                                    page: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    limit: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    poll: {
                                        default: true,
                                        type: ['boolean'],
                                        description: 'Poll for updates or return full data in one request.'
                                    },
                                    raw: {
                                        type: ['boolean'],
                                        description: 'Debug mode. Return raw data without normalization. Dev only.'
                                    }
                                },
                                required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date'],
                                additionalProperties: false
                            },
                            {
                                type: ['object'],
                                properties: {
                                    language: {
                                        type: ['string'],
                                        minLength: 2,
                                        maxLength: 2,
                                        description: 'Content language.',
                                        example: 'en'
                                    },
                                    currency: {
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3,
                                        description: 'Currency code.',
                                        example: 'USD'
                                    },
                                    uom: {
                                        type: ['string'],
                                        enum: ['km', 'mi'],
                                        description: 'Unit of measure (km or mi).',
                                        example: 'km'
                                    },
                                    start_location: {
                                        type: ['string'],
                                        example: '42.3653985,-71.01078319999999'
                                    },
                                    start_date: {
                                        type: ['string'],
                                        example: '2024-05-21'
                                    },
                                    end_date: {
                                        type: ['string'],
                                        example: '2024-05-21'
                                    },
                                    sort: {
                                        type: ['string'],
                                        enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                                    },
                                    order: {
                                        type: ['string'],
                                        enum: ['asc', 'desc']
                                    },
                                    filters: {
                                        type: ['object'],
                                        properties: {
                                            radius: {
                                                type: ['integer'],
                                                minimum: 1,
                                                maximum: 1000
                                            }
                                        },
                                        additionalProperties: false
                                    },
                                    page: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    limit: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    poll: {
                                        default: true,
                                        type: ['boolean'],
                                        description: 'Poll for updates or return full data in one request.'
                                    },
                                    raw: {
                                        type: ['boolean'],
                                        description: 'Debug mode. Return raw data without normalization. Dev only.'
                                    }
                                },
                                required: ['language', 'currency', 'uom', 'start_location', 'start_date', 'end_date'],
                                additionalProperties: false
                            },
                            {
                                type: ['object'],
                                properties: {
                                    language: {
                                        type: ['string'],
                                        minLength: 2,
                                        maxLength: 2,
                                        description: 'Content language.',
                                        example: 'en'
                                    },
                                    currency: {
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3,
                                        description: 'Currency code.',
                                        example: 'USD'
                                    },
                                    uom: {
                                        type: ['string'],
                                        enum: ['km', 'mi'],
                                        description: 'Unit of measure (km or mi).',
                                        example: 'km'
                                    },
                                    start_location: {
                                        type: ['string'],
                                        example: '42.3653985,-71.01078319999999'
                                    },
                                    end_location: {
                                        type: ['string'],
                                        example: '42.3653985,-71.01078319999999'
                                    },
                                    start_date: {
                                        type: ['string'],
                                        example: '2024-05-21'
                                    },
                                    end_date: {
                                        type: ['string'],
                                        example: '2024-05-21'
                                    },
                                    sort: {
                                        type: ['string'],
                                        enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                                    },
                                    order: {
                                        type: ['string'],
                                        enum: ['asc', 'desc']
                                    },
                                    adults: {
                                        type: ['integer'],
                                        minimum: 1,
                                        maximum: 100
                                    },
                                    children: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 100
                                    },
                                    direction: {
                                        type: ['string'],
                                        enum: ['OneWay', 'RoundTrip']
                                    },
                                    page: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    limit: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    poll: {
                                        default: true,
                                        type: ['boolean'],
                                        description: 'Poll for updates or return full data in one request.'
                                    },
                                    raw: {
                                        type: ['boolean'],
                                        description: 'Debug mode. Return raw data without normalization. Dev only.'
                                    }
                                },
                                required: ['language', 'currency', 'uom', 'start_location', 'end_location', 'start_date'],
                                additionalProperties: false
                            },
                            {
                                type: ['object'],
                                properties: {
                                    language: {
                                        type: ['string'],
                                        minLength: 2,
                                        maxLength: 2,
                                        description: 'Content language.',
                                        example: 'en'
                                    },
                                    currency: {
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3,
                                        description: 'Currency code.',
                                        example: 'USD'
                                    },
                                    uom: {
                                        type: ['string'],
                                        enum: ['km', 'mi'],
                                        description: 'Unit of measure (km or mi).',
                                        example: 'km'
                                    },
                                    start_location: {
                                        type: ['string'],
                                        example: '42.3653985,-71.01078319999999'
                                    },
                                    start_date: {
                                        type: ['string'],
                                        example: '2024-05-21'
                                    },
                                    sort: {
                                        type: ['string'],
                                        enum: ['id', 'ids', 'supplier', 'name', 'distance', 'tax', 'price', 'free_cancellation']
                                    },
                                    order: {
                                        type: ['string'],
                                        enum: ['asc', 'desc']
                                    },
                                    adults: {
                                        type: ['integer'],
                                        minimum: 1,
                                        maximum: 100
                                    },
                                    filters: {
                                        type: ['object'],
                                        properties: {
                                            keyword: {
                                                type: ['string']
                                            },
                                            radius: {
                                                type: ['integer'],
                                                minimum: 1,
                                                maximum: 1000
                                            }
                                        },
                                        additionalProperties: false
                                    },
                                    page: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    limit: {
                                        type: ['integer'],
                                        minimum: 0,
                                        maximum: 1000
                                    },
                                    poll: {
                                        default: true,
                                        type: ['boolean'],
                                        description: 'Poll for updates or return full data in one request.'
                                    },
                                    raw: {
                                        type: ['boolean'],
                                        description: 'Debug mode. Return raw data without normalization. Dev only.'
                                    }
                                },
                                required: ['language', 'currency', 'uom', 'start_location', 'start_date'],
                                additionalProperties: false
                            }
                        ]
                    },
                    item_data_raw: {
                        type: ['object', 'null'],
                        properties: {}
                    },
                    item_data: {
                        oneOf: [
                            {
                                type: ['object'],
                                properties: {
                                    id: {
                                        type: ['string'],
                                        format: 'uuid'
                                    },
                                    static_id: {
                                        type: ['string', 'null']
                                    },
                                    ids: {
                                        type: ['string']
                                    },
                                    supplier: {
                                        type: ['string'],
                                        enum: ['expedia', 'hotelplanner', 'sabre'],
                                        example: 'expedia'
                                    },
                                    supplier_env: {
                                        type: ['string', 'null'],
                                        enum: ['sandbox', 'production']
                                    },
                                    category: {
                                        type: ['string'],
                                        enum: ['hotels']
                                    },
                                    name: {
                                        type: ['string', 'null']
                                    },
                                    description: {
                                        type: ['string', 'null']
                                    },
                                    address: {
                                        type: ['string', 'null']
                                    },
                                    latitude: {
                                        type: ['number', 'null']
                                    },
                                    longitude: {
                                        type: ['number', 'null']
                                    },
                                    distance: {
                                        type: ['number', 'null']
                                    },
                                    distance_uom: {
                                        type: ['string', 'null']
                                    },
                                    images: {
                                        type: ['array'],
                                        items: {
                                            type: ['string']
                                        }
                                    },
                                    currency: {
                                        default: 'USD',
                                        type: ['string', 'null'],
                                        minLength: 3,
                                        maxLength: 3
                                    },
                                    tax: {
                                        default: 0,
                                        type: ['number', 'null']
                                    },
                                    price: {
                                        default: 0,
                                        type: ['number', 'null']
                                    },
                                    pay_at_property: {
                                        default: 0,
                                        type: ['number', 'null']
                                    },
                                    cancel_policy: {
                                        type: ['array'],
                                        items: {
                                            type: ['object'],
                                            properties: {
                                                type: {
                                                    type: ['string'],
                                                    enum: ['FREE_CANCELLATION', 'NOT_REFUNDABLE', 'PARTIAL_REFUND']
                                                },
                                                start: {
                                                    type: ['string']
                                                },
                                                penalty_type: {
                                                    type: ['string', 'null'],
                                                    enum: ['PERCENT', 'PRICE', 'NIGHTS']
                                                },
                                                penalty_value: {
                                                    type: ['number', 'null']
                                                },
                                                penalty_currency: {
                                                    type: ['string', 'null'],
                                                    minLength: 3,
                                                    maxLength: 3
                                                }
                                            },
                                            required: ['type', 'start']
                                        }
                                    },
                                    fee_breakdown: {
                                        type: ['array'],
                                        items: {
                                            type: ['object'],
                                            properties: {
                                                category: {
                                                    type: ['string'],
                                                    enum: ['RESORT_FEE', 'DEPOSIT', 'PET_FEE', 'PARKING_FEE', 'CLEANING_FEE', 'BREAKFAST_FEE', 'EXTRA_BED_FEE', 'SERVICE_FEE', 'AIRPORT_SHUTTLE_FEE', 'INTERNET_FEE', 'FACILITIES_FEE', 'UTILITY_FEE', 'TAX', 'OTHER']
                                                },
                                                total_amount: {
                                                    type: ['number']
                                                },
                                                mandatory: {
                                                    type: ['boolean']
                                                }
                                            },
                                            required: ['category', 'total_amount', 'mandatory']
                                        }
                                    },
                                    price_description: {
                                        type: ['string', 'null']
                                    },
                                    free_cancellation: {
                                        default: false,
                                        type: ['boolean', 'null']
                                    },
                                    refund_amount: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    rating: {
                                        default: 0,
                                        type: ['number', 'null']
                                    },
                                    reviews: {
                                        default: 0,
                                        type: ['number', 'null']
                                    },
                                    status: {
                                        type: ['string'],
                                        enum: ['Active', 'Pending', 'Expired'],
                                        example: 'Active'
                                    },
                                    rooms: {
                                        type: ['array'],
                                        items: {
                                            type: ['object'],
                                            properties: {
                                                id: {
                                                    type: ['string', 'null']
                                                },
                                                ids: {
                                                    oneOf: [
                                                        {
                                                            type: ['string']
                                                        },
                                                        {
                                                            type: ['array'],
                                                            items: {
                                                                type: ['number']
                                                            }
                                                        }
                                                    ],
                                                    type: ['null']
                                                },
                                                index: {
                                                    type: ['string']
                                                },
                                                name: {
                                                    type: ['string', 'null']
                                                },
                                                description: {
                                                    type: ['string', 'null']
                                                },
                                                bed: {
                                                    type: ['string', 'null']
                                                },
                                                view: {
                                                    type: ['string', 'null']
                                                },
                                                images: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['string']
                                                    }
                                                },
                                                tax: {
                                                    default: 0,
                                                    type: ['number', 'null']
                                                },
                                                price: {
                                                    default: 0,
                                                    type: ['number', 'null']
                                                },
                                                pay_at_property: {
                                                    default: 0,
                                                    type: ['number', 'null']
                                                },
                                                cancel_policy: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['object'],
                                                        properties: {
                                                            type: {
                                                                type: ['string'],
                                                                enum: ['FREE_CANCELLATION', 'NOT_REFUNDABLE', 'PARTIAL_REFUND']
                                                            },
                                                            start: {
                                                                type: ['string']
                                                            },
                                                            penalty_type: {
                                                                type: ['string', 'null'],
                                                                enum: ['PERCENT', 'PRICE', 'NIGHTS']
                                                            },
                                                            penalty_value: {
                                                                type: ['number', 'null']
                                                            },
                                                            penalty_currency: {
                                                                type: ['string', 'null'],
                                                                minLength: 3,
                                                                maxLength: 3
                                                            }
                                                        },
                                                        required: ['type', 'start']
                                                    }
                                                },
                                                fee_breakdown: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['object'],
                                                        properties: {
                                                            category: {
                                                                type: ['string'],
                                                                enum: ['RESORT_FEE', 'DEPOSIT', 'PET_FEE', 'PARKING_FEE', 'CLEANING_FEE', 'BREAKFAST_FEE', 'EXTRA_BED_FEE', 'SERVICE_FEE', 'AIRPORT_SHUTTLE_FEE', 'INTERNET_FEE', 'FACILITIES_FEE', 'UTILITY_FEE', 'TAX', 'OTHER']
                                                            },
                                                            total_amount: {
                                                                type: ['number']
                                                            },
                                                            mandatory: {
                                                                type: ['boolean']
                                                            }
                                                        },
                                                        required: ['category', 'total_amount', 'mandatory']
                                                    }
                                                },
                                                currency: {
                                                    default: 'USD',
                                                    type: ['string', 'null'],
                                                    minLength: 3,
                                                    maxLength: 3
                                                },
                                                price_description: {
                                                    type: ['string', 'null']
                                                },
                                                free_cancellation: {
                                                    default: false,
                                                    type: ['boolean', 'null']
                                                },
                                                refund_amount: {
                                                    default: 0,
                                                    type: ['number']
                                                },
                                                rate_key: {
                                                    type: ['string', 'null']
                                                }
                                            },
                                            required: ['images']
                                        }
                                    },
                                    attributes: {
                                        type: ['object'],
                                        properties: {
                                            start_date: {
                                                type: ['string']
                                            },
                                            end_date: {
                                                type: ['string']
                                            },
                                            nights: {
                                                type: ['number']
                                            },
                                            checkin: {
                                                type: ['string']
                                            },
                                            checkout: {
                                                type: ['string']
                                            },
                                            stars: {
                                                type: ['number', 'null']
                                            },
                                            amenities: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                }
                                            },
                                            policies: {
                                                type: ['object'],
                                                additionalProperties: {
                                                    type: ['string']
                                                }
                                            },
                                            facilities: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                }
                                            },
                                            landmarks: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                }
                                            }
                                        },
                                        required: ['start_date', 'end_date', 'nights', 'amenities']
                                    }
                                },
                                required: ['id', 'supplier', 'category', 'images', 'status', 'rooms', 'attributes']
                            },
                            {
                                type: ['object'],
                                properties: {
                                    id: {
                                        type: ['string'],
                                        format: 'uuid'
                                    },
                                    static_id: {
                                        type: ['string', 'null']
                                    },
                                    ids: {
                                        type: ['string']
                                    },
                                    supplier: {
                                        type: ['string'],
                                        enum: ['sabre', 'cartrawler'],
                                        example: 'sabre'
                                    },
                                    supplier_env: {
                                        type: ['string'],
                                        enum: ['sandbox', 'production']
                                    },
                                    index: {
                                        type: ['number'],
                                        example: 0
                                    },
                                    category: {
                                        type: ['string'],
                                        enum: ['car-rental']
                                    },
                                    name: {
                                        type: ['string']
                                    },
                                    description: {
                                        type: ['string']
                                    },
                                    address: {
                                        type: ['string']
                                    },
                                    latitude: {
                                        type: ['number']
                                    },
                                    longitude: {
                                        type: ['number']
                                    },
                                    distance: {
                                        type: ['number']
                                    },
                                    distance_uom: {
                                        type: ['string'],
                                        enum: ['km', 'mi']
                                    },
                                    images: {
                                        type: ['array'],
                                        items: {
                                            type: ['string']
                                        }
                                    },
                                    supplier_tax: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    supplier_price: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    supplier_currency: {
                                        default: 'USD',
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3
                                    },
                                    currency: {
                                        default: 'USD',
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3
                                    },
                                    tax: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    price: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    pay_at_property: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    price_description: {
                                        type: ['string'],
                                        example: 'ExtraDay - 81.83 EUR, ExtraHour - 22.89 EUR'
                                    },
                                    free_cancellation: {
                                        default: false,
                                        type: ['boolean']
                                    },
                                    rating: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    reviews: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    status: {
                                        type: ['string'],
                                        enum: ['Active', 'Pending', 'Expired'],
                                        example: 'Active'
                                    },
                                    attributes: {
                                        type: ['object'],
                                        properties: {
                                            ac: {
                                                type: ['boolean'],
                                                example: true
                                            },
                                            fuel: {
                                                type: ['string'],
                                                example: 'Unspecified'
                                            },
                                            bags: {
                                                type: ['number'],
                                                example: 2
                                            },
                                            doors: {
                                                type: ['number'],
                                                example: 4
                                            },
                                            drive: {
                                                type: ['string'],
                                                example: 'Unspecified'
                                            },
                                            transmission: {
                                                type: ['string'],
                                                example: 'Automatic'
                                            },
                                            passengers: {
                                                type: ['number'],
                                                example: 4
                                            },
                                            company: {
                                                type: ['string'],
                                                example: 'HERTZ'
                                            },
                                            company_logo: {
                                                type: ['string', 'null'],
                                                example: 'http://vcmp-cars.cert.sabre.com/image/upload/f_auto,q_auto:best,t_vcmp_logo/v1667229697/car/l/ze/ZE.png'
                                            },
                                            start_date: {
                                                type: ['string'],
                                                example: '2024-05-07 14:00:00'
                                            },
                                            start_location: {
                                                type: ['string'],
                                                example: '42.365597,-71.00956'
                                            },
                                            start_location_name: {
                                                type: ['string'],
                                                example: 'BOSTON LOGAN INTL AIRPORT, 156 TOMAHAWK DRIVE, BOSTON LOGAN, MA, 02128, US'
                                            },
                                            end_date: {
                                                type: ['string'],
                                                example: '2024-05-13 14:00:00'
                                            },
                                            end_location_name: {
                                                type: ['string'],
                                                example: 'BOSTON LOGAN INTL AIRPORT, 156 TOMAHAWK DRIVE, BOSTON LOGAN, MA, 02128, US'
                                            },
                                            end_location: {
                                                type: ['string'],
                                                example: '42.365597,-71.00956'
                                            },
                                            landmarks: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                }
                                            }
                                        },
                                        required: ['passengers', 'company', 'start_date', 'start_location', 'start_location_name', 'end_date', 'end_location_name', 'end_location'],
                                        additionalProperties: false
                                    }
                                },
                                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                                additionalProperties: false
                            },
                            {
                                type: ['object'],
                                properties: {
                                    id: {
                                        type: ['string'],
                                        format: 'uuid'
                                    },
                                    static_id: {
                                        type: ['string', 'null']
                                    },
                                    ids: {
                                        type: ['string']
                                    },
                                    supplier: {
                                        type: ['string'],
                                        enum: ['amadeus', 'sabre'],
                                        example: 'amadeus'
                                    },
                                    supplier_env: {
                                        type: ['string', 'null'],
                                        enum: ['sandbox', 'production']
                                    },
                                    category: {
                                        type: ['string'],
                                        enum: ['flights']
                                    },
                                    index: {
                                        type: ['number'],
                                        example: 1
                                    },
                                    name: {
                                        type: ['string'],
                                        example: 'LAX - BOS'
                                    },
                                    supplier_tax: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    supplier_price: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    supplier_currency: {
                                        default: 'USD',
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3
                                    },
                                    currency: {
                                        default: 'USD',
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3
                                    },
                                    tax: {
                                        type: ['number']
                                    },
                                    price: {
                                        type: ['number']
                                    },
                                    pay_at_property: {
                                        type: ['number', 'null']
                                    },
                                    price_description: {
                                        type: ['string'],
                                        example: 'Economy'
                                    },
                                    free_cancellation: {
                                        type: ['boolean'],
                                        example: false
                                    },
                                    status: {
                                        type: ['string'],
                                        enum: ['Active', 'Pending', 'Expired'],
                                        example: 'Active'
                                    },
                                    flights: {
                                        type: ['array'],
                                        items: {
                                            type: ['object'],
                                            properties: {
                                                id: {
                                                    type: ['string'],
                                                    example: '87_88'
                                                },
                                                duration: {
                                                    type: ['integer', 'null'],
                                                    example: 675
                                                },
                                                segments: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['object'],
                                                        properties: {
                                                            id: {
                                                                type: ['string', 'null'],
                                                                example: '87'
                                                            },
                                                            duration: {
                                                                type: ['integer', 'null'],
                                                                example: 184
                                                            },
                                                            stops: {
                                                                default: 0,
                                                                type: ['integer'],
                                                                example: 0
                                                            },
                                                            aircraft: {
                                                                type: ['string'],
                                                                example: '32A'
                                                            },
                                                            aircraft_name: {
                                                                type: ['string'],
                                                                example: 'Airbus A320 (sharklets)'
                                                            },
                                                            airline: {
                                                                type: ['string'],
                                                                example: 'NK'
                                                            },
                                                            airline_name: {
                                                                type: ['string'],
                                                                example: 'Spirit Airlines'
                                                            },
                                                            airline_operating: {
                                                                type: ['string'],
                                                                example: 'NK'
                                                            },
                                                            airline_operating_name: {
                                                                type: ['string'],
                                                                example: 'Spirit Airlines'
                                                            },
                                                            flight_number: {
                                                                type: ['string'],
                                                                example: '471'
                                                            },
                                                            start_date: {
                                                                type: ['string'],
                                                                example: '2024-05-04 23:45:00'
                                                            },
                                                            start_location: {
                                                                type: ['string'],
                                                                minLength: 3,
                                                                maxLength: 3,
                                                                example: 'DFW'
                                                            },
                                                            start_location_name: {
                                                                type: ['string'],
                                                                example: 'Los Angeles International Airport'
                                                            },
                                                            start_location_terminal: {
                                                                type: ['string'],
                                                                example: 'E'
                                                            },
                                                            end_date: {
                                                                type: ['string'],
                                                                example: '2024-05-04 23:45:00'
                                                            },
                                                            end_location: {
                                                                type: ['string'],
                                                                minLength: 3,
                                                                maxLength: 3,
                                                                example: 'Dallas Fort Worth International Airport'
                                                            },
                                                            end_location_name: {
                                                                type: ['string'],
                                                                example: 'LAX'
                                                            },
                                                            end_location_terminal: {
                                                                type: ['string'],
                                                                example: '5'
                                                            }
                                                        },
                                                        required: ['id', 'aircraft', 'aircraft_name', 'airline', 'airline_name', 'airline_operating', 'airline_operating_name', 'flight_number', 'start_date', 'start_location', 'start_location_name', 'start_location_terminal', 'end_date', 'end_location', 'end_location_name', 'end_location_terminal'],
                                                        additionalProperties: false
                                                    }
                                                }
                                            },
                                            required: ['id', 'segments'],
                                            additionalProperties: false
                                        }
                                    },
                                    attributes: {
                                        type: ['object'],
                                        properties: {
                                            seatmaps: {
                                                type: ['array'],
                                                items: {}
                                            }
                                        },
                                        required: ['seatmaps'],
                                        additionalProperties: false
                                    }
                                },
                                required: ['id', 'supplier', 'category', 'index', 'name', 'tax', 'price', 'price_description', 'free_cancellation', 'status', 'flights', 'attributes'],
                                additionalProperties: false
                            },
                            {
                                type: ['object'],
                                properties: {
                                    id: {
                                        type: ['string'],
                                        format: 'uuid'
                                    },
                                    static_id: {
                                        type: ['string', 'null']
                                    },
                                    ids: {
                                        type: ['string']
                                    },
                                    supplier: {
                                        type: ['string'],
                                        enum: ['viator', 'tiqets', 'simplenight'],
                                        example: 'viator'
                                    },
                                    supplier_env: {
                                        type: ['string'],
                                        enum: ['sandbox', 'production']
                                    },
                                    index: {
                                        type: ['number'],
                                        example: 0
                                    },
                                    category: {
                                        type: ['string'],
                                        enum: ['things-to-do']
                                    },
                                    name: {
                                        type: ['string']
                                    },
                                    description: {
                                        type: ['string']
                                    },
                                    address: {
                                        type: ['string']
                                    },
                                    latitude: {
                                        type: ['number']
                                    },
                                    longitude: {
                                        type: ['number']
                                    },
                                    distance: {
                                        type: ['number']
                                    },
                                    distance_uom: {
                                        type: ['string'],
                                        enum: ['km', 'mi']
                                    },
                                    images: {
                                        type: ['array'],
                                        items: {
                                            type: ['string']
                                        }
                                    },
                                    currency: {
                                        default: 'USD',
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3
                                    },
                                    tax: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    price: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    pay_at_property: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    price_description: {
                                        type: ['string'],
                                        example: 'ExtraDay - 81.83 EUR, ExtraHour - 22.89 EUR'
                                    },
                                    free_cancellation: {
                                        default: false,
                                        type: ['boolean']
                                    },
                                    rating: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    reviews: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    variants: {
                                        type: ['array'],
                                        items: {
                                            type: ['object'],
                                            properties: {
                                                id: {
                                                    type: ['string']
                                                },
                                                ids: {
                                                    type: ['string', 'null']
                                                },
                                                name: {
                                                    type: ['string']
                                                },
                                                description: {
                                                    type: ['string']
                                                },
                                                images: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['string']
                                                    }
                                                },
                                                index: {
                                                    type: ['number']
                                                },
                                                tax: {
                                                    default: 0,
                                                    type: ['number']
                                                },
                                                price: {
                                                    default: 0,
                                                    type: ['number']
                                                },
                                                currency: {
                                                    type: ['string'],
                                                    minLength: 3,
                                                    maxLength: 3
                                                },
                                                cancel_policy: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['object'],
                                                        properties: {
                                                            type: {
                                                                type: ['string'],
                                                                enum: ['FREE_CANCELLATION', 'NOT_REFUNDABLE', 'PARTIAL_REFUND']
                                                            },
                                                            start: {
                                                                type: ['string']
                                                            },
                                                            penalty_type: {
                                                                type: ['string', 'null'],
                                                                enum: ['PERCENT', 'PRICE', 'NIGHTS']
                                                            },
                                                            penalty_value: {
                                                                type: ['number', 'null']
                                                            },
                                                            penalty_currency: {
                                                                type: ['string', 'null'],
                                                                minLength: 3,
                                                                maxLength: 3
                                                            }
                                                        },
                                                        required: ['type', 'start']
                                                    }
                                                },
                                                price_description: {
                                                    type: ['string']
                                                },
                                                free_cancellation: {
                                                    type: ['boolean']
                                                },
                                                attributes: {
                                                    type: ['object'],
                                                    properties: {
                                                        start_date: {
                                                            type: ['string']
                                                        },
                                                        start_time: {
                                                            type: ['string']
                                                        },
                                                        booking_questions: {
                                                            type: ['array'],
                                                            items: {
                                                                type: ['object'],
                                                                properties: {
                                                                    id: {
                                                                        type: ['string'],
                                                                        example: 'LANGUAGE_GUIDE'
                                                                    },
                                                                    legacyBookingQuestionId: {
                                                                        type: ['number']
                                                                    },
                                                                    group: {
                                                                        type: ['string'],
                                                                        enum: ['PER_BOOKING', 'PER_TRAVELER']
                                                                    },
                                                                    type: {
                                                                        type: ['string'],
                                                                        enum: ['STRING', 'NUMBER_AND_UNIT', 'DATE', 'TIME', 'LOCATION_REF_OR_FREE_TEXT']
                                                                    },
                                                                    required: {
                                                                        type: ['string'],
                                                                        enum: ['MANDATORY', 'OPTIONAL', 'CONDITIONAL']
                                                                    },
                                                                    label: {
                                                                        type: ['string'],
                                                                        example: 'Language Guide'
                                                                    },
                                                                    hint: {
                                                                        type: ['string']
                                                                    },
                                                                    maxLength: {
                                                                        type: ['number']
                                                                    },
                                                                    travelerNum: {
                                                                        type: ['number']
                                                                    },
                                                                    units: {
                                                                        type: ['array'],
                                                                        items: {
                                                                            type: ['string'],
                                                                            enum: ['LOCATION_REFERENCE', 'FREETEXT']
                                                                        }
                                                                    },
                                                                    allowedAnswers: {
                                                                        type: ['array'],
                                                                        items: {
                                                                            type: ['string']
                                                                        },
                                                                        example: ['en']
                                                                    }
                                                                },
                                                                required: ['id', 'group', 'type', 'required', 'label'],
                                                                additionalProperties: false
                                                            }
                                                        }
                                                    },
                                                    required: ['start_date']
                                                }
                                            },
                                            required: ['id', 'ids', 'name', 'description', 'images', 'index', 'currency', 'price_description', 'free_cancellation', 'attributes']
                                        }
                                    },
                                    status: {
                                        type: ['string'],
                                        enum: ['Active', 'Pending', 'Expired'],
                                        example: 'Active'
                                    },
                                    attributes: {
                                        type: ['object'],
                                        properties: {
                                            tags: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                }
                                            },
                                            adults: {
                                                type: ['number']
                                            },
                                            children: {
                                                type: ['number']
                                            },
                                            start_date: {
                                                type: ['string']
                                            },
                                            start_time: {
                                                type: ['string']
                                            },
                                            nights: {
                                                type: ['number']
                                            },
                                            company: {
                                                type: ['string']
                                            },
                                            start_location: {
                                                type: ['string']
                                            },
                                            pickup_description: {
                                                type: ['string']
                                            },
                                            pickup_locations: {
                                                type: ['array'],
                                                items: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['string']
                                                    }
                                                }
                                            },
                                            duration: {
                                                type: ['number']
                                            },
                                            includes: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                }
                                            },
                                            excludes: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                }
                                            },
                                            itinerary: {
                                                type: ['array'],
                                                items: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['string']
                                                    }
                                                }
                                            },
                                            policies: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                }
                                            },
                                            booking_questions: {
                                                type: ['array'],
                                                items: {}
                                            }
                                        },
                                        required: ['tags', 'adults', 'children', 'start_date', 'duration']
                                    }
                                },
                                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'variants', 'status', 'attributes']
                            },
                            {
                                type: ['object'],
                                properties: {
                                    id: {
                                        type: ['string'],
                                        format: 'uuid'
                                    },
                                    ids: {
                                        type: ['string']
                                    },
                                    supplier: {
                                        type: ['string'],
                                        enum: ['ticketnetwork'],
                                        example: 'ticketnetwork'
                                    },
                                    supplier_env: {
                                        type: ['string'],
                                        enum: ['sandbox', 'production']
                                    },
                                    index: {
                                        type: ['number'],
                                        example: 0
                                    },
                                    category: {
                                        type: ['string'],
                                        enum: ['shows-events']
                                    },
                                    name: {
                                        type: ['string']
                                    },
                                    description: {
                                        type: ['string']
                                    },
                                    address: {
                                        type: ['string'],
                                        example: 'Wilbur Theatre - MA, Boston, MA, United States of America'
                                    },
                                    latitude: {
                                        type: ['number']
                                    },
                                    longitude: {
                                        type: ['number']
                                    },
                                    distance: {
                                        type: ['number']
                                    },
                                    distance_uom: {
                                        type: ['string'],
                                        enum: ['km', 'mi']
                                    },
                                    images: {
                                        type: ['array'],
                                        items: {
                                            type: ['string']
                                        }
                                    },
                                    supplier_tax: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    supplier_price: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    supplier_currency: {
                                        default: 'USD',
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3
                                    },
                                    currency: {
                                        default: 'USD',
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3
                                    },
                                    tax: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    price: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    price_description: {
                                        type: ['string']
                                    },
                                    free_cancellation: {
                                        default: false,
                                        type: ['boolean', 'null']
                                    },
                                    rating: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    reviews: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    status: {
                                        type: ['string'],
                                        enum: ['Active', 'Pending', 'Expired'],
                                        example: 'Active'
                                    },
                                    attributes: {
                                        type: ['object'],
                                        properties: {
                                            date: {
                                                type: ['string'],
                                                example: '2024-05-07 14:00:00'
                                            },
                                            tags: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                },
                                                example: ['JAZZ / BLUES', 'Concerts']
                                            },
                                            venue: {
                                                type: ['string'],
                                                example: 'Wilbur Theatre - MA'
                                            },
                                            capacity: {
                                                type: ['number'],
                                                example: 52
                                            },
                                            performers: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                },
                                                example: ['Madeleine Peyroux (Headliner)']
                                            },
                                            sections: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                }
                                            },
                                            map: {
                                                type: ['string']
                                            }
                                        },
                                        required: ['date', 'tags', 'venue', 'capacity', 'performers', 'sections', 'map'],
                                        additionalProperties: false
                                    },
                                    tickets: {
                                        type: ['array'],
                                        items: {
                                            type: ['object'],
                                            properties: {
                                                id: {
                                                    type: ['number']
                                                },
                                                ids: {
                                                    type: ['number']
                                                },
                                                index: {
                                                    type: ['number']
                                                },
                                                section: {
                                                    type: ['string'],
                                                    example: 'Floor C'
                                                },
                                                row: {
                                                    type: ['string'],
                                                    example: '2'
                                                },
                                                seat_low: {
                                                    type: ['string'],
                                                    example: '5'
                                                },
                                                seat_high: {
                                                    type: ['string'],
                                                    example: '7'
                                                },
                                                description: {
                                                    type: ['string'],
                                                    example: 'Event Ticket'
                                                },
                                                delivery: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['string']
                                                    },
                                                    example: ['Direct Transfer']
                                                },
                                                qty: {
                                                    type: ['number']
                                                },
                                                qtys: {
                                                    type: ['array'],
                                                    items: {
                                                        type: ['number']
                                                    }
                                                },
                                                supplier_tax: {
                                                    default: 0,
                                                    type: ['number']
                                                },
                                                supplier_price: {
                                                    default: 0,
                                                    type: ['number']
                                                },
                                                supplier_currency: {
                                                    default: 'USD',
                                                    type: ['string'],
                                                    minLength: 3,
                                                    maxLength: 3
                                                },
                                                currency: {
                                                    default: 'USD',
                                                    type: ['string'],
                                                    minLength: 3,
                                                    maxLength: 3
                                                },
                                                tax: {
                                                    default: 0,
                                                    type: ['number']
                                                },
                                                price: {
                                                    default: 0,
                                                    type: ['number']
                                                },
                                                price_description: {
                                                    type: ['string']
                                                },
                                                free_cancellation: {
                                                    type: ['boolean']
                                                }
                                            },
                                            required: ['id', 'ids', 'index', 'section', 'row', 'seat_low', 'seat_high', 'description', 'delivery', 'qty', 'qtys', 'price_description', 'free_cancellation'],
                                            additionalProperties: false
                                        }
                                    }
                                },
                                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes', 'tickets'],
                                additionalProperties: false
                            },
                            {
                                type: ['object'],
                                properties: {
                                    id: {
                                        type: ['string'],
                                        format: 'uuid'
                                    },
                                    ids: {
                                        type: ['string']
                                    },
                                    supplier: {
                                        type: ['string'],
                                        enum: ['parkopedia'],
                                        example: 'parkopedia'
                                    },
                                    supplier_env: {
                                        type: ['string'],
                                        enum: ['sandbox', 'production']
                                    },
                                    index: {
                                        type: ['number'],
                                        example: 0
                                    },
                                    category: {
                                        type: ['string'],
                                        enum: ['parking']
                                    },
                                    name: {
                                        type: ['string']
                                    },
                                    description: {
                                        type: ['string']
                                    },
                                    address: {
                                        type: ['string']
                                    },
                                    latitude: {
                                        type: ['number']
                                    },
                                    longitude: {
                                        type: ['number']
                                    },
                                    distance: {
                                        type: ['number']
                                    },
                                    distance_uom: {
                                        type: ['string'],
                                        enum: ['km', 'mi']
                                    },
                                    images: {
                                        type: ['array'],
                                        items: {
                                            type: ['string']
                                        }
                                    },
                                    supplier_tax: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    supplier_price: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    supplier_currency: {
                                        default: 'USD',
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3
                                    },
                                    currency: {
                                        default: 'USD',
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3
                                    },
                                    tax: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    price: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    price_description: {
                                        type: ['string'],
                                        example: '$$$'
                                    },
                                    rating: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    reviews: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    status: {
                                        type: ['string'],
                                        enum: ['Active', 'Pending', 'Expired'],
                                        example: 'Active'
                                    },
                                    free_cancellation: {
                                        default: false,
                                        type: ['boolean', 'null']
                                    },
                                    attributes: {
                                        type: ['object'],
                                        properties: {
                                            start_date: {
                                                type: ['string'],
                                                example: '2024-05-07 14:00:00'
                                            },
                                            start_location: {
                                                type: ['string'],
                                                example: '42.365597,-71.00956'
                                            },
                                            end_date: {
                                                type: ['string'],
                                                example: '2024-05-07 14:00:00'
                                            },
                                            reservations: {
                                                type: ['boolean'],
                                                example: false
                                            },
                                            type: {
                                                type: ['string'],
                                                enum: ['ON_STREET', 'OFF_STREET'],
                                                example: 'ON_STREET'
                                            },
                                            height: {
                                                type: ['number'],
                                                example: 0
                                            },
                                            company: {
                                                type: ['string'],
                                                example: 'Boston Transportation Department'
                                            },
                                            reviews: {
                                                type: ['array'],
                                                items: {
                                                    type: ['object'],
                                                    properties: {
                                                        id: {
                                                            type: ['number']
                                                        },
                                                        ids: {
                                                            type: ['number']
                                                        },
                                                        date: {
                                                            type: ['string']
                                                        },
                                                        image: {
                                                            type: ['string']
                                                        },
                                                        name: {
                                                            type: ['string']
                                                        },
                                                        review: {
                                                            type: ['string']
                                                        },
                                                        rating: {
                                                            type: ['number']
                                                        }
                                                    },
                                                    additionalProperties: false
                                                }
                                            },
                                            surface: {
                                                type: ['string'],
                                                example: 'NOT_COVERED'
                                            },
                                            capacity: {
                                                type: ['number'],
                                                example: 3
                                            },
                                            features: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                },
                                                example: ['DISABLED_SPACES']
                                            },
                                            location_id: {
                                                type: ['string'],
                                                example: '1234'
                                            },
                                            times: {
                                                type: ['object'],
                                                properties: {
                                                    open: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['object'],
                                                            properties: {
                                                                days: {
                                                                    type: ['array'],
                                                                    items: {
                                                                        type: ['string'],
                                                                        enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                                    }
                                                                },
                                                                from: {
                                                                    type: ['string'],
                                                                    example: '0000'
                                                                },
                                                                to: {
                                                                    type: ['string'],
                                                                    example: '2400'
                                                                }
                                                            },
                                                            required: ['days', 'from', 'to'],
                                                            additionalProperties: false
                                                        }
                                                    },
                                                    restricted: {
                                                        type: ['array'],
                                                        items: {
                                                            type: ['object'],
                                                            properties: {
                                                                reason: {
                                                                    type: ['string'],
                                                                    example: 'BROOMING'
                                                                },
                                                                exceptions: {
                                                                    type: ['array'],
                                                                    items: {
                                                                        type: ['object'],
                                                                        properties: {
                                                                            type: {
                                                                                type: ['string'],
                                                                                example: 'LOADING'
                                                                            },
                                                                            max_stay: {
                                                                                type: ['string'],
                                                                                example: 'PT10M'
                                                                            }
                                                                        },
                                                                        additionalProperties: false
                                                                    }
                                                                },
                                                                active_times: {
                                                                    type: ['array'],
                                                                    items: {
                                                                        type: ['object'],
                                                                        properties: {
                                                                            days: {
                                                                                type: ['array'],
                                                                                items: {
                                                                                    type: ['string'],
                                                                                    enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                                                }
                                                                            },
                                                                            from: {
                                                                                type: ['string'],
                                                                                example: '0000'
                                                                            },
                                                                            to: {
                                                                                type: ['string'],
                                                                                example: '2400'
                                                                            }
                                                                        },
                                                                        required: ['days', 'from', 'to'],
                                                                        additionalProperties: false
                                                                    }
                                                                }
                                                            },
                                                            required: ['active_times'],
                                                            additionalProperties: false
                                                        }
                                                    }
                                                },
                                                required: ['open'],
                                                additionalProperties: false
                                            },
                                            rates: {
                                                type: ['array'],
                                                items: {
                                                    type: ['object'],
                                                    properties: {
                                                        eligibility: {
                                                            type: ['string'],
                                                            enum: ['DEFAULT', 'RESIDENTS', 'VALET', 'EVENT', 'VALIDATION', 'VISITORS', 'DURATION_ADDITIONAL'],
                                                            example: 'DEFAULT'
                                                        },
                                                        max_stay: {
                                                            type: ['string']
                                                        },
                                                        rates: {
                                                            type: ['array'],
                                                            items: {
                                                                type: ['object'],
                                                                properties: {
                                                                    type: {
                                                                        type: ['string'],
                                                                        enum: ['CUSTOM', 'DURATION', 'DURATION_ADDITIONAL'],
                                                                        example: 'CUSTOM'
                                                                    },
                                                                    price: {
                                                                        type: ['number'],
                                                                        example: 0
                                                                    },
                                                                    value: {
                                                                        type: ['string'],
                                                                        example: 'FLAT_RATE'
                                                                    },
                                                                    conditions: {
                                                                        type: ['array'],
                                                                        items: {
                                                                            type: ['object'],
                                                                            properties: {
                                                                                days: {
                                                                                    type: ['array'],
                                                                                    items: {
                                                                                        type: ['string'],
                                                                                        enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                                                    }
                                                                                },
                                                                                exit: {
                                                                                    type: ['object'],
                                                                                    properties: {
                                                                                        start: {
                                                                                            type: ['string'],
                                                                                            example: '0600'
                                                                                        },
                                                                                        end: {
                                                                                            type: ['string'],
                                                                                            example: '0600'
                                                                                        }
                                                                                    },
                                                                                    additionalProperties: false
                                                                                },
                                                                                enter: {
                                                                                    type: ['object'],
                                                                                    properties: {
                                                                                        start: {
                                                                                            type: ['string'],
                                                                                            example: '0600'
                                                                                        },
                                                                                        end: {
                                                                                            type: ['string'],
                                                                                            example: '0600'
                                                                                        }
                                                                                    },
                                                                                    additionalProperties: false
                                                                                },
                                                                                max_stay: {
                                                                                    type: ['string']
                                                                                }
                                                                            },
                                                                            additionalProperties: false
                                                                        }
                                                                    }
                                                                },
                                                                required: ['type', 'price', 'value'],
                                                                additionalProperties: false
                                                            }
                                                        },
                                                        active_times: {
                                                            type: ['array'],
                                                            items: {
                                                                type: ['object'],
                                                                properties: {
                                                                    days: {
                                                                        type: ['array'],
                                                                        items: {
                                                                            type: ['string'],
                                                                            enum: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
                                                                        }
                                                                    },
                                                                    from: {
                                                                        type: ['string'],
                                                                        example: '0000'
                                                                    },
                                                                    to: {
                                                                        type: ['string'],
                                                                        example: '2400'
                                                                    }
                                                                },
                                                                required: ['days', 'from', 'to'],
                                                                additionalProperties: false
                                                            }
                                                        }
                                                    },
                                                    required: ['eligibility'],
                                                    additionalProperties: false
                                                }
                                            },
                                            availability: {
                                                type: ['object', 'null'],
                                                properties: {
                                                    quote_reference: {
                                                        type: ['string']
                                                    },
                                                    error: {
                                                        type: ['string']
                                                    }
                                                },
                                                additionalProperties: false
                                            },
                                            categories: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                }
                                            },
                                            phone: {
                                                type: ['string']
                                            }
                                        },
                                        required: ['start_date', 'start_location', 'end_date', 'reservations', 'type', 'height', 'company', 'reviews', 'surface', 'capacity', 'features', 'times', 'rates'],
                                        additionalProperties: false
                                    }
                                },
                                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                                additionalProperties: false
                            },
                            {
                                type: ['object'],
                                properties: {
                                    id: {
                                        type: ['string'],
                                        format: 'uuid'
                                    },
                                    ids: {
                                        type: ['string']
                                    },
                                    supplier: {
                                        type: ['string'],
                                        enum: ['mozio'],
                                        example: 'mozio'
                                    },
                                    supplier_env: {
                                        type: ['string'],
                                        enum: ['sandbox', 'production']
                                    },
                                    index: {
                                        type: ['number'],
                                        example: 0
                                    },
                                    category: {
                                        type: ['string'],
                                        enum: ['transportation']
                                    },
                                    name: {
                                        type: ['string'],
                                        example: 'Cadillac XTS Sedan'
                                    },
                                    description: {
                                        type: ['string'],
                                        example: 'Business Class Lincoln, Cadillac or Similar'
                                    },
                                    address: {
                                        type: ['string']
                                    },
                                    latitude: {
                                        type: ['number']
                                    },
                                    longitude: {
                                        type: ['number']
                                    },
                                    distance: {
                                        type: ['number']
                                    },
                                    distance_uom: {
                                        type: ['string'],
                                        enum: ['km', 'mi']
                                    },
                                    images: {
                                        type: ['array'],
                                        items: {
                                            type: ['string']
                                        }
                                    },
                                    supplier_tax: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    supplier_price: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    supplier_currency: {
                                        default: 'USD',
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3
                                    },
                                    currency: {
                                        default: 'USD',
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3
                                    },
                                    tax: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    price: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    price_description: {
                                        type: ['string'],
                                        example: '100% Refund 48h Notice'
                                    },
                                    free_cancellation: {
                                        type: ['boolean'],
                                        example: true
                                    },
                                    rating: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    reviews: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    status: {
                                        type: ['string'],
                                        enum: ['Active', 'Pending', 'Expired'],
                                        example: 'Active'
                                    },
                                    attributes: {
                                        type: ['object'],
                                        properties: {
                                            start_date: {
                                                type: ['string'],
                                                example: '2024-05-07 14:00:00'
                                            },
                                            end_date: {
                                                type: ['string'],
                                                example: '2024-05-07 14:00:00'
                                            },
                                            start_location: {
                                                type: ['string'],
                                                example: '42.365597,-71.00956'
                                            },
                                            end_location: {
                                                type: ['string'],
                                                example: '42.365597,-71.00956'
                                            },
                                            bags: {
                                                type: ['integer'],
                                                example: 3
                                            },
                                            type: {
                                                type: ['string'],
                                                example: 'Sedan'
                                            },
                                            class: {
                                                type: ['string'],
                                                example: 'Business'
                                            },
                                            adults: {
                                                type: ['integer'],
                                                example: 1
                                            },
                                            infants: {
                                                type: ['integer'],
                                                example: 0
                                            },
                                            children: {
                                                type: ['integer'],
                                                example: 0
                                            },
                                            direction: {
                                                type: ['string'],
                                                enum: ['OneWay', 'RoundTrip'],
                                                example: 'OneWay'
                                            },
                                            passengers: {
                                                type: ['integer'],
                                                example: 3
                                            },
                                            company: {
                                                type: ['string'],
                                                example: 'ICS, Book A Limo'
                                            },
                                            company_logo: {
                                                type: ['string'],
                                                example: 'https://static.mozio.com/providers/logos/defaults/blackcar_logo.png'
                                            },
                                            amenities: {
                                                type: ['array'],
                                                items: {
                                                    type: ['object'],
                                                    properties: {
                                                        id: {
                                                            type: ['string']
                                                        },
                                                        name: {
                                                            type: ['string']
                                                        },
                                                        price: {
                                                            type: ['number']
                                                        },
                                                        images: {
                                                            type: ['array'],
                                                            items: {
                                                                type: ['string']
                                                            },
                                                            example: ['https://static.mozio.com/amenities/meetgreet.png']
                                                        },
                                                        currency: {
                                                            type: ['string'],
                                                            minLength: 3,
                                                            maxLength: 3
                                                        },
                                                        included: {
                                                            type: ['boolean']
                                                        },
                                                        description: {
                                                            type: ['string'],
                                                            example: 'Your driver will be waiting for you with a sign and will escort you to your vehicle.'
                                                        }
                                                    },
                                                    required: ['id', 'name', 'price', 'images', 'currency', 'included', 'description'],
                                                    additionalProperties: false
                                                }
                                            }
                                        },
                                        required: ['start_date', 'end_date', 'start_location', 'end_location', 'bags', 'type', 'class', 'adults', 'infants', 'children', 'direction', 'passengers', 'company', 'amenities'],
                                        additionalProperties: false
                                    }
                                },
                                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'free_cancellation', 'status', 'attributes'],
                                additionalProperties: false
                            },
                            {
                                type: ['object'],
                                properties: {
                                    id: {
                                        type: ['string'],
                                        format: 'uuid'
                                    },
                                    ids: {
                                        type: ['string']
                                    },
                                    supplier: {
                                        type: ['string'],
                                        enum: ['yelp', 'opentable'],
                                        example: 'yelp'
                                    },
                                    supplier_env: {
                                        type: ['string'],
                                        enum: ['sandbox', 'production']
                                    },
                                    index: {
                                        type: ['number'],
                                        example: 0
                                    },
                                    category: {
                                        type: ['string'],
                                        enum: ['dining']
                                    },
                                    name: {
                                        type: ['string']
                                    },
                                    description: {
                                        type: ['string']
                                    },
                                    address: {
                                        type: ['string']
                                    },
                                    latitude: {
                                        type: ['number']
                                    },
                                    longitude: {
                                        type: ['number']
                                    },
                                    distance: {
                                        type: ['number']
                                    },
                                    distance_uom: {
                                        type: ['string'],
                                        enum: ['km', 'mi']
                                    },
                                    images: {
                                        type: ['array'],
                                        items: {
                                            type: ['string']
                                        }
                                    },
                                    supplier_tax: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    supplier_price: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    supplier_currency: {
                                        default: 'USD',
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3
                                    },
                                    currency: {
                                        default: 'USD',
                                        type: ['string'],
                                        minLength: 3,
                                        maxLength: 3
                                    },
                                    tax: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    price: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    price_description: {
                                        type: ['string'],
                                        example: '$$$'
                                    },
                                    rating: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    reviews: {
                                        default: 0,
                                        type: ['number']
                                    },
                                    status: {
                                        type: ['string'],
                                        enum: ['Active', 'Pending', 'Expired'],
                                        example: 'Active'
                                    },
                                    attributes: {
                                        type: ['object'],
                                        properties: {
                                            phone: {
                                                type: ['string'],
                                                example: '+16468337811'
                                            },
                                            adults: {
                                                type: ['number'],
                                                example: 1
                                            },
                                            children: {
                                                type: ['number'],
                                                example: 0
                                            },
                                            categories: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                },
                                                example: ['New American', 'Asian Fusion']
                                            },
                                            start_date: {
                                                type: ['string'],
                                                example: '2024-05-07 14:00:00'
                                            },
                                            start_location: {
                                                type: ['string'],
                                                example: '42.365597,-71.00956'
                                            },
                                            reservations: {
                                                type: ['boolean'],
                                                example: false
                                            },
                                            reviews: {
                                                type: ['array'],
                                                items: {
                                                    type: ['object'],
                                                    properties: {
                                                        id: {
                                                            type: ['number'],
                                                            example: 1
                                                        },
                                                        ids: {
                                                            type: ['string'],
                                                            example: 'FVGEXlAWg-vnKXZwJcZUVg'
                                                        },
                                                        name: {
                                                            type: ['string'],
                                                            example: 'Dontlistentome H.'
                                                        },
                                                        image: {
                                                            type: ['string'],
                                                            example: 'https://s3-media1.fl.yelpcdn.com/photo/9u9-SvJ33YajfWw2y8HgQQ/o.jpg'
                                                        },
                                                        rating: {
                                                            type: ['number'],
                                                            example: 8.4
                                                        },
                                                        review: {
                                                            type: ['string'],
                                                            example: `Great Ambiance (obviously)
-Service was excellent Jae was our server and she was very helpful and very attentive.
-Food was excellent, me and my wife got...`
                                                        },
                                                        date: {
                                                            type: ['string'],
                                                            example: '2024-03-26 20:01:26'
                                                        }
                                                    },
                                                    required: ['id', 'ids', 'name', 'rating', 'review', 'date'],
                                                    additionalProperties: false
                                                }
                                            },
                                            hours: {
                                                type: ['array'],
                                                items: {
                                                    type: ['object', 'null'],
                                                    properties: {
                                                        start: {
                                                            type: ['string'],
                                                            example: '1000'
                                                        },
                                                        end: {
                                                            type: ['string'],
                                                            example: '0100'
                                                        },
                                                        day: {
                                                            type: ['number'],
                                                            example: 0
                                                        },
                                                        start2: {
                                                            type: ['string'],
                                                            example: '1000'
                                                        },
                                                        end2: {
                                                            type: ['string'],
                                                            example: '0100'
                                                        }
                                                    },
                                                    required: ['start', 'end', 'day'],
                                                    additionalProperties: false
                                                }
                                            },
                                            availabilities: {
                                                type: ['array'],
                                                items: {
                                                    type: ['string']
                                                }
                                            }
                                        },
                                        required: ['phone', 'adults', 'children', 'categories', 'start_date', 'start_location', 'reservations', 'reviews', 'hours', 'availabilities'],
                                        additionalProperties: false
                                    }
                                },
                                required: ['id', 'supplier', 'supplier_env', 'index', 'category', 'name', 'description', 'address', 'latitude', 'longitude', 'distance', 'distance_uom', 'images', 'price_description', 'status', 'attributes'],
                                additionalProperties: false
                            }
                        ]
                    },
                    booking_data: {},
                    created_at: {
                        type: ['string'],
                        format: 'date-time',
                        example: '2024-05-03T11:15:22.833Z'
                    },
                    updated_at: {
                        type: ['string'],
                        format: 'date-time',
                        example: '2024-05-03T11:15:22.833Z'
                    }
                },
                required: ['id', 'tenant_id', 'cart_id', 'category_slug', 'supplier_slug', 'search_data', 'item_data', 'created_at', 'updated_at']
            }
        },
        session_id: {
            type: ['string', 'null']
        },
        created_at: {
            type: ['string'],
            format: 'date-time',
            example: '2024-05-03T11:15:22.833Z'
        },
        updated_at: {
            type: ['string'],
            format: 'date-time',
            example: '2024-05-03T11:15:22.833Z'
        }
    },
    required: ['id', 'tenant_id', 'user_id', 'cart_items', 'created_at', 'updated_at']
} as const;