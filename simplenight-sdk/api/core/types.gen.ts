// This file is auto-generated by @hey-api/openapi-ts

export type ConfigWebFindOneResponseDto = {
    tenant: {
        id: string;
        company_id: string;
        name: string;
        slug: string;
        /**
         * Hostname
         */
        url: string;
        login?: 'Public' | 'Restricted';
        register?: 'Public' | 'Restricted';
        allow_booking_on_supplier: boolean;
    };
    api_key: {
        id: string;
        tenant_id: string;
        name: string;
        scope: 'Web' | 'Mobile';
        text_key: string;
        usage_limit: number;
    };
    categories: Array<{
        id: string;
        tenant_id: string | null;
        name: string;
        slug: string;
        icon: string;
        status: 'Active' | 'Inactive';
        sort: number;
        product_attributes: Array<unknown>;
        variant_attributes: Array<unknown>;
    }>;
    config_web: {
        id: string;
        tenant_id: string;
        name: string;
        slogan: string;
        phone_prefix: string;
        phone_number: string;
        email: string;
        social: {
            twitter?: string;
            facebook?: string;
            linkedin?: string;
        };
        logo: string | null;
        icon: string | null;
        colors: {
            body: string;
            gray: string;
            info: string;
            black: string;
            white: string;
            danger: string;
            bg_body: string;
            primary: string;
            success: string;
            warning: string;
            bg_footer: string;
            bg_header: string;
            secondary: string;
        };
        images: {
            home_hero: string;
        };
        language: string;
        languages: string;
        currency: string;
        currencies: string;
        country: string;
        distance: string;
        terms: string;
        privacy: string;
        recaptcha_site_key: string | null;
    };
};

export type login = 'Public' | 'Restricted';

export type register = 'Public' | 'Restricted';

export type scope = 'Web' | 'Mobile';

export type ZodValidationErrorDto = {
    statusCode?: number;
    message: string;
    error: 'InputValidationError' | 'OutputValidationError';
    errors: Array<{
        code: string;
        expected: string;
        received: string;
        receivedValue: string;
        path: Array<(string)>;
        message: string;
    }>;
};

export type error = 'InputValidationError' | 'OutputValidationError';

export type ConfigMobileFindOneResponseDto = {
    tenant: {
        id: string;
        company_id: string;
        name: string;
        slug: string;
        /**
         * Hostname
         */
        url: string;
        login?: 'Public' | 'Restricted';
        register?: 'Public' | 'Restricted';
        allow_booking_on_supplier: boolean;
    };
    api_key: {
        id: string;
        tenant_id: string;
        name: string;
        scope: 'Web' | 'Mobile';
        text_key: string;
        usage_limit: number;
    };
    categories: Array<{
        id: string;
        tenant_id: string | null;
        name: string;
        slug: string;
        icon: string;
        status: 'Active' | 'Inactive';
        sort: number;
        product_attributes: Array<unknown>;
        variant_attributes: Array<unknown>;
    }>;
    config_mobile: {
        id: string;
        tenant_id: string;
        name?: string;
        slogan?: string;
        phone_prefix?: string;
        phone_number?: string;
        email?: string;
        social: {
            twitter?: string;
            facebook?: string;
            linkedin?: string;
        };
        logo?: string | null;
        icon?: string | null;
        colors: {
            body?: string;
            gray?: string;
            info?: string;
            black?: string;
            white?: string;
            danger?: string;
            bg_body?: string;
            primary?: string;
            success?: string;
            warning?: string;
            bg_footer?: string;
            bg_header?: string;
            secondary?: string;
        };
        images: {
            home_hero?: string;
        };
        language?: string;
        languages?: string;
        currency?: string;
        currencies?: string;
        country?: string;
        distance?: string;
        terms?: string;
        privacy?: string;
    };
};

export type HotelsSearchRequestDto = {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    start_date: string;
    end_date: string;
    adults: string;
    children?: string;
    filters?: {
        radius?: number;
    };
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
};

/**
 * Unit of measure (km or mi).
 */
export type uom = 'km' | 'mi';

export type sort = 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';

export type order = 'asc' | 'desc';

export type HotelsSearchResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            start_date: string;
            end_date: string;
            adults: string;
            children?: string;
            filters?: {
                radius?: number;
            };
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        static_id?: string | null;
        ids?: string;
        supplier: 'expedia' | 'hotelplanner' | 'sabre';
        supplier_env?: 'sandbox' | 'production' | null;
        category: 'hotels';
        name?: string | null;
        description?: string | null;
        address?: string | null;
        latitude?: number | null;
        longitude?: number | null;
        distance?: number | null;
        distance_uom?: string | null;
        images: Array<(string)>;
        currency?: string | null;
        tax?: number | null;
        price?: number | null;
        pay_at_property?: number | null;
        cancel_policy?: Array<{
            type: 'FREE_CANCELLATION' | 'NOT_REFUNDABLE' | 'PARTIAL_REFUND';
            start: string;
            penalty_type?: 'PERCENT' | 'PRICE' | 'NIGHTS' | null;
            penalty_value?: number | null;
            penalty_currency?: string | null;
        }>;
        fee_breakdown?: Array<{
            category: 'RESORT_FEE' | 'DEPOSIT' | 'PET_FEE' | 'PARKING_FEE' | 'CLEANING_FEE' | 'BREAKFAST_FEE' | 'EXTRA_BED_FEE' | 'SERVICE_FEE' | 'AIRPORT_SHUTTLE_FEE' | 'INTERNET_FEE' | 'FACILITIES_FEE' | 'UTILITY_FEE' | 'TAX' | 'OTHER';
            total_amount: number;
            mandatory: boolean;
        }>;
        price_description?: string | null;
        free_cancellation?: boolean | null;
        refund_amount?: number;
        rating?: number | null;
        reviews?: number | null;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            start_date: string;
            end_date: string;
            nights: number;
            checkin?: string;
            checkout?: string;
            stars?: number | null;
            amenities: Array<(string)>;
            policies?: {
                [key: string]: (string);
            };
            facilities?: Array<(string)>;
            landmarks?: Array<(string)>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type status = 'Pending' | 'Complete';

export type UnauthorizedExceptionResponseDto = {
    statusCode?: number;
    message: string;
    error: 'Unauthorized';
};

export type error2 = 'Unauthorized';

export type HotelsSearchPollRequestDto = unknown;

export type HotelsSearchPollResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            start_date: string;
            end_date: string;
            adults: string;
            children?: string;
            filters?: {
                radius?: number;
            };
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        static_id?: string | null;
        ids?: string;
        supplier: 'expedia' | 'hotelplanner' | 'sabre';
        supplier_env?: 'sandbox' | 'production' | null;
        category: 'hotels';
        name?: string | null;
        description?: string | null;
        address?: string | null;
        latitude?: number | null;
        longitude?: number | null;
        distance?: number | null;
        distance_uom?: string | null;
        images: Array<(string)>;
        currency?: string | null;
        tax?: number | null;
        price?: number | null;
        pay_at_property?: number | null;
        cancel_policy?: Array<{
            type: 'FREE_CANCELLATION' | 'NOT_REFUNDABLE' | 'PARTIAL_REFUND';
            start: string;
            penalty_type?: 'PERCENT' | 'PRICE' | 'NIGHTS' | null;
            penalty_value?: number | null;
            penalty_currency?: string | null;
        }>;
        fee_breakdown?: Array<{
            category: 'RESORT_FEE' | 'DEPOSIT' | 'PET_FEE' | 'PARKING_FEE' | 'CLEANING_FEE' | 'BREAKFAST_FEE' | 'EXTRA_BED_FEE' | 'SERVICE_FEE' | 'AIRPORT_SHUTTLE_FEE' | 'INTERNET_FEE' | 'FACILITIES_FEE' | 'UTILITY_FEE' | 'TAX' | 'OTHER';
            total_amount: number;
            mandatory: boolean;
        }>;
        price_description?: string | null;
        free_cancellation?: boolean | null;
        refund_amount?: number;
        rating?: number | null;
        reviews?: number | null;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            start_date: string;
            end_date: string;
            nights: number;
            checkin?: string;
            checkout?: string;
            stars?: number | null;
            amenities: Array<(string)>;
            policies?: {
                [key: string]: (string);
            };
            facilities?: Array<(string)>;
            landmarks?: Array<(string)>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type HotelsDetailsResponseDto = {
    id: string;
    static_id?: string | null;
    ids?: string;
    supplier: 'expedia' | 'hotelplanner' | 'sabre';
    supplier_env?: 'sandbox' | 'production' | null;
    category: 'hotels';
    name?: string | null;
    description?: string | null;
    address?: string | null;
    latitude?: number | null;
    longitude?: number | null;
    distance?: number | null;
    distance_uom?: string | null;
    images: Array<(string)>;
    currency?: string | null;
    tax?: number | null;
    price?: number | null;
    pay_at_property?: number | null;
    cancel_policy?: Array<{
        type: 'FREE_CANCELLATION' | 'NOT_REFUNDABLE' | 'PARTIAL_REFUND';
        start: string;
        penalty_type?: 'PERCENT' | 'PRICE' | 'NIGHTS' | null;
        penalty_value?: number | null;
        penalty_currency?: string | null;
    }>;
    fee_breakdown?: Array<{
        category: 'RESORT_FEE' | 'DEPOSIT' | 'PET_FEE' | 'PARKING_FEE' | 'CLEANING_FEE' | 'BREAKFAST_FEE' | 'EXTRA_BED_FEE' | 'SERVICE_FEE' | 'AIRPORT_SHUTTLE_FEE' | 'INTERNET_FEE' | 'FACILITIES_FEE' | 'UTILITY_FEE' | 'TAX' | 'OTHER';
        total_amount: number;
        mandatory: boolean;
    }>;
    price_description?: string | null;
    free_cancellation?: boolean | null;
    refund_amount?: number;
    rating?: number | null;
    reviews?: number | null;
    status: 'Active' | 'Pending' | 'Expired';
    rooms: Array<{
        id?: string | null;
        ids?: string | Array<(number)> | null;
        index?: string;
        name?: string | null;
        description?: string | null;
        bed?: string | null;
        view?: string | null;
        images: Array<(string)>;
        tax?: number | null;
        price?: number | null;
        pay_at_property?: number | null;
        cancel_policy?: Array<{
            type: 'FREE_CANCELLATION' | 'NOT_REFUNDABLE' | 'PARTIAL_REFUND';
            start: string;
            penalty_type?: 'PERCENT' | 'PRICE' | 'NIGHTS' | null;
            penalty_value?: number | null;
            penalty_currency?: string | null;
        }>;
        fee_breakdown?: Array<{
            category: 'RESORT_FEE' | 'DEPOSIT' | 'PET_FEE' | 'PARKING_FEE' | 'CLEANING_FEE' | 'BREAKFAST_FEE' | 'EXTRA_BED_FEE' | 'SERVICE_FEE' | 'AIRPORT_SHUTTLE_FEE' | 'INTERNET_FEE' | 'FACILITIES_FEE' | 'UTILITY_FEE' | 'TAX' | 'OTHER';
            total_amount: number;
            mandatory: boolean;
        }>;
        currency?: string | null;
        price_description?: string | null;
        free_cancellation?: boolean | null;
        refund_amount?: number;
        rate_key?: string | null;
    }>;
    attributes: {
        start_date: string;
        end_date: string;
        nights: number;
        checkin?: string;
        checkout?: string;
        stars?: number | null;
        amenities: Array<(string)>;
        policies?: {
            [key: string]: (string);
        };
        facilities?: Array<(string)>;
        landmarks?: Array<(string)>;
    };
};

export type supplier = 'expedia' | 'hotelplanner' | 'sabre';

export type supplier_env = 'sandbox' | 'production';

export type category = 'hotels';

export type status2 = 'Active' | 'Pending' | 'Expired';

export type HotelsSuggestionsResponseDto = {
    results: Array<{
        id: string;
        static_id?: string | null;
        ids?: string;
        supplier: 'expedia' | 'hotelplanner' | 'sabre';
        supplier_env?: 'sandbox' | 'production' | null;
        category: 'hotels';
        name?: string | null;
        description?: string | null;
        address?: string | null;
        latitude?: number | null;
        longitude?: number | null;
        distance?: number | null;
        distance_uom?: string | null;
        images: Array<(string)>;
        currency?: string | null;
        tax?: number | null;
        price?: number | null;
        pay_at_property?: number | null;
        cancel_policy?: Array<{
            type: 'FREE_CANCELLATION' | 'NOT_REFUNDABLE' | 'PARTIAL_REFUND';
            start: string;
            penalty_type?: 'PERCENT' | 'PRICE' | 'NIGHTS' | null;
            penalty_value?: number | null;
            penalty_currency?: string | null;
        }>;
        fee_breakdown?: Array<{
            category: 'RESORT_FEE' | 'DEPOSIT' | 'PET_FEE' | 'PARKING_FEE' | 'CLEANING_FEE' | 'BREAKFAST_FEE' | 'EXTRA_BED_FEE' | 'SERVICE_FEE' | 'AIRPORT_SHUTTLE_FEE' | 'INTERNET_FEE' | 'FACILITIES_FEE' | 'UTILITY_FEE' | 'TAX' | 'OTHER';
            total_amount: number;
            mandatory: boolean;
        }>;
        price_description?: string | null;
        free_cancellation?: boolean | null;
        refund_amount?: number;
        rating?: number | null;
        reviews?: number | null;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            start_date: string;
            end_date: string;
            nights: number;
            checkin?: string;
            checkout?: string;
            stars?: number | null;
            amenities: Array<(string)>;
            policies?: {
                [key: string]: (string);
            };
            facilities?: Array<(string)>;
            landmarks?: Array<(string)>;
        };
        rooms?: Array<{
            id?: string | null;
            ids?: string | Array<(number)> | null;
            index?: string;
            name?: string | null;
            description?: string | null;
            bed?: string | null;
            view?: string | null;
            images: Array<(string)>;
            tax?: number | null;
            price?: number | null;
            pay_at_property?: number | null;
            cancel_policy?: Array<{
                type: 'FREE_CANCELLATION' | 'NOT_REFUNDABLE' | 'PARTIAL_REFUND';
                start: string;
                penalty_type?: 'PERCENT' | 'PRICE' | 'NIGHTS' | null;
                penalty_value?: number | null;
                penalty_currency?: string | null;
            }>;
            fee_breakdown?: Array<{
                category: 'RESORT_FEE' | 'DEPOSIT' | 'PET_FEE' | 'PARKING_FEE' | 'CLEANING_FEE' | 'BREAKFAST_FEE' | 'EXTRA_BED_FEE' | 'SERVICE_FEE' | 'AIRPORT_SHUTTLE_FEE' | 'INTERNET_FEE' | 'FACILITIES_FEE' | 'UTILITY_FEE' | 'TAX' | 'OTHER';
                total_amount: number;
                mandatory: boolean;
            }>;
            currency?: string | null;
            price_description?: string | null;
            free_cancellation?: boolean | null;
            refund_amount?: number;
            rate_key?: string | null;
        }>;
    }>;
};

export type FlightsSearchRequestDto = {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    end_location: string;
    start_date: string;
    end_date?: string;
    adults?: number;
    children?: number;
    infants?: number;
    infants_seated?: number;
    direction: 'OneWay' | 'RoundTrip' | 'MultiCity';
    cabin?: 'PremiumFirst' | 'First' | 'PremiumBusiness' | 'Business' | 'PremiumEconomy' | 'Economy';
    seatmaps?: 'true' | 'false';
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
};

export type direction = 'OneWay' | 'RoundTrip' | 'MultiCity';

export type cabin = 'PremiumFirst' | 'First' | 'PremiumBusiness' | 'Business' | 'PremiumEconomy' | 'Economy';

export type seatmaps = 'true' | 'false';

export type FlightsSearchResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            end_location: string;
            start_date: string;
            end_date?: string;
            adults?: number;
            children?: number;
            infants?: number;
            infants_seated?: number;
            direction: 'OneWay' | 'RoundTrip' | 'MultiCity';
            cabin?: 'PremiumFirst' | 'First' | 'PremiumBusiness' | 'Business' | 'PremiumEconomy' | 'Economy';
            seatmaps?: 'true' | 'false';
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        static_id?: string | null;
        ids?: string;
        supplier: 'amadeus' | 'sabre';
        supplier_env?: 'sandbox' | 'production' | null;
        category: 'flights';
        index: number;
        name: string;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax: number;
        price: number;
        pay_at_property?: number | null;
        price_description: string;
        free_cancellation: boolean;
        status: 'Active' | 'Pending' | 'Expired';
        flights: Array<{
            id: string;
            duration?: number | null;
            segments: Array<{
                id: string | null;
                duration?: number | null;
                stops?: number;
                aircraft: string;
                aircraft_name: string;
                airline: string;
                airline_name: string;
                airline_operating: string;
                airline_operating_name: string;
                flight_number: string;
                start_date: string;
                start_location: string;
                start_location_name: string;
                start_location_terminal: string;
                end_date: string;
                end_location: string;
                end_location_name: string;
                end_location_terminal: string;
            }>;
        }>;
        attributes: {
            seatmaps: Array<unknown>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type FlightsSearchPollRequestDto = {
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
};

export type FlightsSearchPollResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            end_location: string;
            start_date: string;
            end_date?: string;
            adults?: number;
            children?: number;
            infants?: number;
            infants_seated?: number;
            direction: 'OneWay' | 'RoundTrip' | 'MultiCity';
            cabin?: 'PremiumFirst' | 'First' | 'PremiumBusiness' | 'Business' | 'PremiumEconomy' | 'Economy';
            seatmaps?: 'true' | 'false';
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        static_id?: string | null;
        ids?: string;
        supplier: 'amadeus' | 'sabre';
        supplier_env?: 'sandbox' | 'production' | null;
        category: 'flights';
        index: number;
        name: string;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax: number;
        price: number;
        pay_at_property?: number | null;
        price_description: string;
        free_cancellation: boolean;
        status: 'Active' | 'Pending' | 'Expired';
        flights: Array<{
            id: string;
            duration?: number | null;
            segments: Array<{
                id: string | null;
                duration?: number | null;
                stops?: number;
                aircraft: string;
                aircraft_name: string;
                airline: string;
                airline_name: string;
                airline_operating: string;
                airline_operating_name: string;
                flight_number: string;
                start_date: string;
                start_location: string;
                start_location_name: string;
                start_location_terminal: string;
                end_date: string;
                end_location: string;
                end_location_name: string;
                end_location_terminal: string;
            }>;
        }>;
        attributes: {
            seatmaps: Array<unknown>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type FlightsDetailsResponseDto = {
    id: string;
    static_id?: string | null;
    ids?: string;
    supplier: 'amadeus' | 'sabre';
    supplier_env?: 'sandbox' | 'production' | null;
    category: 'flights';
    index: number;
    name: string;
    supplier_tax?: number;
    supplier_price?: number;
    supplier_currency?: string;
    currency?: string;
    tax: number;
    price: number;
    pay_at_property?: number | null;
    price_description: string;
    free_cancellation: boolean;
    status: 'Active' | 'Pending' | 'Expired';
    flights: Array<{
        id: string;
        duration?: number | null;
        segments: Array<{
            id: string | null;
            duration?: number | null;
            stops?: number;
            aircraft: string;
            aircraft_name: string;
            airline: string;
            airline_name: string;
            airline_operating: string;
            airline_operating_name: string;
            flight_number: string;
            start_date: string;
            start_location: string;
            start_location_name: string;
            start_location_terminal: string;
            end_date: string;
            end_location: string;
            end_location_name: string;
            end_location_terminal: string;
        }>;
    }>;
    attributes: {
        seatmaps: Array<unknown>;
    };
};

export type supplier2 = 'amadeus' | 'sabre';

export type category2 = 'flights';

export type CarsSearchRequestDto = {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    end_location: string;
    start_date: string;
    end_date: string;
    filters?: {
        radius?: number;
    };
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
};

export type CarsSearchResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            end_location: string;
            start_date: string;
            end_date: string;
            filters?: {
                radius?: number;
            };
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        static_id?: string | null;
        ids?: string;
        supplier: 'sabre' | 'cartrawler';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'car-rental';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        pay_at_property?: number;
        price_description: string;
        free_cancellation?: boolean;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            ac?: boolean;
            fuel?: string;
            bags?: number;
            doors?: number;
            drive?: string;
            transmission?: string;
            passengers: number;
            company: string;
            company_logo?: string | null;
            start_date: string;
            start_location: string;
            start_location_name: string;
            end_date: string;
            end_location_name: string;
            end_location: string;
            landmarks?: Array<(string)>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type CarsSearchPollRequestDto = unknown;

export type CarsSearchPollResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            end_location: string;
            start_date: string;
            end_date: string;
            filters?: {
                radius?: number;
            };
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        static_id?: string | null;
        ids?: string;
        supplier: 'sabre' | 'cartrawler';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'car-rental';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        pay_at_property?: number;
        price_description: string;
        free_cancellation?: boolean;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            ac?: boolean;
            fuel?: string;
            bags?: number;
            doors?: number;
            drive?: string;
            transmission?: string;
            passengers: number;
            company: string;
            company_logo?: string | null;
            start_date: string;
            start_location: string;
            start_location_name: string;
            end_date: string;
            end_location_name: string;
            end_location: string;
            landmarks?: Array<(string)>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type CarsSuggestionsResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            end_location: string;
            start_date: string;
            end_date: string;
            filters?: {
                radius?: number;
            };
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        static_id?: string | null;
        ids?: string;
        supplier: 'sabre' | 'cartrawler';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'car-rental';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        pay_at_property?: number;
        price_description: string;
        free_cancellation?: boolean;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            ac?: boolean;
            fuel?: string;
            bags?: number;
            doors?: number;
            drive?: string;
            transmission?: string;
            passengers: number;
            company: string;
            company_logo?: string | null;
            start_date: string;
            start_location: string;
            start_location_name: string;
            end_date: string;
            end_location_name: string;
            end_location: string;
            landmarks?: Array<(string)>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type CarsDetailsResponseDto = {
    id: string;
    static_id?: string | null;
    ids?: string;
    supplier: 'sabre' | 'cartrawler';
    supplier_env: 'sandbox' | 'production';
    index: number;
    category: 'car-rental';
    name: string;
    description: string;
    address: string;
    latitude: number;
    longitude: number;
    distance: number;
    distance_uom: 'km' | 'mi';
    images: Array<(string)>;
    supplier_tax?: number;
    supplier_price?: number;
    supplier_currency?: string;
    currency?: string;
    tax?: number;
    price?: number;
    pay_at_property?: number;
    price_description: string;
    free_cancellation?: boolean;
    rating?: number;
    reviews?: number;
    status: 'Active' | 'Pending' | 'Expired';
    attributes: {
        ac?: boolean;
        fuel?: string;
        bags?: number;
        doors?: number;
        drive?: string;
        transmission?: string;
        passengers: number;
        company: string;
        company_logo?: string | null;
        start_date: string;
        start_location: string;
        start_location_name: string;
        end_date: string;
        end_location_name: string;
        end_location: string;
        landmarks?: Array<(string)>;
    };
};

export type supplier3 = 'sabre' | 'cartrawler';

export type category3 = 'car-rental';

export type distance_uom = 'km' | 'mi';

export type ThingsSearchRequestDto = {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    start_date: string;
    end_date: string;
    adults?: number;
    children?: number;
    filters?: {
        radius?: number;
        start_price?: number;
        end_price?: number;
    };
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
};

export type ThingsSearchResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            start_date: string;
            end_date: string;
            adults?: number;
            children?: number;
            filters?: {
                radius?: number;
                start_price?: number;
                end_price?: number;
            };
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        static_id?: string | null;
        ids?: string;
        supplier: 'viator' | 'tiqets' | 'simplenight';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'things-to-do';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        currency?: string;
        tax?: number;
        price?: number;
        pay_at_property?: number;
        price_description: string;
        free_cancellation?: boolean;
        rating?: number;
        reviews?: number;
        variants?: Array<{
            id: string;
            ids: string | null;
            name: string;
            description: string;
            images: Array<(string)>;
            index: number;
            tax?: number;
            price?: number;
            currency: string;
            cancel_policy?: Array<{
                type: 'FREE_CANCELLATION' | 'NOT_REFUNDABLE' | 'PARTIAL_REFUND';
                start: string;
                penalty_type?: 'PERCENT' | 'PRICE' | 'NIGHTS' | null;
                penalty_value?: number | null;
                penalty_currency?: string | null;
            }>;
            price_description: string;
            free_cancellation: boolean;
            attributes: {
                start_date: string;
                start_time?: string;
                booking_questions?: Array<{
                    id: string;
                    legacyBookingQuestionId?: number;
                    group: 'PER_BOOKING' | 'PER_TRAVELER';
                    type: 'STRING' | 'NUMBER_AND_UNIT' | 'DATE' | 'TIME' | 'LOCATION_REF_OR_FREE_TEXT';
                    required: 'MANDATORY' | 'OPTIONAL' | 'CONDITIONAL';
                    label: string;
                    hint?: string;
                    maxLength?: number;
                    travelerNum?: number;
                    units?: Array<('LOCATION_REFERENCE' | 'FREETEXT')>;
                    allowedAnswers?: Array<(string)>;
                }>;
            };
        }>;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            tags: Array<(string)>;
            adults: number;
            children: number;
            start_date: string;
            start_time?: string;
            nights?: number;
            company?: string;
            start_location?: string;
            pickup_description?: string;
            pickup_locations?: Array<Array<(string)>>;
            duration: number;
            includes?: Array<(string)>;
            excludes?: Array<(string)>;
            itinerary?: Array<Array<(string)>>;
            policies?: Array<(string)>;
            booking_questions?: Array<unknown>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type ThingsSearchPollRequestDto = unknown;

export type ThingsSearchPollResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            start_date: string;
            end_date: string;
            adults?: number;
            children?: number;
            filters?: {
                radius?: number;
                start_price?: number;
                end_price?: number;
            };
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        static_id?: string | null;
        ids?: string;
        supplier: 'viator' | 'tiqets' | 'simplenight';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'things-to-do';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        currency?: string;
        tax?: number;
        price?: number;
        pay_at_property?: number;
        price_description: string;
        free_cancellation?: boolean;
        rating?: number;
        reviews?: number;
        variants?: Array<{
            id: string;
            ids: string | null;
            name: string;
            description: string;
            images: Array<(string)>;
            index: number;
            tax?: number;
            price?: number;
            currency: string;
            cancel_policy?: Array<{
                type: 'FREE_CANCELLATION' | 'NOT_REFUNDABLE' | 'PARTIAL_REFUND';
                start: string;
                penalty_type?: 'PERCENT' | 'PRICE' | 'NIGHTS' | null;
                penalty_value?: number | null;
                penalty_currency?: string | null;
            }>;
            price_description: string;
            free_cancellation: boolean;
            attributes: {
                start_date: string;
                start_time?: string;
                booking_questions?: Array<{
                    id: string;
                    legacyBookingQuestionId?: number;
                    group: 'PER_BOOKING' | 'PER_TRAVELER';
                    type: 'STRING' | 'NUMBER_AND_UNIT' | 'DATE' | 'TIME' | 'LOCATION_REF_OR_FREE_TEXT';
                    required: 'MANDATORY' | 'OPTIONAL' | 'CONDITIONAL';
                    label: string;
                    hint?: string;
                    maxLength?: number;
                    travelerNum?: number;
                    units?: Array<('LOCATION_REFERENCE' | 'FREETEXT')>;
                    allowedAnswers?: Array<(string)>;
                }>;
            };
        }>;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            tags: Array<(string)>;
            adults: number;
            children: number;
            start_date: string;
            start_time?: string;
            nights?: number;
            company?: string;
            start_location?: string;
            pickup_description?: string;
            pickup_locations?: Array<Array<(string)>>;
            duration: number;
            includes?: Array<(string)>;
            excludes?: Array<(string)>;
            itinerary?: Array<Array<(string)>>;
            policies?: Array<(string)>;
            booking_questions?: Array<unknown>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type ThingsSuggestionsResponseDto = {
    results: Array<{
        id: string;
        static_id?: string | null;
        ids?: string;
        supplier: 'viator' | 'tiqets' | 'simplenight';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'things-to-do';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        currency?: string;
        tax?: number;
        price?: number;
        pay_at_property?: number;
        price_description: string;
        free_cancellation?: boolean;
        rating?: number;
        reviews?: number;
        variants?: Array<{
            id: string;
            ids: string | null;
            name: string;
            description: string;
            images: Array<(string)>;
            index: number;
            tax?: number;
            price?: number;
            currency: string;
            cancel_policy?: Array<{
                type: 'FREE_CANCELLATION' | 'NOT_REFUNDABLE' | 'PARTIAL_REFUND';
                start: string;
                penalty_type?: 'PERCENT' | 'PRICE' | 'NIGHTS' | null;
                penalty_value?: number | null;
                penalty_currency?: string | null;
            }>;
            price_description: string;
            free_cancellation: boolean;
            attributes: {
                start_date: string;
                start_time?: string;
                booking_questions?: Array<{
                    id: string;
                    legacyBookingQuestionId?: number;
                    group: 'PER_BOOKING' | 'PER_TRAVELER';
                    type: 'STRING' | 'NUMBER_AND_UNIT' | 'DATE' | 'TIME' | 'LOCATION_REF_OR_FREE_TEXT';
                    required: 'MANDATORY' | 'OPTIONAL' | 'CONDITIONAL';
                    label: string;
                    hint?: string;
                    maxLength?: number;
                    travelerNum?: number;
                    units?: Array<('LOCATION_REFERENCE' | 'FREETEXT')>;
                    allowedAnswers?: Array<(string)>;
                }>;
            };
        }>;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            tags: Array<(string)>;
            adults: number;
            children: number;
            start_date: string;
            start_time?: string;
            nights?: number;
            company?: string;
            start_location?: string;
            pickup_description?: string;
            pickup_locations?: Array<Array<(string)>>;
            duration: number;
            includes?: Array<(string)>;
            excludes?: Array<(string)>;
            itinerary?: Array<Array<(string)>>;
            policies?: Array<(string)>;
            booking_questions?: Array<unknown>;
        };
    }>;
};

export type ThingsDetailsResponseDto = {
    id: string;
    static_id?: string | null;
    ids?: string;
    supplier: 'viator' | 'tiqets' | 'simplenight';
    supplier_env: 'sandbox' | 'production';
    index: number;
    category: 'things-to-do';
    name: string;
    description: string;
    address: string;
    latitude: number;
    longitude: number;
    distance: number;
    distance_uom: 'km' | 'mi';
    images: Array<(string)>;
    currency?: string;
    tax?: number;
    price?: number;
    pay_at_property?: number;
    price_description: string;
    free_cancellation?: boolean;
    rating?: number;
    reviews?: number;
    variants: Array<{
        id: string;
        ids: string | null;
        name: string;
        description: string;
        images: Array<(string)>;
        index: number;
        tax?: number;
        price?: number;
        currency: string;
        cancel_policy?: Array<{
            type: 'FREE_CANCELLATION' | 'NOT_REFUNDABLE' | 'PARTIAL_REFUND';
            start: string;
            penalty_type?: 'PERCENT' | 'PRICE' | 'NIGHTS' | null;
            penalty_value?: number | null;
            penalty_currency?: string | null;
        }>;
        price_description: string;
        free_cancellation: boolean;
        attributes: {
            start_date: string;
            start_time?: string;
            booking_questions?: Array<{
                id: string;
                legacyBookingQuestionId?: number;
                group: 'PER_BOOKING' | 'PER_TRAVELER';
                type: 'STRING' | 'NUMBER_AND_UNIT' | 'DATE' | 'TIME' | 'LOCATION_REF_OR_FREE_TEXT';
                required: 'MANDATORY' | 'OPTIONAL' | 'CONDITIONAL';
                label: string;
                hint?: string;
                maxLength?: number;
                travelerNum?: number;
                units?: Array<('LOCATION_REFERENCE' | 'FREETEXT')>;
                allowedAnswers?: Array<(string)>;
            }>;
        };
    }>;
    status: 'Active' | 'Pending' | 'Expired';
    attributes: {
        tags: Array<(string)>;
        adults: number;
        children: number;
        start_date: string;
        start_time?: string;
        nights?: number;
        company?: string;
        start_location?: string;
        pickup_description?: string;
        pickup_locations?: Array<Array<(string)>>;
        duration: number;
        includes?: Array<(string)>;
        excludes?: Array<(string)>;
        itinerary?: Array<Array<(string)>>;
        policies?: Array<(string)>;
        booking_questions?: Array<unknown>;
    };
};

export type supplier4 = 'viator' | 'tiqets' | 'simplenight';

export type category4 = 'things-to-do';

export type DiningSearchRequestDto = {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    start_date: string;
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    adults?: number;
    filters?: {
        keyword?: string;
        radius?: number;
    };
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
};

export type DiningSearchResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            start_date: string;
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            adults?: number;
            filters?: {
                keyword?: string;
                radius?: number;
            };
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        ids?: string;
        supplier: 'yelp' | 'opentable';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'dining';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        price_description: string;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            phone: string;
            adults: number;
            children: number;
            categories: Array<(string)>;
            start_date: string;
            start_location: string;
            reservations: boolean;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type DiningSearchPollRequestDto = unknown;

export type DiningSearchPollResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            start_date: string;
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            adults?: number;
            filters?: {
                keyword?: string;
                radius?: number;
            };
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        ids?: string;
        supplier: 'yelp' | 'opentable';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'dining';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        price_description: string;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            phone: string;
            adults: number;
            children: number;
            categories: Array<(string)>;
            start_date: string;
            start_location: string;
            reservations: boolean;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type DiningSuggestionsResponseDto = {
    results: Array<{
        id: string;
        ids?: string;
        supplier: 'yelp' | 'opentable';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'dining';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        price_description: string;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            phone: string;
            adults: number;
            children: number;
            categories: Array<(string)>;
            start_date: string;
            start_location: string;
            reservations: boolean;
        };
    }>;
};

export type DiningDetailsResponseDto = {
    id: string;
    ids?: string;
    supplier: 'yelp' | 'opentable';
    supplier_env: 'sandbox' | 'production';
    index: number;
    category: 'dining';
    name: string;
    description: string;
    address: string;
    latitude: number;
    longitude: number;
    distance: number;
    distance_uom: 'km' | 'mi';
    images: Array<(string)>;
    supplier_tax?: number;
    supplier_price?: number;
    supplier_currency?: string;
    currency?: string;
    tax?: number;
    price?: number;
    price_description: string;
    rating?: number;
    reviews?: number;
    status: 'Active' | 'Pending' | 'Expired';
    attributes: {
        phone: string;
        adults: number;
        children: number;
        categories: Array<(string)>;
        start_date: string;
        start_location: string;
        reservations: boolean;
        reviews: Array<{
            id: number;
            ids: string;
            name: string;
            image?: string;
            rating: number;
            review: string;
            date: string;
        }>;
        hours: Array<({
            start: string;
            end: string;
            day: number;
            start2?: string;
            end2?: string;
        } | null)>;
        availabilities: Array<(string)>;
    };
};

export type supplier5 = 'yelp' | 'opentable';

export type category5 = 'dining';

export type ParkingSearchRequestDto = {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    start_date: string;
    end_date: string;
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    filters?: {
        radius?: number;
    };
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
};

export type ParkingSearchResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            start_date: string;
            end_date: string;
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            filters?: {
                radius?: number;
            };
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        ids?: string;
        supplier: 'parkopedia';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'parking';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        price_description: string;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        free_cancellation?: boolean | null;
        attributes: {
            start_date: string;
            start_location: string;
            end_date: string;
            reservations: boolean;
            type: 'ON_STREET' | 'OFF_STREET';
            height: number;
            company: string;
            reviews: Array<(string)>;
            surface: string;
            capacity: number;
            features: Array<(string)>;
            location_id?: string;
            times: {
                open: Array<{
                    days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                    from: string;
                    to: string;
                }>;
                restricted?: Array<{
                    reason?: string;
                    exceptions?: Array<{
                        type?: string;
                        max_stay?: string;
                    }>;
                    active_times: Array<{
                        days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                        from: string;
                        to: string;
                    }>;
                }>;
            };
            rates: Array<{
                eligibility: 'DEFAULT' | 'RESIDENTS' | 'VALET' | 'EVENT' | 'VALIDATION' | 'VISITORS' | 'DURATION_ADDITIONAL';
                max_stay?: string;
                rates?: Array<{
                    type: 'CUSTOM' | 'DURATION' | 'DURATION_ADDITIONAL';
                    price: number;
                    value: string;
                    conditions?: Array<{
                        days?: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                        exit?: {
                            start?: string;
                            end?: string;
                        };
                        enter?: {
                            start?: string;
                            end?: string;
                        };
                        max_stay?: string;
                    }>;
                }>;
                active_times?: Array<{
                    days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                    from: string;
                    to: string;
                }>;
            }>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type ParkingSearchPollRequestDto = unknown;

export type ParkingSearchPollResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            start_date: string;
            end_date: string;
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            filters?: {
                radius?: number;
            };
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        ids?: string;
        supplier: 'parkopedia';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'parking';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        price_description: string;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        free_cancellation?: boolean | null;
        attributes: {
            start_date: string;
            start_location: string;
            end_date: string;
            reservations: boolean;
            type: 'ON_STREET' | 'OFF_STREET';
            height: number;
            company: string;
            reviews: Array<(string)>;
            surface: string;
            capacity: number;
            features: Array<(string)>;
            location_id?: string;
            times: {
                open: Array<{
                    days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                    from: string;
                    to: string;
                }>;
                restricted?: Array<{
                    reason?: string;
                    exceptions?: Array<{
                        type?: string;
                        max_stay?: string;
                    }>;
                    active_times: Array<{
                        days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                        from: string;
                        to: string;
                    }>;
                }>;
            };
            rates: Array<{
                eligibility: 'DEFAULT' | 'RESIDENTS' | 'VALET' | 'EVENT' | 'VALIDATION' | 'VISITORS' | 'DURATION_ADDITIONAL';
                max_stay?: string;
                rates?: Array<{
                    type: 'CUSTOM' | 'DURATION' | 'DURATION_ADDITIONAL';
                    price: number;
                    value: string;
                    conditions?: Array<{
                        days?: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                        exit?: {
                            start?: string;
                            end?: string;
                        };
                        enter?: {
                            start?: string;
                            end?: string;
                        };
                        max_stay?: string;
                    }>;
                }>;
                active_times?: Array<{
                    days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                    from: string;
                    to: string;
                }>;
            }>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type ParkingSuggestionsResponseDto = {
    results: Array<{
        id: string;
        ids?: string;
        supplier: 'parkopedia';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'parking';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        price_description: string;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        free_cancellation?: boolean | null;
        attributes: {
            start_date: string;
            start_location: string;
            end_date: string;
            reservations: boolean;
            type: 'ON_STREET' | 'OFF_STREET';
            height: number;
            company: string;
            reviews: Array<(string)>;
            surface: string;
            capacity: number;
            features: Array<(string)>;
            location_id?: string;
            times: {
                open: Array<{
                    days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                    from: string;
                    to: string;
                }>;
                restricted?: Array<{
                    reason?: string;
                    exceptions?: Array<{
                        type?: string;
                        max_stay?: string;
                    }>;
                    active_times: Array<{
                        days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                        from: string;
                        to: string;
                    }>;
                }>;
            };
            rates: Array<{
                eligibility: 'DEFAULT' | 'RESIDENTS' | 'VALET' | 'EVENT' | 'VALIDATION' | 'VISITORS' | 'DURATION_ADDITIONAL';
                max_stay?: string;
                rates?: Array<{
                    type: 'CUSTOM' | 'DURATION' | 'DURATION_ADDITIONAL';
                    price: number;
                    value: string;
                    conditions?: Array<{
                        days?: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                        exit?: {
                            start?: string;
                            end?: string;
                        };
                        enter?: {
                            start?: string;
                            end?: string;
                        };
                        max_stay?: string;
                    }>;
                }>;
                active_times?: Array<{
                    days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                    from: string;
                    to: string;
                }>;
            }>;
        };
    }>;
};

export type ParkingDetailsResponseDto = {
    id: string;
    ids?: string;
    supplier: 'parkopedia';
    supplier_env: 'sandbox' | 'production';
    index: number;
    category: 'parking';
    name: string;
    description: string;
    address: string;
    latitude: number;
    longitude: number;
    distance: number;
    distance_uom: 'km' | 'mi';
    images: Array<(string)>;
    supplier_tax?: number;
    supplier_price?: number;
    supplier_currency?: string;
    currency?: string;
    tax?: number;
    price?: number;
    price_description: string;
    rating?: number;
    reviews?: number;
    status: 'Active' | 'Pending' | 'Expired';
    free_cancellation?: boolean | null;
    attributes: {
        start_date: string;
        start_location: string;
        end_date: string;
        reservations: boolean;
        type: 'ON_STREET' | 'OFF_STREET';
        height: number;
        company: string;
        reviews: Array<{
            id?: number;
            ids?: number;
            date?: string;
            image?: string;
            name?: string;
            review?: string;
            rating?: number;
        }>;
        surface: string;
        capacity: number;
        features: Array<(string)>;
        location_id?: string;
        times: {
            open: Array<{
                days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                from: string;
                to: string;
            }>;
            restricted?: Array<{
                reason?: string;
                exceptions?: Array<{
                    type?: string;
                    max_stay?: string;
                }>;
                active_times: Array<{
                    days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                    from: string;
                    to: string;
                }>;
            }>;
        };
        rates: Array<{
            eligibility: 'DEFAULT' | 'RESIDENTS' | 'VALET' | 'EVENT' | 'VALIDATION' | 'VISITORS' | 'DURATION_ADDITIONAL';
            max_stay?: string;
            rates?: Array<{
                type: 'CUSTOM' | 'DURATION' | 'DURATION_ADDITIONAL';
                price: number;
                value: string;
                conditions?: Array<{
                    days?: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                    exit?: {
                        start?: string;
                        end?: string;
                    };
                    enter?: {
                        start?: string;
                        end?: string;
                    };
                    max_stay?: string;
                }>;
            }>;
            active_times?: Array<{
                days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                from: string;
                to: string;
            }>;
        }>;
        availability?: {
            quote_reference?: string;
            error?: string;
        } | null;
        categories?: Array<(string)>;
        phone?: string;
    };
};

export type supplier6 = 'parkopedia';

export type category6 = 'parking';

export type type = 'ON_STREET' | 'OFF_STREET';

export type ShowsSearchRequestDto = {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    start_date: string;
    end_date: string;
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    filters?: {
        keyword?: string;
    };
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
};

export type ShowsSearchResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            start_date: string;
            end_date: string;
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            filters?: {
                keyword?: string;
            };
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        ids?: string;
        supplier: 'ticketnetwork';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'shows-events';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        price_description: string;
        free_cancellation?: boolean | null;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            date: string;
            tags: Array<(string)>;
            venue: string;
            capacity: number;
            performers: Array<(string)>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type ShowsSearchPollRequestDto = unknown;

export type ShowsSearchPollResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            start_date: string;
            end_date: string;
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            filters?: {
                keyword?: string;
            };
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        ids?: string;
        supplier: 'ticketnetwork';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'shows-events';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        price_description: string;
        free_cancellation?: boolean | null;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            date: string;
            tags: Array<(string)>;
            venue: string;
            capacity: number;
            performers: Array<(string)>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type ShowsSuggestionsResponseDto = {
    results: Array<{
        id: string;
        ids?: string;
        supplier: 'ticketnetwork';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'shows-events';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        price_description: string;
        free_cancellation?: boolean | null;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            date: string;
            tags: Array<(string)>;
            venue: string;
            capacity: number;
            performers: Array<(string)>;
        };
    }>;
};

export type ShowsDetailsResponseDto = {
    id: string;
    ids?: string;
    supplier: 'ticketnetwork';
    supplier_env: 'sandbox' | 'production';
    index: number;
    category: 'shows-events';
    name: string;
    description: string;
    address: string;
    latitude: number;
    longitude: number;
    distance: number;
    distance_uom: 'km' | 'mi';
    images: Array<(string)>;
    supplier_tax?: number;
    supplier_price?: number;
    supplier_currency?: string;
    currency?: string;
    tax?: number;
    price?: number;
    price_description: string;
    free_cancellation?: boolean | null;
    rating?: number;
    reviews?: number;
    status: 'Active' | 'Pending' | 'Expired';
    attributes: {
        date: string;
        tags: Array<(string)>;
        venue: string;
        capacity: number;
        performers: Array<(string)>;
        sections: Array<(string)>;
        map: string;
    };
    tickets: Array<{
        id: number;
        ids: number;
        index: number;
        section: string;
        row: string;
        seat_low: string;
        seat_high: string;
        description: string;
        delivery: Array<(string)>;
        qty: number;
        qtys: Array<(number)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        price_description: string;
        free_cancellation: boolean;
    }>;
};

export type supplier7 = 'ticketnetwork';

export type category7 = 'shows-events';

export type TransportationSearchRequestDto = {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    end_location: string;
    start_date: string;
    end_date?: string;
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    adults?: number;
    children?: number;
    direction?: 'OneWay' | 'RoundTrip';
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
};

export type direction2 = 'OneWay' | 'RoundTrip';

export type TransportationSearchResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            end_location: string;
            start_date: string;
            end_date?: string;
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            adults?: number;
            children?: number;
            direction?: 'OneWay' | 'RoundTrip';
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        ids?: string;
        supplier: 'mozio';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'transportation';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        price_description: string;
        free_cancellation: boolean;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            start_date: string;
            end_date: string;
            start_location: string;
            end_location: string;
            bags: number;
            type: string;
            class: string;
            adults: number;
            infants: number;
            children: number;
            direction: 'OneWay' | 'RoundTrip';
            passengers: number;
            company: string;
            company_logo?: string;
            amenities: Array<{
                id: string;
                name: string;
                price: number;
                images: Array<(string)>;
                currency: string;
                included: boolean;
                description: string;
            }>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type TransportationSearchPollRequestDto = unknown;

export type TransportationSearchPollResponseDto = {
    search: {
        id: string;
        tenant_id: string;
        user_id?: string | null;
        category_slug: string;
        search_data: {
            /**
             * Content language.
             */
            language: string;
            /**
             * Currency code.
             */
            currency: string;
            /**
             * Unit of measure (km or mi).
             */
            uom: 'km' | 'mi';
            start_location: string;
            end_location: string;
            start_date: string;
            end_date?: string;
            sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
            order?: 'asc' | 'desc';
            adults?: number;
            children?: number;
            direction?: 'OneWay' | 'RoundTrip';
            page?: number;
            limit?: number;
            /**
             * Poll for updates or return full data in one request.
             */
            poll?: boolean;
            /**
             * Debug mode. Return raw data without normalization. Dev only.
             */
            raw?: boolean;
        };
        status?: 'Pending' | 'Complete';
        stats?: {
            [key: string]: unknown;
        } | null;
        created_at: string;
        updated_at: string;
    };
    results: Array<{
        id: string;
        ids?: string;
        supplier: 'mozio';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'transportation';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        price_description: string;
        free_cancellation: boolean;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            start_date: string;
            end_date: string;
            start_location: string;
            end_location: string;
            bags: number;
            type: string;
            class: string;
            adults: number;
            infants: number;
            children: number;
            direction: 'OneWay' | 'RoundTrip';
            passengers: number;
            company: string;
            company_logo?: string;
            amenities: Array<{
                id: string;
                name: string;
                price: number;
                images: Array<(string)>;
                currency: string;
                included: boolean;
                description: string;
            }>;
        };
    }>;
    page: number;
    limit: number;
    total: number;
};

export type TransportationSuggestionsResponseDto = {
    results: Array<{
        id: string;
        ids?: string;
        supplier: 'mozio';
        supplier_env: 'sandbox' | 'production';
        index: number;
        category: 'transportation';
        name: string;
        description: string;
        address: string;
        latitude: number;
        longitude: number;
        distance: number;
        distance_uom: 'km' | 'mi';
        images: Array<(string)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        price_description: string;
        free_cancellation: boolean;
        rating?: number;
        reviews?: number;
        status: 'Active' | 'Pending' | 'Expired';
        attributes: {
            start_date: string;
            end_date: string;
            start_location: string;
            end_location: string;
            bags: number;
            type: string;
            class: string;
            adults: number;
            infants: number;
            children: number;
            direction: 'OneWay' | 'RoundTrip';
            passengers: number;
            company: string;
            company_logo?: string;
            amenities: Array<{
                id: string;
                name: string;
                price: number;
                images: Array<(string)>;
                currency: string;
                included: boolean;
                description: string;
            }>;
        };
    }>;
};

export type TransportationDetailsResponseDto = {
    id: string;
    ids?: string;
    supplier: 'mozio';
    supplier_env: 'sandbox' | 'production';
    index: number;
    category: 'transportation';
    name: string;
    description: string;
    address: string;
    latitude: number;
    longitude: number;
    distance: number;
    distance_uom: 'km' | 'mi';
    images: Array<(string)>;
    supplier_tax?: number;
    supplier_price?: number;
    supplier_currency?: string;
    currency?: string;
    tax?: number;
    price?: number;
    price_description: string;
    free_cancellation: boolean;
    rating?: number;
    reviews?: number;
    status: 'Active' | 'Pending' | 'Expired';
    attributes: {
        start_date: string;
        end_date: string;
        start_location: string;
        end_location: string;
        bags: number;
        type: string;
        class: string;
        adults: number;
        infants: number;
        children: number;
        direction: 'OneWay' | 'RoundTrip';
        passengers: number;
        company: string;
        company_logo?: string;
        amenities: Array<{
            id: string;
            name: string;
            price: number;
            images: Array<(string)>;
            currency: string;
            included: boolean;
            description: string;
        }>;
    };
};

export type supplier8 = 'mozio';

export type category8 = 'transportation';

export type UserResponseDto = {
    /**
     * User ID
     */
    id: string;
    /**
     * Tenant ID
     */
    tenant_id: string | null;
    /**
     * First name
     */
    first_name: string | null;
    /**
     * Last name
     */
    last_name: string | null;
    /**
     * Email address
     */
    email: string;
    /**
     * Is email verified
     */
    email_verified: boolean | null;
    /**
     * Phone number
     */
    phone_number: string;
    /**
     * Phone prefix
     */
    phone_prefix: string;
    /**
     * Country code
     */
    country: string;
    /**
     * Language code
     */
    language: string;
    /**
     * Currency code
     */
    currency: string;
    /**
     * Created at
     */
    created_at: string;
    /**
     * Updated at
     */
    updated_at: string;
};

export type BadRequestExceptionDto = {
    statusCode?: number;
    message: string;
    error?: 'Bad request';
    errors: Array<(string)> | null;
};

export type error3 = 'Bad request';

export type UnauthorizedExceptionDto = {
    statusCode?: number;
    message: string;
    error: 'Unauthorized';
};

export type UserLoginRequestDto = {
    /**
     * Email address
     */
    email: string;
    /**
     * Password
     */
    password: string;
};

export type UserLoginResponseDto = {
    tokens: {
        access: {
            token: string;
            expires: string;
        };
        refresh: {
            token: string;
            expires: string;
        };
    };
};

export type UserRefreshResponseDto = {
    access: {
        token: string;
        expires: string;
    };
    refresh: {
        token: string;
        expires: string;
    };
};

export type CartsFindOneResponseDto = {
    id: string;
    tenant_id: string;
    user_id: string | null;
    status?: 'Active' | 'Inactive';
    total_tax?: number;
    total_amount?: number;
    total_currency?: string;
    first_name?: string | null;
    last_name?: string | null;
    phone_prefix?: string | null;
    phone_number?: string | null;
    email?: string | null;
    country?: string | null;
    cart_items: Array<{
        id: string;
        tenant_id: string;
        user_id?: string | null;
        cart_id: string;
        category_slug: string;
        supplier_slug: string;
        status?: 'Active' | 'Inactive';
        qty?: number;
        total_tax?: number;
        total_amount?: number;
        total_currency?: string;
        search_data: {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    start_date: string;
    end_date: string;
    adults: string;
    children?: string;
    filters?: {
        radius?: number;
    };
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
} | {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    end_location: string;
    start_date: string;
    end_date: string;
    filters?: {
        radius?: number;
    };
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
} | {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    end_location: string;
    start_date: string;
    end_date?: string;
    adults?: number;
    children?: number;
    infants?: number;
    infants_seated?: number;
    direction: 'OneWay' | 'RoundTrip' | 'MultiCity';
    cabin?: 'PremiumFirst' | 'First' | 'PremiumBusiness' | 'Business' | 'PremiumEconomy' | 'Economy';
    seatmaps?: 'true' | 'false';
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
} | {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    start_date: string;
    end_date: string;
    adults?: number;
    children?: number;
    filters?: {
        radius?: number;
        start_price?: number;
        end_price?: number;
    };
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
} | {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    start_date: string;
    end_date: string;
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    filters?: {
        keyword?: string;
    };
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
} | {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    start_date: string;
    end_date: string;
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    filters?: {
        radius?: number;
    };
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
} | {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    end_location: string;
    start_date: string;
    end_date?: string;
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    adults?: number;
    children?: number;
    direction?: 'OneWay' | 'RoundTrip';
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
} | {
    /**
     * Content language.
     */
    language: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    start_location: string;
    start_date: string;
    sort?: 'id' | 'ids' | 'supplier' | 'name' | 'distance' | 'tax' | 'price' | 'free_cancellation';
    order?: 'asc' | 'desc';
    adults?: number;
    filters?: {
        keyword?: string;
        radius?: number;
    };
    page?: number;
    limit?: number;
    /**
     * Poll for updates or return full data in one request.
     */
    poll?: boolean;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: boolean;
};
        item_data_raw?: unknown;
        item_data: {
    id: string;
    static_id?: string | null;
    ids?: string;
    supplier: 'expedia' | 'hotelplanner' | 'sabre';
    supplier_env?: 'sandbox' | 'production' | null;
    category: 'hotels';
    name?: string | null;
    description?: string | null;
    address?: string | null;
    latitude?: number | null;
    longitude?: number | null;
    distance?: number | null;
    distance_uom?: string | null;
    images: Array<(string)>;
    currency?: string | null;
    tax?: number | null;
    price?: number | null;
    pay_at_property?: number | null;
    cancel_policy?: Array<{
        type: 'FREE_CANCELLATION' | 'NOT_REFUNDABLE' | 'PARTIAL_REFUND';
        start: string;
        penalty_type?: 'PERCENT' | 'PRICE' | 'NIGHTS' | null;
        penalty_value?: number | null;
        penalty_currency?: string | null;
    }>;
    fee_breakdown?: Array<{
        category: 'RESORT_FEE' | 'DEPOSIT' | 'PET_FEE' | 'PARKING_FEE' | 'CLEANING_FEE' | 'BREAKFAST_FEE' | 'EXTRA_BED_FEE' | 'SERVICE_FEE' | 'AIRPORT_SHUTTLE_FEE' | 'INTERNET_FEE' | 'FACILITIES_FEE' | 'UTILITY_FEE' | 'TAX' | 'OTHER';
        total_amount: number;
        mandatory: boolean;
    }>;
    price_description?: string | null;
    free_cancellation?: boolean | null;
    refund_amount?: number;
    rating?: number | null;
    reviews?: number | null;
    status: 'Active' | 'Pending' | 'Expired';
    rooms: Array<{
        id?: string | null;
        ids?: string | Array<(number)> | null;
        index?: string;
        name?: string | null;
        description?: string | null;
        bed?: string | null;
        view?: string | null;
        images: Array<(string)>;
        tax?: number | null;
        price?: number | null;
        pay_at_property?: number | null;
        cancel_policy?: Array<{
            type: 'FREE_CANCELLATION' | 'NOT_REFUNDABLE' | 'PARTIAL_REFUND';
            start: string;
            penalty_type?: 'PERCENT' | 'PRICE' | 'NIGHTS' | null;
            penalty_value?: number | null;
            penalty_currency?: string | null;
        }>;
        fee_breakdown?: Array<{
            category: 'RESORT_FEE' | 'DEPOSIT' | 'PET_FEE' | 'PARKING_FEE' | 'CLEANING_FEE' | 'BREAKFAST_FEE' | 'EXTRA_BED_FEE' | 'SERVICE_FEE' | 'AIRPORT_SHUTTLE_FEE' | 'INTERNET_FEE' | 'FACILITIES_FEE' | 'UTILITY_FEE' | 'TAX' | 'OTHER';
            total_amount: number;
            mandatory: boolean;
        }>;
        currency?: string | null;
        price_description?: string | null;
        free_cancellation?: boolean | null;
        refund_amount?: number;
        rate_key?: string | null;
    }>;
    attributes: {
        start_date: string;
        end_date: string;
        nights: number;
        checkin?: string;
        checkout?: string;
        stars?: number | null;
        amenities: Array<(string)>;
        policies?: {
            [key: string]: (string);
        };
        facilities?: Array<(string)>;
        landmarks?: Array<(string)>;
    };
} | {
    id: string;
    static_id?: string | null;
    ids?: string;
    supplier: 'sabre' | 'cartrawler';
    supplier_env: 'sandbox' | 'production';
    index: number;
    category: 'car-rental';
    name: string;
    description: string;
    address: string;
    latitude: number;
    longitude: number;
    distance: number;
    distance_uom: 'km' | 'mi';
    images: Array<(string)>;
    supplier_tax?: number;
    supplier_price?: number;
    supplier_currency?: string;
    currency?: string;
    tax?: number;
    price?: number;
    pay_at_property?: number;
    price_description: string;
    free_cancellation?: boolean;
    rating?: number;
    reviews?: number;
    status: 'Active' | 'Pending' | 'Expired';
    attributes: {
        ac?: boolean;
        fuel?: string;
        bags?: number;
        doors?: number;
        drive?: string;
        transmission?: string;
        passengers: number;
        company: string;
        company_logo?: string | null;
        start_date: string;
        start_location: string;
        start_location_name: string;
        end_date: string;
        end_location_name: string;
        end_location: string;
        landmarks?: Array<(string)>;
    };
} | {
    id: string;
    static_id?: string | null;
    ids?: string;
    supplier: 'amadeus' | 'sabre';
    supplier_env?: 'sandbox' | 'production' | null;
    category: 'flights';
    index: number;
    name: string;
    supplier_tax?: number;
    supplier_price?: number;
    supplier_currency?: string;
    currency?: string;
    tax: number;
    price: number;
    pay_at_property?: number | null;
    price_description: string;
    free_cancellation: boolean;
    status: 'Active' | 'Pending' | 'Expired';
    flights: Array<{
        id: string;
        duration?: number | null;
        segments: Array<{
            id: string | null;
            duration?: number | null;
            stops?: number;
            aircraft: string;
            aircraft_name: string;
            airline: string;
            airline_name: string;
            airline_operating: string;
            airline_operating_name: string;
            flight_number: string;
            start_date: string;
            start_location: string;
            start_location_name: string;
            start_location_terminal: string;
            end_date: string;
            end_location: string;
            end_location_name: string;
            end_location_terminal: string;
        }>;
    }>;
    attributes: {
        seatmaps: Array<unknown>;
    };
} | {
    id: string;
    static_id?: string | null;
    ids?: string;
    supplier: 'viator' | 'tiqets' | 'simplenight';
    supplier_env: 'sandbox' | 'production';
    index: number;
    category: 'things-to-do';
    name: string;
    description: string;
    address: string;
    latitude: number;
    longitude: number;
    distance: number;
    distance_uom: 'km' | 'mi';
    images: Array<(string)>;
    currency?: string;
    tax?: number;
    price?: number;
    pay_at_property?: number;
    price_description: string;
    free_cancellation?: boolean;
    rating?: number;
    reviews?: number;
    variants: Array<{
        id: string;
        ids: string | null;
        name: string;
        description: string;
        images: Array<(string)>;
        index: number;
        tax?: number;
        price?: number;
        currency: string;
        cancel_policy?: Array<{
            type: 'FREE_CANCELLATION' | 'NOT_REFUNDABLE' | 'PARTIAL_REFUND';
            start: string;
            penalty_type?: 'PERCENT' | 'PRICE' | 'NIGHTS' | null;
            penalty_value?: number | null;
            penalty_currency?: string | null;
        }>;
        price_description: string;
        free_cancellation: boolean;
        attributes: {
            start_date: string;
            start_time?: string;
            booking_questions?: Array<{
                id: string;
                legacyBookingQuestionId?: number;
                group: 'PER_BOOKING' | 'PER_TRAVELER';
                type: 'STRING' | 'NUMBER_AND_UNIT' | 'DATE' | 'TIME' | 'LOCATION_REF_OR_FREE_TEXT';
                required: 'MANDATORY' | 'OPTIONAL' | 'CONDITIONAL';
                label: string;
                hint?: string;
                maxLength?: number;
                travelerNum?: number;
                units?: Array<('LOCATION_REFERENCE' | 'FREETEXT')>;
                allowedAnswers?: Array<(string)>;
            }>;
        };
    }>;
    status: 'Active' | 'Pending' | 'Expired';
    attributes: {
        tags: Array<(string)>;
        adults: number;
        children: number;
        start_date: string;
        start_time?: string;
        nights?: number;
        company?: string;
        start_location?: string;
        pickup_description?: string;
        pickup_locations?: Array<Array<(string)>>;
        duration: number;
        includes?: Array<(string)>;
        excludes?: Array<(string)>;
        itinerary?: Array<Array<(string)>>;
        policies?: Array<(string)>;
        booking_questions?: Array<unknown>;
    };
} | {
    id: string;
    ids?: string;
    supplier: 'ticketnetwork';
    supplier_env: 'sandbox' | 'production';
    index: number;
    category: 'shows-events';
    name: string;
    description: string;
    address: string;
    latitude: number;
    longitude: number;
    distance: number;
    distance_uom: 'km' | 'mi';
    images: Array<(string)>;
    supplier_tax?: number;
    supplier_price?: number;
    supplier_currency?: string;
    currency?: string;
    tax?: number;
    price?: number;
    price_description: string;
    free_cancellation?: boolean | null;
    rating?: number;
    reviews?: number;
    status: 'Active' | 'Pending' | 'Expired';
    attributes: {
        date: string;
        tags: Array<(string)>;
        venue: string;
        capacity: number;
        performers: Array<(string)>;
        sections: Array<(string)>;
        map: string;
    };
    tickets: Array<{
        id: number;
        ids: number;
        index: number;
        section: string;
        row: string;
        seat_low: string;
        seat_high: string;
        description: string;
        delivery: Array<(string)>;
        qty: number;
        qtys: Array<(number)>;
        supplier_tax?: number;
        supplier_price?: number;
        supplier_currency?: string;
        currency?: string;
        tax?: number;
        price?: number;
        price_description: string;
        free_cancellation: boolean;
    }>;
} | {
    id: string;
    ids?: string;
    supplier: 'parkopedia';
    supplier_env: 'sandbox' | 'production';
    index: number;
    category: 'parking';
    name: string;
    description: string;
    address: string;
    latitude: number;
    longitude: number;
    distance: number;
    distance_uom: 'km' | 'mi';
    images: Array<(string)>;
    supplier_tax?: number;
    supplier_price?: number;
    supplier_currency?: string;
    currency?: string;
    tax?: number;
    price?: number;
    price_description: string;
    rating?: number;
    reviews?: number;
    status: 'Active' | 'Pending' | 'Expired';
    free_cancellation?: boolean | null;
    attributes: {
        start_date: string;
        start_location: string;
        end_date: string;
        reservations: boolean;
        type: 'ON_STREET' | 'OFF_STREET';
        height: number;
        company: string;
        reviews: Array<{
            id?: number;
            ids?: number;
            date?: string;
            image?: string;
            name?: string;
            review?: string;
            rating?: number;
        }>;
        surface: string;
        capacity: number;
        features: Array<(string)>;
        location_id?: string;
        times: {
            open: Array<{
                days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                from: string;
                to: string;
            }>;
            restricted?: Array<{
                reason?: string;
                exceptions?: Array<{
                    type?: string;
                    max_stay?: string;
                }>;
                active_times: Array<{
                    days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                    from: string;
                    to: string;
                }>;
            }>;
        };
        rates: Array<{
            eligibility: 'DEFAULT' | 'RESIDENTS' | 'VALET' | 'EVENT' | 'VALIDATION' | 'VISITORS' | 'DURATION_ADDITIONAL';
            max_stay?: string;
            rates?: Array<{
                type: 'CUSTOM' | 'DURATION' | 'DURATION_ADDITIONAL';
                price: number;
                value: string;
                conditions?: Array<{
                    days?: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                    exit?: {
                        start?: string;
                        end?: string;
                    };
                    enter?: {
                        start?: string;
                        end?: string;
                    };
                    max_stay?: string;
                }>;
            }>;
            active_times?: Array<{
                days: Array<('MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN')>;
                from: string;
                to: string;
            }>;
        }>;
        availability?: {
            quote_reference?: string;
            error?: string;
        } | null;
        categories?: Array<(string)>;
        phone?: string;
    };
} | {
    id: string;
    ids?: string;
    supplier: 'mozio';
    supplier_env: 'sandbox' | 'production';
    index: number;
    category: 'transportation';
    name: string;
    description: string;
    address: string;
    latitude: number;
    longitude: number;
    distance: number;
    distance_uom: 'km' | 'mi';
    images: Array<(string)>;
    supplier_tax?: number;
    supplier_price?: number;
    supplier_currency?: string;
    currency?: string;
    tax?: number;
    price?: number;
    price_description: string;
    free_cancellation: boolean;
    rating?: number;
    reviews?: number;
    status: 'Active' | 'Pending' | 'Expired';
    attributes: {
        start_date: string;
        end_date: string;
        start_location: string;
        end_location: string;
        bags: number;
        type: string;
        class: string;
        adults: number;
        infants: number;
        children: number;
        direction: 'OneWay' | 'RoundTrip';
        passengers: number;
        company: string;
        company_logo?: string;
        amenities: Array<{
            id: string;
            name: string;
            price: number;
            images: Array<(string)>;
            currency: string;
            included: boolean;
            description: string;
        }>;
    };
} | {
    id: string;
    ids?: string;
    supplier: 'yelp' | 'opentable';
    supplier_env: 'sandbox' | 'production';
    index: number;
    category: 'dining';
    name: string;
    description: string;
    address: string;
    latitude: number;
    longitude: number;
    distance: number;
    distance_uom: 'km' | 'mi';
    images: Array<(string)>;
    supplier_tax?: number;
    supplier_price?: number;
    supplier_currency?: string;
    currency?: string;
    tax?: number;
    price?: number;
    price_description: string;
    rating?: number;
    reviews?: number;
    status: 'Active' | 'Pending' | 'Expired';
    attributes: {
        phone: string;
        adults: number;
        children: number;
        categories: Array<(string)>;
        start_date: string;
        start_location: string;
        reservations: boolean;
        reviews: Array<{
            id: number;
            ids: string;
            name: string;
            image?: string;
            rating: number;
            review: string;
            date: string;
        }>;
        hours: Array<({
            start: string;
            end: string;
            day: number;
            start2?: string;
            end2?: string;
        } | null)>;
        availabilities: Array<(string)>;
    };
};
        booking_data?: unknown;
        created_at: string;
        updated_at: string;
    }>;
    session_id?: string | null;
    created_at: string;
    updated_at: string;
};

export type status3 = 'Active' | 'Inactive';

export type ConfigWebFindOneData = {
    /**
     * Hostname
     */
    hostname?: string;
    /**
     * Content language
     */
    language: string;
    /**
     * Tenant Id
     */
    tenantId?: string;
};

export type ConfigWebFindOneResponse = ConfigWebFindOneResponseDto;

export type ConfigMobileFindOneData = {
    /**
     * Hostname
     */
    hostname?: string;
    /**
     * Content language
     */
    language: string;
    /**
     * Tenant Id
     */
    tenantId?: string;
};

export type ConfigMobileFindOneResponse = ConfigMobileFindOneResponseDto;

export type HotelsSearchData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: HotelsSearchRequestDto;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type HotelsSearchResponse = HotelsSearchResponseDto;

export type HotelsSearchPollData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: HotelsSearchPollRequestDto;
    searchId: string;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type HotelsSearchPollResponse = HotelsSearchPollResponseDto;

export type HotelsDetailsData = {
    adults?: string;
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    /**
     * List of ages
     */
    children?: string;
    /**
     * Currency code.
     */
    currency: string;
    endDate?: string;
    /**
     * Content language.
     */
    language: string;
    productId: string;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: 'true' | 'false';
    rooms?: number;
    startDate?: string;
    /**
     * Search point coordinates
     */
    startLocation?: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type HotelsDetailsResponse = HotelsDetailsResponseDto;

export type HotelsSearchSuggestionsData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Content language.
     */
    language: string;
    limit?: number;
    productId: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type HotelsSearchSuggestionsResponse = HotelsSuggestionsResponseDto;

export type FlightsSearchData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: FlightsSearchRequestDto;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type FlightsSearchResponse = FlightsSearchResponseDto;

export type FlightsSearchPollData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: FlightsSearchPollRequestDto;
    searchId: string;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type FlightsSearchPollResponse = FlightsSearchPollResponseDto;

export type FlightsDetailsData = {
    adults?: string;
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    /**
     * Include availability information.
     */
    availability: 'true' | 'false';
    /**
     * List of ages
     */
    children?: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Include detailed information.
     */
    details: 'true' | 'false';
    endDate?: string;
    /**
     * Content language.
     */
    language: string;
    productId: string;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: 'true' | 'false';
    rooms?: number;
    /**
     * Include seatmaps.
     */
    seatmaps: 'true' | 'false';
    startDate?: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type FlightsDetailsResponse = FlightsDetailsResponseDto;

export type CarsSearchData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: CarsSearchRequestDto;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type CarsSearchResponse = CarsSearchResponseDto;

export type CarsSearchPollData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: CarsSearchPollRequestDto;
    searchId: string;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type CarsSearchPollResponse = CarsSearchPollResponseDto;

export type CarsSearchSuggestionsData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Content language.
     */
    language: string;
    limit?: number;
    productId: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type CarsSearchSuggestionsResponse = CarsSuggestionsResponseDto;

export type CarsDetailsData = {
    adults?: string;
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    /**
     * List of ages
     */
    children?: string;
    /**
     * Currency code.
     */
    currency: string;
    details?: 'true' | 'false';
    endDate?: string;
    /**
     * Content language.
     */
    language: string;
    productId: string;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: 'true' | 'false';
    startDate?: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type CarsDetailsResponse = CarsDetailsResponseDto;

export type ThingsSearchData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: ThingsSearchRequestDto;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type ThingsSearchResponse = ThingsSearchResponseDto;

export type ThingsSearchPollData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: ThingsSearchPollRequestDto;
    searchId: string;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type ThingsSearchPollResponse = ThingsSearchPollResponseDto;

export type ThingsSearchSuggestionsData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Content language.
     */
    language: string;
    limit?: number;
    productId: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type ThingsSearchSuggestionsResponse = ThingsSuggestionsResponseDto;

export type ThingsDetailsData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    availability?: 'true' | 'false';
    availabilityAdults: string;
    availabilityChildren: string;
    availabilityDate: string;
    bookingQuestions?: unknown;
    /**
     * Currency code.
     */
    currency: string;
    details?: 'true' | 'false';
    /**
     * Content language.
     */
    language: string;
    productId: string;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: 'true' | 'false';
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type ThingsDetailsResponse = ThingsDetailsResponseDto;

export type DiningSearchData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: DiningSearchRequestDto;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type DiningSearchResponse = DiningSearchResponseDto;

export type DiningSearchPollData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: DiningSearchPollRequestDto;
    searchId: string;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type DiningSearchPollResponse = DiningSearchPollResponseDto;

export type DiningSearchSuggestionsData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Content language.
     */
    language: string;
    limit?: number;
    productId: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type DiningSearchSuggestionsResponse = DiningSuggestionsResponseDto;

export type DiningDetailsData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    availability?: 'true' | 'false';
    availabilityAdults: number;
    availabilityChildren: number;
    availabilityDate: string;
    /**
     * Currency code.
     */
    currency: string;
    details?: 'true' | 'false';
    /**
     * Content language.
     */
    language: string;
    productId: string;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: 'true' | 'false';
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type DiningDetailsResponse = DiningDetailsResponseDto;

export type ParkingSearchData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: ParkingSearchRequestDto;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type ParkingSearchResponse = ParkingSearchResponseDto;

export type ParkingSearchPollData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: ParkingSearchPollRequestDto;
    searchId: string;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type ParkingSearchPollResponse = ParkingSearchPollResponseDto;

export type ParkingSearchSuggestionsData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Content language.
     */
    language: string;
    limit?: number;
    productId: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type ParkingSearchSuggestionsResponse = ParkingSuggestionsResponseDto;

export type ParkingDetailsData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    availability?: 'true' | 'false';
    bookingQuestions?: {
        start_date?: string;
        end_date?: string;
        license_id?: string;
        country?: string;
        state?: string;
    };
    /**
     * Currency code.
     */
    currency: string;
    details?: 'true' | 'false';
    /**
     * Content language.
     */
    language: string;
    productId: string;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: 'true' | 'false';
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type ParkingDetailsResponse = ParkingDetailsResponseDto;

export type ShowsSearchData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: ShowsSearchRequestDto;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type ShowsSearchResponse = ShowsSearchResponseDto;

export type ShowsSearchPollData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: ShowsSearchPollRequestDto;
    searchId: string;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type ShowsSearchPollResponse = ShowsSearchPollResponseDto;

export type ShowsSearchSuggestionsData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Content language.
     */
    language: string;
    limit?: number;
    productId: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type ShowsSearchSuggestionsResponse = ShowsSuggestionsResponseDto;

export type ShowsDetailsData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Content language.
     */
    language: string;
    productId: string;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: 'true' | 'false';
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type ShowsDetailsResponse = ShowsDetailsResponseDto;

export type TransportationSearchData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: TransportationSearchRequestDto;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type TransportationSearchResponse = TransportationSearchResponseDto;

export type TransportationSearchPollData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    requestBody: TransportationSearchPollRequestDto;
    searchId: string;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type TransportationSearchPollResponse = TransportationSearchPollResponseDto;

export type TransportationSearchSuggestionsData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Content language.
     */
    language: string;
    limit?: number;
    productId: string;
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type TransportationSearchSuggestionsResponse = TransportationSuggestionsResponseDto;

export type TransportationDetailsData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    /**
     * Currency code.
     */
    currency: string;
    details?: 'true' | 'false';
    /**
     * Content language.
     */
    language: string;
    productId: string;
    /**
     * Debug mode. Return raw data without normalization. Dev only.
     */
    raw?: 'true' | 'false';
    /**
     * Unit of measure (km or mi).
     */
    uom: 'km' | 'mi';
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type TransportationDetailsResponse = TransportationDetailsResponseDto;

export type AuthUserControllerCheckData = {
    /**
     * User Bearer JWT token
     */
    authorization: string;
};

export type AuthUserControllerCheckResponse = UserResponseDto;

export type AuthUserControllerLoginData = {
    requestBody: UserLoginRequestDto;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type AuthUserControllerLoginResponse = UserLoginResponseDto;

export type AuthUserControllerRefreshResponse = UserRefreshResponseDto;

export type BookingsSendTestEmailResponse = unknown;

export type CartsFindOneData = {
    /**
     * User Bearer JWT token
     */
    authorization?: string;
    cartId: string;
    /**
     * Currency code.
     */
    currency: string;
    /**
     * Tenant API token header
     */
    xApiKey: string;
};

export type CartsFindOneResponse = CartsFindOneResponseDto;

export type $OpenApiTs = {
    '/api/v1/config-web': {
        get: {
            req: ConfigWebFindOneData;
            res: {
                /**
                 * Success
                 */
                200: ConfigWebFindOneResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
            };
        };
    };
    '/api/v1/config-mobile': {
        get: {
            req: ConfigMobileFindOneData;
            res: {
                /**
                 * Success
                 */
                200: ConfigMobileFindOneResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
            };
        };
    };
    '/api/v1/products/hotels/search': {
        post: {
            req: HotelsSearchData;
            res: {
                /**
                 * Created
                 */
                201: HotelsSearchResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/hotels/search/poll/{searchId}': {
        post: {
            req: HotelsSearchPollData;
            res: {
                /**
                 * Success
                 */
                200: HotelsSearchPollResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/hotels/{productId}': {
        get: {
            req: HotelsDetailsData;
            res: {
                /**
                 * Success
                 */
                200: HotelsDetailsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/hotels/{productId}/suggestions': {
        get: {
            req: HotelsSearchSuggestionsData;
            res: {
                /**
                 * Success
                 */
                200: HotelsSuggestionsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/flights/search': {
        post: {
            req: FlightsSearchData;
            res: {
                /**
                 * Created
                 */
                201: FlightsSearchResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/flights/search/poll/{searchId}': {
        post: {
            req: FlightsSearchPollData;
            res: {
                /**
                 * Success
                 */
                200: FlightsSearchPollResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/flights/{productId}': {
        get: {
            req: FlightsDetailsData;
            res: {
                /**
                 * Success
                 */
                200: FlightsDetailsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/car-rental/search': {
        post: {
            req: CarsSearchData;
            res: {
                /**
                 * Created
                 */
                201: CarsSearchResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/car-rental/search/poll/{searchId}': {
        post: {
            req: CarsSearchPollData;
            res: {
                /**
                 * Success
                 */
                200: CarsSearchPollResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/car-rental/{productId}/suggestions': {
        get: {
            req: CarsSearchSuggestionsData;
            res: {
                /**
                 * Success
                 */
                200: CarsSuggestionsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/car-rental/{productId}': {
        get: {
            req: CarsDetailsData;
            res: {
                /**
                 * Success
                 */
                200: CarsDetailsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/things-to-do/search': {
        post: {
            req: ThingsSearchData;
            res: {
                /**
                 * Created
                 */
                201: ThingsSearchResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/things-to-do/search/poll/{searchId}': {
        post: {
            req: ThingsSearchPollData;
            res: {
                /**
                 * Success
                 */
                200: ThingsSearchPollResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/things-to-do/{productId}/suggestions': {
        get: {
            req: ThingsSearchSuggestionsData;
            res: {
                /**
                 * Success
                 */
                200: ThingsSuggestionsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/things-to-do/{productId}': {
        get: {
            req: ThingsDetailsData;
            res: {
                /**
                 * Success
                 */
                200: ThingsDetailsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/dining/search': {
        post: {
            req: DiningSearchData;
            res: {
                /**
                 * Created
                 */
                201: DiningSearchResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/dining/search/poll/{searchId}': {
        post: {
            req: DiningSearchPollData;
            res: {
                /**
                 * Success
                 */
                200: DiningSearchPollResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/dining/{productId}/suggestions': {
        get: {
            req: DiningSearchSuggestionsData;
            res: {
                /**
                 * Success
                 */
                200: DiningSuggestionsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/dining/{productId}': {
        get: {
            req: DiningDetailsData;
            res: {
                /**
                 * Success
                 */
                200: DiningDetailsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/parking/search': {
        post: {
            req: ParkingSearchData;
            res: {
                /**
                 * Created
                 */
                201: ParkingSearchResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/parking/search/poll/{searchId}': {
        post: {
            req: ParkingSearchPollData;
            res: {
                /**
                 * Success
                 */
                200: ParkingSearchPollResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/parking/{productId}/suggestions': {
        get: {
            req: ParkingSearchSuggestionsData;
            res: {
                /**
                 * Success
                 */
                200: ParkingSuggestionsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/parking/{productId}': {
        get: {
            req: ParkingDetailsData;
            res: {
                /**
                 * Success
                 */
                200: ParkingDetailsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/shows-and-events/search': {
        post: {
            req: ShowsSearchData;
            res: {
                /**
                 * Created
                 */
                201: ShowsSearchResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/shows-and-events/search/poll/{searchId}': {
        post: {
            req: ShowsSearchPollData;
            res: {
                /**
                 * Success
                 */
                200: ShowsSearchPollResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/shows-and-events/{productId}/suggestions': {
        get: {
            req: ShowsSearchSuggestionsData;
            res: {
                /**
                 * Success
                 */
                200: ShowsSuggestionsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/shows-and-events/{productId}': {
        get: {
            req: ShowsDetailsData;
            res: {
                /**
                 * Success
                 */
                200: ShowsDetailsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/transportation/search': {
        post: {
            req: TransportationSearchData;
            res: {
                /**
                 * Created
                 */
                201: TransportationSearchResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/transportation/search/poll/{searchId}': {
        post: {
            req: TransportationSearchPollData;
            res: {
                /**
                 * Success
                 */
                200: TransportationSearchPollResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/transportation/{productId}/suggestions': {
        get: {
            req: TransportationSearchSuggestionsData;
            res: {
                /**
                 * Success
                 */
                200: TransportationSuggestionsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/v1/products/transportation/{productId}': {
        get: {
            req: TransportationDetailsData;
            res: {
                /**
                 * Success
                 */
                200: TransportationDetailsResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
    '/api/commerce/v1/auth': {
        get: {
            req: AuthUserControllerCheckData;
            res: {
                /**
                 * Success
                 */
                200: UserResponseDto;
                /**
                 * Bad request: Data validation failed
                 */
                400: BadRequestExceptionDto;
                /**
                 * Unauthorized: JWT token not valid
                 */
                401: UnauthorizedExceptionDto;
            };
        };
    };
    '/api/commerce/v1/auth/login': {
        post: {
            req: AuthUserControllerLoginData;
            res: {
                /**
                 * Success
                 */
                201: UserLoginResponseDto;
                /**
                 * Unauthorized: apiKey, email or password did not match
                 */
                401: UnauthorizedExceptionDto;
            };
        };
    };
    '/api/commerce/v1/auth/refresh-tokens': {
        post: {
            res: {
                /**
                 * Success
                 */
                201: UserRefreshResponseDto;
                /**
                 * Bad request: data validation failed
                 */
                400: BadRequestExceptionDto;
                /**
                 * Unauthorized: refresh token is not valid
                 */
                401: UnauthorizedExceptionDto;
            };
        };
    };
    '/api/v1/commerce/bookings/send-test-email': {
        get: {
            res: {
                /**
                 * Success
                 */
                200: unknown;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
            };
        };
    };
    '/api/v1/carts/{cartId}': {
        get: {
            req: CartsFindOneData;
            res: {
                /**
                 * Success
                 */
                200: CartsFindOneResponseDto;
                /**
                 * Bad request
                 */
                400: ZodValidationErrorDto;
                /**
                 * Unauthorized: user jwt token is invalid
                 */
                401: UnauthorizedExceptionResponseDto;
            };
        };
    };
};